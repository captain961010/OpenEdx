{"version":3,"file":"678.d633feefb6ea58eb0adf.js","mappings":"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","sources":["webpack://@edx/frontend-app-course-authoring/./src/pages-and-resources/app-settings-modal/messages.js","webpack://@edx/frontend-app-course-authoring/./src/pages-and-resources/app-settings-modal/AppSettingsModal.jsx","webpack://@edx/frontend-app-course-authoring/./src/pages-and-resources/calculator/messages.js","webpack://@edx/frontend-app-course-authoring/./src/pages-and-resources/calculator/Settings.jsx"],"sourcesContent":["import { defineMessages } from '@edx/frontend-platform/i18n';\n\nconst messages = defineMessages({\n  cancel: {\n    id: 'course-authoring.pages-resources.app-settings-modal.button.cancel',\n    defaultMessage: 'Cancel',\n  },\n  save: {\n    id: 'course-authoring.pages-resources.app-settings-modal.button.save',\n    defaultMessage: 'Save',\n  },\n  saving: {\n    id: 'course-authoring.pages-resources.app-settings-modal.button.saving',\n    defaultMessage: 'Saving',\n  },\n  saved: {\n    id: 'course-authoring.pages-resources.app-settings-modal.button.saved',\n    defaultMessage: 'Saved',\n  },\n  retry: {\n    id: 'course-authoring.pages-resources.app-settings-modal.button.retry',\n    defaultMessage: 'Retry',\n  },\n  enabled: {\n    id: 'course-authoring.pages-resources.app-settings-modal.badge.enabled',\n    defaultMessage: 'Enabled',\n  },\n  disabled: {\n    id: 'course-authoring.pages-resources.app-settings-modal.badge.disabled',\n    defaultMessage: 'Disabled',\n  },\n  errorSavingTitle: {\n    id: 'course-authoring.pages-resources.app-settings-modal.save-error.title',\n    defaultMessage: 'We couldn\\'t apply your changes.',\n  },\n  errorSavingMessage: {\n    id: 'course-authoring.pages-resources.app-settings-modal.save-error.message',\n    defaultMessage: 'Please check your entries and try again.',\n  },\n});\n\nexport default messages;\n","import { injectIntl, intlShape } from '@edx/frontend-platform/i18n';\nimport {\n  ActionRow,\n  Alert,\n  Badge,\n  Form,\n  Hyperlink,\n  ModalDialog,\n  StatefulButton,\n  TransitionReplace,\n} from '@edx/paragon';\nimport { Info } from '@edx/paragon/icons';\n\nimport { Formik } from 'formik';\nimport PropTypes from 'prop-types';\nimport React, {\n  useContext, useEffect, useRef, useState,\n} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as Yup from 'yup';\n\nimport { RequestStatus } from '../../data/constants';\nimport ConnectionErrorAlert from '../../generic/ConnectionErrorAlert';\nimport FormSwitchGroup from '../../generic/FormSwitchGroup';\nimport Loading from '../../generic/Loading';\nimport { useModel } from '../../generic/model-store';\nimport PermissionDeniedAlert from '../../generic/PermissionDeniedAlert';\nimport { useIsMobile } from '../../utils';\nimport { getLoadingStatus, getSavingStatus } from '../data/selectors';\nimport { updateSavingStatus } from '../data/slice';\nimport { updateAppStatus } from '../data/thunks';\nimport AppConfigFormDivider from '../discussions/app-config-form/apps/shared/AppConfigFormDivider';\nimport { PagesAndResourcesContext } from '../PagesAndResourcesProvider';\nimport messages from './messages';\n\nconst AppSettingsForm = ({\n  formikProps, children, showForm,\n}) => children && (\n  <TransitionReplace>\n    {showForm ? (\n      <React.Fragment key=\"app-enabled\">\n        {children(formikProps)}\n      </React.Fragment>\n    ) : (\n      <React.Fragment key=\"app-disabled\" />\n    )}\n  </TransitionReplace>\n);\n\nAppSettingsForm.propTypes = {\n  // Ignore the warning here since we're just passing along the props as-is and the child component should validate\n  // eslint-disable-next-line react/forbid-prop-types\n  formikProps: PropTypes.object.isRequired,\n  showForm: PropTypes.bool.isRequired,\n  children: PropTypes.func,\n};\n\nAppSettingsForm.defaultProps = {\n  children: null,\n};\n\nconst AppSettingsModalBase = ({\n  intl, title, onClose, variant, isMobile, children, footer,\n}) => (\n  <ModalDialog\n    title={title}\n    isOpen\n    onClose={onClose}\n    size=\"lg\"\n    variant={variant}\n    hasCloseButton={isMobile}\n    isFullscreenOnMobile\n  >\n    <ModalDialog.Header>\n      <ModalDialog.Title data-testid=\"modal-title\">\n        {title}\n      </ModalDialog.Title>\n    </ModalDialog.Header>\n    <ModalDialog.Body>\n      {children}\n    </ModalDialog.Body>\n    <ModalDialog.Footer className=\"p-4\">\n      <ActionRow>\n        <ModalDialog.CloseButton variant=\"tertiary\">\n          {intl.formatMessage(messages.cancel)}\n        </ModalDialog.CloseButton>\n        {footer}\n      </ActionRow>\n    </ModalDialog.Footer>\n  </ModalDialog>\n);\n\nAppSettingsModalBase.propTypes = {\n  intl: intlShape.isRequired,\n  title: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n  variant: PropTypes.oneOf(['default', 'dark']).isRequired,\n  isMobile: PropTypes.bool.isRequired,\n  children: PropTypes.node.isRequired,\n  footer: PropTypes.node,\n};\n\nAppSettingsModalBase.defaultProps = {\n  footer: null,\n};\n\nconst AppSettingsModal = ({\n  intl,\n  appId,\n  title,\n  children,\n  configureBeforeEnable,\n  initialValues,\n  validationSchema,\n  onClose,\n  onSettingsSave,\n  enableAppLabel,\n  enableAppHelp,\n  learnMoreText,\n  enableReinitialize,\n  hideAppToggle,\n}) => {\n  const { courseId } = useContext(PagesAndResourcesContext);\n  const loadingStatus = useSelector(getLoadingStatus);\n  const updateSettingsRequestStatus = useSelector(getSavingStatus);\n  const alertRef = useRef(null);\n  const [saveError, setSaveError] = useState(false);\n  const appInfo = useModel('courseApps', appId);\n  const dispatch = useDispatch();\n  const submitButtonState = updateSettingsRequestStatus === RequestStatus.IN_PROGRESS ? 'pending' : 'default';\n  const isMobile = useIsMobile();\n  const modalVariant = isMobile ? 'dark' : 'default';\n\n  useEffect(() => {\n    if (updateSettingsRequestStatus === RequestStatus.SUCCESSFUL) {\n      dispatch(updateSavingStatus({ status: '' }));\n      onClose();\n    }\n  }, [updateSettingsRequestStatus]);\n\n  const handleFormSubmit = async (values) => {\n    let success = true;\n    if (appInfo.enabled !== values.enabled) {\n      success = await dispatch(updateAppStatus(courseId, appInfo.id, values.enabled));\n    }\n    // Call the submit handler for the settings component to save its settings\n    if (onSettingsSave) {\n      success = success && await onSettingsSave(values);\n    }\n    await setSaveError(!success);\n    !success && alertRef?.current.scrollIntoView(); // eslint-disable-line no-unused-expressions\n  };\n\n  const handleFormikSubmit = ({ handleSubmit, errors }) => async (event) => {\n    // If submitting the form with errors, show the alert and scroll to it.\n    await handleSubmit(event);\n    if (Object.keys(errors).length > 0) {\n      await setSaveError(true);\n      alertRef?.current.scrollIntoView?.(); // eslint-disable-line no-unused-expressions\n    }\n  };\n\n  const learnMoreLink = appInfo.documentationLinks?.learnMoreConfiguration && (\n    <Hyperlink\n      className=\"text-primary-500\"\n      destination={appInfo.documentationLinks.learnMoreConfiguration}\n      target=\"_blank\"\n      rel=\"noreferrer noopener\"\n    >\n      {learnMoreText}\n    </Hyperlink>\n  );\n\n  if (loadingStatus === RequestStatus.SUCCESSFUL) {\n    return (\n      <Formik\n        initialValues={{\n          enabled: !!appInfo?.enabled,\n          ...initialValues,\n        }}\n        validationSchema={\n          Yup.object()\n            .shape({\n              enabled: Yup.boolean(),\n              ...validationSchema,\n            })\n        }\n        onSubmit={handleFormSubmit}\n        enableReinitialize={enableReinitialize}\n      >\n        {(formikProps) => (\n          <Form onSubmit={handleFormikSubmit(formikProps)}>\n            <AppSettingsModalBase\n              title={title}\n              isOpen\n              onClose={onClose}\n              variant={modalVariant}\n              isMobile={isMobile}\n              isFullscreenOnMobile\n              intl={intl}\n              footer={(\n                <StatefulButton\n                  labels={{\n                    default: intl.formatMessage(messages.save),\n                    pending: intl.formatMessage(messages.saving),\n                    complete: intl.formatMessage(messages.saved),\n                  }}\n                  state={submitButtonState}\n                  onClick={handleFormikSubmit(formikProps)}\n                />\n              )}\n            >\n              {saveError && (\n                <Alert variant=\"danger\" icon={Info} ref={alertRef}>\n                  <Alert.Heading>\n                    {formikProps.errors.enabled?.title || intl.formatMessage(messages.errorSavingTitle)}\n                  </Alert.Heading>\n                  {formikProps.errors.enabled?.message || intl.formatMessage(messages.errorSavingMessage)}\n                </Alert>\n              )}\n              {!hideAppToggle && (\n                <FormSwitchGroup\n                  id={`enable-${appId}-toggle`}\n                  name=\"enabled\"\n                  onChange={(event) => formikProps.handleChange(event)}\n                  onBlur={formikProps.handleBlur}\n                  checked={formikProps.values.enabled}\n                  label={(\n                    <div className=\"d-flex align-items-center\">\n                      {enableAppLabel}\n                      {formikProps.values.enabled && (\n                        <Badge className=\"ml-2\" variant=\"success\" data-testid=\"enable-badge\">\n                          {intl.formatMessage(messages.enabled)}\n                        </Badge>\n                      )}\n                    </div>\n                  )}\n                  helpText={(\n                    <div>\n                      <p>{enableAppHelp}</p>\n                      <span className=\"py-3\">{learnMoreLink}</span>\n                    </div>\n                  )}\n                />\n              )}\n              {(formikProps.values.enabled || configureBeforeEnable) && children\n                && <AppConfigFormDivider marginAdj={{ default: 0, sm: 0 }} />}\n              <AppSettingsForm formikProps={formikProps} showForm={formikProps.values.enabled || configureBeforeEnable}>\n                {children}\n              </AppSettingsForm>\n            </AppSettingsModalBase>\n          </Form>\n        )}\n      </Formik>\n    );\n  }\n  return (\n    <AppSettingsModalBase\n      intl={intl}\n      title={title}\n      isOpen\n      onClose={onClose}\n      size=\"sm\"\n      variant={modalVariant}\n      isMobile={isMobile}\n      isFullscreenOnMobile\n    >\n      {loadingStatus === RequestStatus.IN_PROGRESS && <Loading />}\n      {loadingStatus === RequestStatus.FAILED && <ConnectionErrorAlert />}\n      {loadingStatus === RequestStatus.DENIED && <PermissionDeniedAlert />}\n    </AppSettingsModalBase>\n  );\n};\n\nAppSettingsModal.propTypes = {\n  intl: intlShape.isRequired,\n  title: PropTypes.string.isRequired,\n  appId: PropTypes.string.isRequired,\n  children: PropTypes.func,\n  onSettingsSave: PropTypes.func,\n  initialValues: PropTypes.shape({}),\n  validationSchema: PropTypes.shape({}),\n  onClose: PropTypes.func.isRequired,\n  enableAppLabel: PropTypes.string.isRequired,\n  enableAppHelp: PropTypes.string.isRequired,\n  learnMoreText: PropTypes.string.isRequired,\n  configureBeforeEnable: PropTypes.bool,\n  enableReinitialize: PropTypes.bool,\n  hideAppToggle: PropTypes.bool,\n};\n\nAppSettingsModal.defaultProps = {\n  children: null,\n  onSettingsSave: null,\n  initialValues: {},\n  validationSchema: {},\n  configureBeforeEnable: false,\n  enableReinitialize: false,\n  hideAppToggle: false,\n};\n\nexport default injectIntl(AppSettingsModal);\n","import { defineMessages } from '@edx/frontend-platform/i18n';\n\nconst messages = defineMessages({\n  heading: {\n    id: 'course-authoring.pages-resources.calculator.heading',\n    defaultMessage: 'Configure calculator',\n  },\n  enableCalculatorLabel: {\n    id: 'course-authoring.pages-resources.calculator.enable-calculator.label',\n    defaultMessage: 'Calculator',\n  },\n  enableCalculatorHelp: {\n    id: 'course-authoring.pages-resources.calculator.enable-calculator.help',\n    defaultMessage: `The calculator supports numbers, operators, constants,\n      functions, and other mathematical concepts. When enabled, an icon to\n      access the calculator appears on all pages in the body of your course.`,\n  },\n  enableCalculatorLink: {\n    id: 'course-authoring.pages-resources.calculator.enable-calculator.link',\n    defaultMessage: 'Learn more about the calculator',\n  },\n});\n\nexport default messages;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { injectIntl, intlShape } from '@edx/frontend-platform/i18n';\n\nimport AppSettingsModal from '../app-settings-modal/AppSettingsModal';\nimport messages from './messages';\n\nconst CalculatorSettings = ({ intl, onClose }) => (\n  <AppSettingsModal\n    appId=\"calculator\"\n    title={intl.formatMessage(messages.heading)}\n    enableAppHelp={intl.formatMessage(messages.enableCalculatorHelp)}\n    enableAppLabel={intl.formatMessage(messages.enableCalculatorLabel)}\n    learnMoreText={intl.formatMessage(messages.enableCalculatorLink)}\n    onClose={onClose}\n  />\n);\n\nCalculatorSettings.propTypes = {\n  intl: intlShape.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default injectIntl(CalculatorSettings);\n"],"names":["defineMessages","cancel","id","defaultMessage","save","saving","saved","retry","enabled","disabled","errorSavingTitle","errorSavingMessage","AppSettingsForm","_ref","formikProps","children","showForm","_jsx","TransitionReplace","React","propTypes","PropTypes","defaultProps","AppSettingsModalBase","_ref2","intl","title","onClose","variant","isMobile","footer","_jsxs","ModalDialog","isOpen","size","hasCloseButton","isFullscreenOnMobile","className","ActionRow","formatMessage","messages","intlShape","isRequired","AppSettingsModal","_ref3","appId","configureBeforeEnable","initialValues","validationSchema","onSettingsSave","enableAppLabel","enableAppHelp","learnMoreText","enableReinitialize","hideAppToggle","courseId","useContext","PagesAndResourcesContext","loadingStatus","useSelector","getLoadingStatus","updateSettingsRequestStatus","getSavingStatus","alertRef","useRef","saveError","setSaveError","useState","appInfo","useModel","dispatch","useDispatch","submitButtonState","RequestStatus","useIsMobile","modalVariant","useEffect","updateSavingStatus","status","handleFormikSubmit","_ref4","handleSubmit","errors","async","event","Object","keys","length","current","scrollIntoView","learnMoreLink","documentationLinks","learnMoreConfiguration","Hyperlink","destination","target","rel","Formik","_objectSpread","Yup","shape","onSubmit","success","values","updateAppStatus","Form","StatefulButton","labels","default","pending","complete","state","onClick","Alert","icon","Info","ref","message","FormSwitchGroup","name","onChange","handleChange","onBlur","handleBlur","checked","label","Badge","helpText","AppConfigFormDivider","marginAdj","sm","Loading","ConnectionErrorAlert","PermissionDeniedAlert","injectIntl","heading","enableCalculatorLabel","enableCalculatorHelp","enableCalculatorLink","CalculatorSettings"],"sourceRoot":""}