{"version":3,"file":"app.9fe7207c2cff1c2e64a9.js","mappings":"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","sources":["webpack://@edx/frontend-app-ora-grading/./src/utils/StrictDict.js","webpack://@edx/frontend-app-ora-grading/./src/data/constants/requests.js","webpack://@edx/frontend-app-ora-grading/./src/data/services/lms/constants.js","webpack://@edx/frontend-app-ora-grading/./src/data/redux/app/reducer.js","webpack://@edx/frontend-app-ora-grading/./src/data/redux/app/selectors.js","webpack://@edx/frontend-app-ora-grading/./src/data/redux/grading/reducer.js","webpack://@edx/frontend-app-ora-grading/./src/data/redux/grading/selectors/base.js","webpack://@edx/frontend-app-ora-grading/./src/data/redux/submissions/selectors.js","webpack://@edx/frontend-app-ora-grading/./src/data/redux/grading/selectors/selected.js","webpack://@edx/frontend-app-ora-grading/./src/data/redux/grading/selectors/nav.js","webpack://@edx/frontend-app-ora-grading/./src/data/redux/grading/selectors/validation.js","webpack://@edx/frontend-app-ora-grading/./src/data/redux/grading/selectors/index.js","webpack://@edx/frontend-app-ora-grading/./src/data/redux/requests/reducer.js","webpack://@edx/frontend-app-ora-grading/./src/data/redux/requests/selectors.js","webpack://@edx/frontend-app-ora-grading/./src/data/redux/submissions/reducer.js","webpack://@edx/frontend-app-ora-grading/./src/data/constants/app.js","webpack://@edx/frontend-app-ora-grading/./src/data/services/lms/urls.js","webpack://@edx/frontend-app-ora-grading/./src/data/services/lms/utils.js","webpack://@edx/frontend-app-ora-grading/./src/data/services/lms/api.js","webpack://@edx/frontend-app-ora-grading/./src/data/redux/thunkActions/requests.js","webpack://@edx/frontend-app-ora-grading/./src/data/redux/thunkActions/app.js","webpack://@edx/frontend-app-ora-grading/./src/data/redux/thunkActions/download.js","webpack://@edx/frontend-app-ora-grading/./src/data/redux/thunkActions/grading.js","webpack://@edx/frontend-app-ora-grading/./src/data/redux/thunkActions/index.js","webpack://@edx/frontend-app-ora-grading/./src/data/redux/index.js","webpack://@edx/frontend-app-ora-grading/./src/data/services/lms/fakeData/testUtils.js","webpack://@edx/frontend-app-ora-grading/./src/data/store.js","webpack://@edx/frontend-app-ora-grading/./src/i18n/index.js","webpack://@edx/frontend-app-ora-grading/./src/containers/DemoWarning/messages.js","webpack://@edx/frontend-app-ora-grading/./src/containers/DemoWarning/index.jsx","webpack://@edx/frontend-app-ora-grading/./src/containers/CTA/messages.js","webpack://@edx/frontend-app-ora-grading/./src/containers/CTA/index.jsx","webpack://@edx/frontend-app-ora-grading/./src/components/LoadingMessage.jsx","webpack://@edx/frontend-app-ora-grading/./src/data/services/lms/messages.js","webpack://@edx/frontend-app-ora-grading/./src/components/StatusBadge.jsx","webpack://@edx/frontend-app-ora-grading/./src/hooks.js","webpack://@edx/frontend-app-ora-grading/./src/components/ConfirmModal.jsx","webpack://@edx/frontend-app-ora-grading/./src/containers/ReviewActions/components/messages.js","webpack://@edx/frontend-app-ora-grading/./src/containers/ReviewActions/components/StopGradingConfirmModal.jsx","webpack://@edx/frontend-app-ora-grading/./src/containers/ReviewActions/components/OverrideGradeConfirmModal.jsx","webpack://@edx/frontend-app-ora-grading/./src/containers/ReviewActions/components/StartGradingButton/messages.js","webpack://@edx/frontend-app-ora-grading/./src/containers/ReviewActions/components/StartGradingButton/hooks.js","webpack://@edx/frontend-app-ora-grading/./src/containers/ReviewActions/components/StartGradingButton/index.jsx","webpack://@edx/frontend-app-ora-grading/./src/containers/ReviewActions/components/SubmissionNavigation.jsx","webpack://@edx/frontend-app-ora-grading/./src/containers/ReviewActions/messages.js","webpack://@edx/frontend-app-ora-grading/./src/containers/ReviewActions/index.jsx","webpack://@edx/frontend-app-ora-grading/./src/data/constants/files.js","webpack://@edx/frontend-app-ora-grading/./src/containers/ResponseDisplay/components/FileNameCell.jsx","webpack://@edx/frontend-app-ora-grading/./src/containers/ResponseDisplay/components/FileExtensionCell.jsx","webpack://@edx/frontend-app-ora-grading/./src/components/InfoPopover/messages.js","webpack://@edx/frontend-app-ora-grading/./src/components/InfoPopover/index.jsx","webpack://@edx/frontend-app-ora-grading/./src/components/FilePopoverContent/messages.js","webpack://@edx/frontend-app-ora-grading/./src/components/FilePopoverContent/index.jsx","webpack://@edx/frontend-app-ora-grading/./src/containers/ResponseDisplay/components/FilePopoverCell.jsx","webpack://@edx/frontend-app-ora-grading/./src/containers/ResponseDisplay/messages.js","webpack://@edx/frontend-app-ora-grading/./src/containers/ResponseDisplay/FileDownload.jsx","webpack://@edx/frontend-app-ora-grading/./src/containers/ResponseDisplay/SubmissionFiles.jsx","webpack://@edx/frontend-app-ora-grading/./src/components/FilePreview/messages.js","webpack://@edx/frontend-app-ora-grading/./src/components/FilePreview/FileInfo.jsx","webpack://@edx/frontend-app-ora-grading/./src/components/FilePreview/FileCard.jsx","webpack://@edx/frontend-app-ora-grading/./src/components/FilePreview/Banners/ErrorBanner.jsx","webpack://@edx/frontend-app-ora-grading/./src/components/FilePreview/Banners/LoadingBanner.jsx","webpack://@edx/frontend-app-ora-grading/./src/components/FilePreview/BaseRenderers/ImageRenderer.jsx","webpack://@edx/frontend-app-ora-grading/./src/components/FilePreview/BaseRenderers/pdfHooks.jsx","webpack://@edx/frontend-app-ora-grading/./src/components/FilePreview/BaseRenderers/PDFRenderer.jsx","webpack://@edx/frontend-app-ora-grading/./src/components/FilePreview/BaseRenderers/textHooks.js","webpack://@edx/frontend-app-ora-grading/./src/components/FilePreview/BaseRenderers/TXTRenderer.jsx","webpack://@edx/frontend-app-ora-grading/./src/components/FilePreview/hooks.js","webpack://@edx/frontend-app-ora-grading/./src/components/FilePreview/FileRenderer.jsx","webpack://@edx/frontend-app-ora-grading/./src/containers/ResponseDisplay/PreviewDisplay.jsx","webpack://@edx/frontend-app-ora-grading/./src/containers/ResponseDisplay/index.jsx","webpack://@edx/frontend-app-ora-grading/./src/components/DemoAlert/messages.js","webpack://@edx/frontend-app-ora-grading/./src/components/DemoAlert/index.jsx","webpack://@edx/frontend-app-ora-grading/./src/containers/CriterionContainer/messages.js","webpack://@edx/frontend-app-ora-grading/./src/containers/CriterionContainer/RadioCriterion.jsx","webpack://@edx/frontend-app-ora-grading/./src/containers/CriterionContainer/CriterionFeedback.jsx","webpack://@edx/frontend-app-ora-grading/./src/containers/CriterionContainer/ReviewCriterion.jsx","webpack://@edx/frontend-app-ora-grading/./src/containers/CriterionContainer/index.jsx","webpack://@edx/frontend-app-ora-grading/./src/containers/Rubric/messages.js","webpack://@edx/frontend-app-ora-grading/./src/containers/Rubric/RubricFeedback.jsx","webpack://@edx/frontend-app-ora-grading/./src/containers/Rubric/hooks.js","webpack://@edx/frontend-app-ora-grading/./src/containers/Rubric/index.jsx","webpack://@edx/frontend-app-ora-grading/./src/containers/ReviewModal/ReviewErrors/messages.js","webpack://@edx/frontend-app-ora-grading/./src/containers/ReviewModal/ReviewErrors/ReviewError.jsx","webpack://@edx/frontend-app-ora-grading/./src/containers/ReviewModal/ReviewErrors/FetchErrors.jsx","webpack://@edx/frontend-app-ora-grading/./src/containers/ReviewModal/ReviewErrors/LockErrors.jsx","webpack://@edx/frontend-app-ora-grading/./src/containers/ReviewModal/ReviewErrors/SubmitErrors/messages.js","webpack://@edx/frontend-app-ora-grading/./src/containers/ReviewModal/ReviewErrors/SubmitErrors/hooks.js","webpack://@edx/frontend-app-ora-grading/./src/containers/ReviewModal/ReviewErrors/SubmitErrors/index.jsx","webpack://@edx/frontend-app-ora-grading/./src/containers/ReviewModal/ReviewErrors/DownloadErrors.jsx","webpack://@edx/frontend-app-ora-grading/./src/containers/ReviewModal/ReviewErrors/index.jsx","webpack://@edx/frontend-app-ora-grading/./src/containers/ReviewModal/ReviewContent.jsx","webpack://@edx/frontend-app-ora-grading/./src/containers/ReviewModal/components/messages.js","webpack://@edx/frontend-app-ora-grading/./src/containers/ReviewModal/components/CloseReviewConfirmModal.jsx","webpack://@edx/frontend-app-ora-grading/./src/containers/ReviewModal/messages.js","webpack://@edx/frontend-app-ora-grading/./src/containers/ReviewModal/hooks.js","webpack://@edx/frontend-app-ora-grading/./src/containers/ReviewModal/index.jsx","webpack://@edx/frontend-app-ora-grading/./src/containers/ListView/messages.js","webpack://@edx/frontend-app-ora-grading/./src/containers/ListView/ListError.jsx","webpack://@edx/frontend-app-ora-grading/./src/containers/ListView/ListViewBreadcrumb.jsx","webpack://@edx/frontend-app-ora-grading/./src/containers/ListView/FilterStatusComponent.jsx","webpack://@edx/frontend-app-ora-grading/./src/containers/ListView/TableAction.jsx","webpack://@edx/frontend-app-ora-grading/./src/containers/ListView/SelectedBulkAction.jsx","webpack://@edx/frontend-app-ora-grading/./src/containers/ListView/SubmissionsTable.jsx","webpack://@edx/frontend-app-ora-grading/./src/containers/ListView/assets/empty-state.svg","webpack://@edx/frontend-app-ora-grading/./src/containers/ListView/EmptySubmission.jsx","webpack://@edx/frontend-app-ora-grading/./src/containers/ListView/index.jsx","webpack://@edx/frontend-app-ora-grading/./src/components/Head/messages.js","webpack://@edx/frontend-app-ora-grading/./src/components/Head/index.jsx","webpack://@edx/frontend-app-ora-grading/./src/App.jsx","webpack://@edx/frontend-app-ora-grading/./src/index.jsx","webpack://@edx/frontend-app-ora-grading/./node_modules/moment/locale/ sync ^\\.\\/.*$"],"sourcesContent":["/* eslint-disable no-console */\nconst strictGet = (target, name) => {\n  if (name === Symbol.toStringTag) {\n    return target;\n  }\n\n  if (name === '$$typeof') {\n    return typeof target;\n  }\n\n  if (name in target || name === '_reactFragment') {\n    return target[name];\n  }\n\n  console.log(name.toString());\n  console.error({ target, name });\n  const e = Error(`invalid property \"${name.toString()}\"`);\n  console.error(e.stack);\n  return undefined;\n};\n\nconst StrictDict = (dict) => new Proxy(dict, { get: strictGet });\n\nexport default StrictDict;\n","import { StrictDict } from 'utils';\n\nexport const RequestStates = StrictDict({\n  inactive: 'inactive',\n  pending: 'pending',\n  completed: 'completed',\n  failed: 'failed',\n});\n\nexport const RequestKeys = StrictDict({\n  batchUnlock: 'batchUnlock',\n  downloadFiles: 'downloadFiles',\n  fetchSubmission: 'fetchSubmission',\n  fetchSubmissionStatus: 'fetchSubmissionStatus',\n  initialize: 'initialize',\n  prefetchNext: 'prefetchNext',\n  prefetchPrev: 'prefetchPrev',\n  setLock: 'setLock',\n  submitGrade: 'submitGrade',\n});\n\nexport const ErrorCodes = StrictDict({\n  missingParam: 'ERR_MISSING_PARAM',\n});\n\nexport const ErrorStatuses = StrictDict({\n  badRequest: 400,\n  unauthorized: 401,\n  forbidden: 403,\n  notFound: 404,\n  conflict: 409,\n  serverError: 500,\n});\n","import { StrictDict } from 'utils';\n\nexport const lockStatuses = StrictDict({\n  unlocked: 'unlocked',\n  locked: 'locked',\n  inProgress: 'in-progress',\n});\n\nexport const gradeStatuses = StrictDict({\n  ungraded: 'ungraded',\n  graded: 'graded',\n});\n\nexport const gradingStatuses = StrictDict({\n  ungraded: gradeStatuses.ungraded,\n  graded: gradeStatuses.graded,\n  locked: lockStatuses.locked,\n  inProgress: lockStatuses.inProgress,\n});\n\nexport const feedbackRequirement = StrictDict({\n  disabled: 'disabled',\n  required: 'required',\n  optional: 'optional',\n});\n\nexport const fileUploadResponseOptions = StrictDict({\n  required: 'required',\n  optional: 'optional',\n  none: 'none',\n});\n\nexport const paramKeys = StrictDict({\n  oraLocation: 'oraLocation',\n  submissionUUID: 'submissionUUID',\n});\n\nexport const oraTypes = StrictDict({\n  team: 'team',\n  individual: 'individual',\n});\n\nexport const submissionFields = StrictDict({\n  dateSubmitted: 'dateSubmitted',\n  gradingStatus: 'gradingStatus',\n  score: 'score',\n  teamName: 'teamName',\n  username: 'username',\n});\n","import { StrictDict } from 'utils';\nimport { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  courseMetadata: {\n    name: '',\n    number: '',\n    org: '',\n    courseId: '',\n  },\n  isEnabled: false,\n  isGrading: false,\n  oraMetadata: {\n    prompt: '',\n    name: '',\n    type: '',\n    rubricConfig: null,\n  },\n  showReview: false,\n  showRubric: false,\n};\n\n// eslint-disable-next-line no-unused-vars\nconst app = createSlice({\n  name: 'app',\n  initialState,\n  reducers: {\n    loadIsEnabled: (state, { payload }) => ({ ...state, isEnabled: payload }),\n    loadCourseMetadata: (state, { payload }) => ({ ...state, courseMetadata: payload }),\n    loadOraMetadata: (state, { payload }) => ({ ...state, oraMetadata: payload }),\n    setShowReview: (state, { payload }) => ({\n      ...state,\n      showReview: payload,\n      showRubric: state.showRubric && payload, // Hide rubric when closing review window\n    }),\n    setShowRubric: (state, { payload }) => ({ ...state, showRubric: payload }),\n    toggleShowRubric: (state) => ({ ...state, showRubric: !state.showRubric }),\n  },\n});\n\nconst actions = StrictDict(app.actions);\n\nconst { reducer } = app;\n\nexport {\n  actions,\n  initialState,\n  reducer,\n};\n","import { createSelector } from 'reselect';\n\nimport { feedbackRequirement, oraTypes } from 'data/services/lms/constants';\n\nimport { StrictDict } from 'utils';\n\nimport * as module from './selectors';\n\nexport const appSelector = (state) => state.app;\n\nconst mkSimpleSelector = (cb) => createSelector([module.appSelector], cb);\n\n// top-level app data selectors\nexport const simpleSelectors = {\n  courseMetadata: mkSimpleSelector(app => app.courseMetadata),\n  isGrading: mkSimpleSelector(app => app.isGrading),\n  isEnabled: mkSimpleSelector(app => app.isEnabled),\n  oraMetadata: mkSimpleSelector(app => app.oraMetadata),\n  showReview: mkSimpleSelector(app => app.showReview),\n  showRubric: mkSimpleSelector(app => app.showRubric),\n};\n\nexport const courseId = (\n  createSelector([module.simpleSelectors.courseMetadata], (data) => data.courseId)\n);\n\nconst oraMetadataSelector = (cb) => createSelector([module.simpleSelectors.oraMetadata], cb);\n// ORA metadata selectors\nexport const ora = {\n  /**\n   * Returns the ORA name\n   * @return {string} - ORA name\n   */\n  name: oraMetadataSelector(data => data.name),\n  /**\n   * Returns the ORA Prompt\n   * @return {string} - ORA prompt\n   */\n  prompt: oraMetadataSelector(data => data.prompt),\n  /**\n   * Returns the ORA type\n   * @return {string} - ORA type (team vs individual)\n   */\n  type: oraMetadataSelector(data => data.type),\n  /**\n   * Returns file load response config\n   * @return {string} - file upload response config\n   */\n  fileUploadResponseConfig: oraMetadataSelector(data => data.fileUploadResponseConfig),\n  /**\n   * Returns true iff the ORA is an individual submission ora (vs team)\n   * @return {bool} - is the ORA an individual ORA?\n   */\n  isIndividual: oraMetadataSelector(data => data.type === oraTypes.individual),\n};\n\n/**\n * Container for rubric config selectors\n */\nexport const rubric = {};\n/**\n * Returns the full top-level rubric config from the ora metadata\n * @return {object} - rubric config object\n */\nrubric.config = oraMetadataSelector(data => data.rubricConfig);\n\n/**\n * Returns a momoized selector depending on the rubric config with the given callback\n * @param {func} cb - callback taking the rubric config as an arg, and returning a value\n * @return {func} - a memoized selector that calls cb with the rubric config\n */\nconst rubricConfigSelector = (cb) => createSelector([module.rubric.config], cb);\n\n/**\n * Returns true iff the rubric object has loaded.\n * @return {bool} - has a rubric config been loaded?\n */\nrubric.hasConfig = rubricConfigSelector(config => config !== undefined);\n/**\n * Returns the rubric-level feedback config string\n * @return {string} - rubric-level feedback config string\n */\nrubric.feedbackConfig = rubricConfigSelector(config => config.feedback);\n\n/**\n * Return the criteria feedbase prompt\n * @return {string} - criteria feedback prompt\n */\nrubric.feedbackPrompt = rubricConfigSelector(config => config.feedbackPrompt);\n\n/**\n * Returns a list of rubric criterion config objects for the ORA\n * @return {obj[]} - array of criterion config objects\n */\nrubric.criteria = rubricConfigSelector(config => config.criteria);\n\n/**\n * Returns the config object for the rubric criterion at the given index (orderNum)\n * @param {number} orderNum - rubric criterion index\n * @return {obj} - criterion config object\n */\nrubric.criterionConfig = (state, { orderNum }) => module.rubric.criteria(state)[orderNum];\n\n/**\n * Returns the feeback configuration string for tor the criterion at the given index\n * (orderNum).\n * @param {number} orderNum - rubric criterion index\n * @return {string} - criterion feedback config string\n */\nrubric.criterionFeedbackConfig = (state, { orderNum }) => (\n  module.rubric.criterionConfig(state, { orderNum }).feedback\n);\n\n/**\n * Returns a list of rubric criteria indices for iterating over\n * @return {number[]} - list of rubric criteria indices\n */\nrubric.criteriaIndices = createSelector(\n  [module.rubric.criteria],\n  (rubricCriteria) => rubricCriteria.map(({ orderNum }) => orderNum),\n);\n\n/**\n * Returns true iff the passed feedback value is required or optional\n * @return {bool} - should include feedback?\n */\nexport const shouldIncludeFeedback = (feedback) => [\n  feedbackRequirement.required,\n  feedbackRequirement.optional,\n].includes(feedback);\n\n/**\n * take current grade and fill the empty fill with default value\n * @param {obj} gradeData\n * @returns\n */\nexport const fillGradeData = (state, data) => {\n  const hasConfig = module.rubric.hasConfig(state);\n  if (!hasConfig || Array.isArray(data?.criteria)) {\n    return data;\n  }\n\n  const feedbackConfig = module.rubric.feedbackConfig(state);\n  const criteria = module.rubric.criteria(state);\n\n  const overallFeedback = (\n    module.shouldIncludeFeedback(feedbackConfig) && { overallFeedback: '' }\n  );\n  const criteriaFeedback = (feedback) => (\n    module.shouldIncludeFeedback(feedback) && { feedback: '' }\n  );\n\n  const gradeData = { ...overallFeedback };\n  gradeData.criteria = criteria.map(({ feedback, name, orderNum }) => ({\n    ...criteriaFeedback(feedback),\n    name,\n    orderNum,\n    selectedOption: '',\n  }));\n  return gradeData;\n};\n\nexport default StrictDict({\n  ...simpleSelectors,\n  courseId,\n  ora,\n  rubric: StrictDict(rubric),\n  fillGradeData,\n});\n","import { createSlice } from '@reduxjs/toolkit';\n\nimport { StrictDict } from 'utils';\n\nimport { lockStatuses } from 'data/services/lms/constants';\nimport * as module from './reducer';\n\nconst initialState = {\n  selection: [\n    /**\n     * {\n     *   submissionUUID: '',\n     *   username: ''\n     *   teamName: ''\n     *   dateSubmitted: 0,\n     *   gradeStatus: '',\n     * }\n     */\n  ],\n  gradeData: {\n    /**\n     * <submissionUUID>: {\n     *   overallFeedback: '',\n     *   criteria: [{\n     *     feedback,\n     *     name,\n     *     selectedOption,\n     *   }],\n     * }\n     */\n  },\n  gradingData: {\n    /**\n     * <submissionUUID>: {\n     *   showValidation: false,\n     *   overallFeedback: '',\n     *   criteria: [{\n     *     feedback: '',,\n     *     selectedOption: '',\n     *   ]},\n     * }\n     */\n  },\n  activeIndex: null,\n  current: {\n    /**\n     * submissionUUID: '',\n     * gradeStatus: '',\n     * response: {\n     *   text: '',\n     *   files: [{\n     *     downloadURL: '',\n     *     description: '',\n     *     name: '',\n     *     size: 0,\n     *   }],\n     * },\n     */\n  },\n  prev: null, // { response }\n  next: null, // { response }\n};\n\n/**\n * Updates the state's gradingData entry for the selected submission,\n * overlaying the passed data on top of the existing data for the that\n * submission.\n * @return {object} - new state\n */\nexport const updateGradingData = (state, data) => {\n  const currentId = state.current.submissionUUID;\n  return {\n    ...state,\n    gradingData: {\n      ...state.gradingData,\n      [currentId]: ({\n        ...(state.gradingData[currentId] || {}),\n        ...data,\n      }),\n    },\n  };\n};\n\n/**\n * Updates the given state's gradingData entry for the selected submission,\n * overlaying the passed data on top of the existing data for the criterion\n * at the given index (orderNum) for the rubric.\n * @return {object} - new state\n */\nexport const updateCriterion = (state, orderNum, data) => {\n  const entry = state.gradingData[state.current.submissionUUID];\n  const criteria = [...entry.criteria];\n  criteria[orderNum] = { ...entry.criteria[orderNum], ...data };\n  return module.updateGradingData(state, {\n    ...entry,\n    criteria,\n  });\n};\n\n// eslint-disable-next-line no-unused-vars\nconst grading = createSlice({\n  name: 'grading',\n  initialState,\n  reducers: {\n    loadSubmission: (state, { payload }) => ({\n      ...state,\n      current: { ...payload },\n      gradeData: {\n        ...state.gradeData,\n        [payload.submissionUUID]: payload.gradeData,\n      },\n    }),\n    loadNext: (state) => ({\n      ...state,\n      current: {},\n      activeIndex: state.activeIndex + 1,\n    }),\n    loadPrev: (state) => ({\n      ...state,\n      current: {},\n      activeIndex: state.activeIndex - 1,\n    }),\n    updateSelection: (state, { payload }) => ({\n      ...state,\n      selection: payload,\n      activeIndex: 0,\n    }),\n    startGrading: (state, { payload }) => {\n      const { submissionUUID } = state.current;\n      const hasGradingData = state.gradingData[submissionUUID] !== undefined;\n      return {\n        ...state,\n        current: { ...state.current, lockStatus: payload.lockStatus },\n        gradeData: { ...state.gradeData, [submissionUUID]: payload.gradeData },\n        gradingData: {\n          ...state.gradingData,\n          [state.current.submissionUUID]: {\n            showValidation: false,\n            ...payload.gradeData,\n            ...(hasGradingData && { ...state.gradingData[state.current.submissionUUID] }),\n          },\n        },\n      };\n    },\n    failSetLock: (state, { payload }) => ({\n      ...state,\n      current: { ...state.current, lockStatus: payload.lockStatus },\n    }),\n    setRubricFeedback: (state, { payload }) => (\n      module.updateGradingData(state, { overallFeedback: payload })\n    ),\n    setCriterionOption: (state, { payload: { orderNum, value } }) => (\n      module.updateCriterion(state, orderNum, { selectedOption: value })\n    ),\n    setCriterionFeedback: (state, { payload: { orderNum, value } }) => (\n      module.updateCriterion(state, orderNum, { feedback: value })\n    ),\n    setShowValidation: (state, { payload }) => (\n      module.updateGradingData(state, { showValidation: payload })\n    ),\n    completeGrading: (state, { payload }) => {\n      const gradingData = { ...state.gradingData };\n      delete gradingData[state.current.submissionUUID];\n      return {\n        ...state,\n        gradeData: {\n          ...state.gradeData,\n          [state.current.submissionUUID]: { ...payload.gradeData },\n        },\n        gradingData,\n        current: {\n          ...state.current,\n          gradeStatus: payload.gradeStatus,\n          lockStatus: payload.lockStatus,\n        },\n      };\n    },\n    stopGrading: (state, { payload }) => {\n      const { submissionUUID } = state.current;\n      const gradingData = { ...state.gradingData };\n      delete gradingData[submissionUUID];\n\n      const gradeData = {\n        ...state.gradeData,\n        ...(payload && { [submissionUUID]: payload.submissionStatus.gradeData }),\n      };\n\n      const { gradeStatus } = payload ? payload.submissionStatus : state.current;\n      const lockStatus = payload ? payload.submissionStatus.lockStatus : lockStatuses.unlocked;\n\n      return {\n        ...state,\n        gradingData,\n        gradeData,\n        current: {\n          ...state.current,\n          lockStatus,\n          gradeStatus,\n        },\n      };\n    },\n  },\n});\n\nconst actions = StrictDict(grading.actions);\nconst { reducer } = grading;\n\nexport {\n  actions,\n  reducer,\n  initialState,\n};\n","import { createSelector } from 'reselect';\n\nimport { StrictDict } from 'utils';\nimport * as module from './base';\n\nexport const rootSelector = ({ grading }) => grading;\nexport const mkSimpleSelector = (key) => createSelector(\n  [module.rootSelector],\n  (grading) => grading[key],\n);\nexport const rootKeys = StrictDict({\n  selection: 'selection',\n  activeIndex: 'activeIndex',\n  current: 'current',\n  gradeData: 'gradeData',\n  gradingData: 'gradingData',\n});\n\nexport const simpleSelectors = {\n  selection: mkSimpleSelector(rootKeys.selection),\n  activeIndex: mkSimpleSelector(rootKeys.activeIndex),\n  current: mkSimpleSelector(rootKeys.current),\n  gradeData: mkSimpleSelector(rootKeys.gradeData),\n  gradingData: mkSimpleSelector(rootKeys.gradingData),\n};\n\n/**\n * returns true iff any active grading sessions have started\n * @return {bool} does the session have any active grading progress\n */\nexport const hasGradingProgress = createSelector(\n  [module.simpleSelectors.gradingData],\n  (gradingData) => Object.keys(gradingData).length > 0,\n);\n\n/**\n * returns the length of the list of selected submissions\n * @return {number} selected submission list length\n */\nexport const selectionLength = createSelector(\n  [module.simpleSelectors.selection],\n  (selection) => selection.length,\n);\n\nexport default {\n  ...simpleSelectors,\n  hasGradingProgress,\n  selectionLength,\n};\n","import _ from 'lodash';\nimport { createSelector } from 'reselect';\n\nimport { StrictDict } from 'utils';\nimport { lockStatuses } from 'data/services/lms/constants';\n\nimport * as module from './selectors';\n\nexport const simpleSelectors = {\n  allSubmissions: state => state.submissions.allSubmissions,\n};\n\n/**\n * Returns the submission list in default order for the table.\n */\nexport const listData = createSelector(\n  [simpleSelectors.allSubmissions],\n  (allSubmissions) => {\n    const submissionUUIDs = Object.keys(allSubmissions);\n    const submissionList = submissionUUIDs.map(id => {\n      const { gradeStatus, lockStatus, ...rest } = allSubmissions[id];\n      const gradingStatus = (lockStatus === lockStatuses.unlocked ? gradeStatus : lockStatus);\n      return { gradingStatus, ...rest };\n    });\n    return _.sortBy(\n      submissionList,\n      ['submissionDate'],\n    );\n  },\n);\n\nexport const isEmptySubmissionData = createSelector([module.listData], (data) => data.length === 0);\n\nexport default StrictDict({\n  ...simpleSelectors,\n  listData,\n  isEmptySubmissionData,\n});\n","import { createSelector } from 'reselect';\n\nimport { lockStatuses } from 'data/services/lms/constants';\nimport submissionsSelectors from '../../submissions/selectors';\nimport appSelectors from '../../app/selectors';\n\nimport * as module from './selected';\nimport { simpleSelectors } from './base';\n\nexport const gradingStatusTransform = ({ gradeStatus, lockStatus }) => (\n  lockStatus === lockStatuses.unlocked ? gradeStatus : lockStatus\n);\n\n/**************************************************\n * Selected Submission Selectors\n **************************************************/\nexport const selected = {};\n\n/**\n * returns the selected submission id\n * Note: Not loaded from current as this is what sets that value in the\n *   (current) bucket\n * @return {string} selected submission id\n */\nselected.submissionUUID = createSelector(\n  [\n    simpleSelectors.selection,\n    submissionsSelectors.allSubmissions,\n    simpleSelectors.activeIndex,\n  ],\n  (selectedIds, submissions, activeIndex) => submissions[selectedIds[activeIndex]].submissionUUID,\n);\n\n/**\n * Returns the grade status for the selected submission\n * @return {string} grade status\n */\nselected.gradeStatus = createSelector([simpleSelectors.current], (current) => current.gradeStatus);\n\n/**\n * Returns the lock status for the selected submission\n * @return {string} lock status\n */\nselected.lockStatus = createSelector([simpleSelectors.current], (current) => current.lockStatus);\n\n/**\n * Returns the response data for the selected submission\n * @return {obj} response\n *   { text, files: [] }\n */\nselected.response = createSelector([simpleSelectors.current], (current) => current.response);\n\n/**\n * Returns the \"grading\" status for the selected submission,\n * which is a combination of the grade and lock statuses.\n * @return {string} grading status\n */\nselected.gradingStatus = createSelector(\n  [module.selected.gradeStatus, module.selected.lockStatus],\n  (gradeStatus, lockStatus) => module.gradingStatusTransform({ gradeStatus, lockStatus }),\n);\n\nselected.isGrading = createSelector(\n  [module.selected.gradingStatus],\n  (gradingStatus) => gradingStatus === lockStatuses.inProgress,\n);\n\n/***********************************\n * Selected Submission - Static Data\n ***********************************/\n\n/**\n * returns static data from the active selected submission\n * @return {obj} - staticData\n *  { submissionUUID, username, teamName, dateSubmitted }\n */\nselected.staticData = createSelector(\n  [module.selected.submissionUUID, submissionsSelectors.allSubmissions],\n  (submissionUUID, allSubmissions) => {\n    const submission = allSubmissions[submissionUUID];\n    const { grade, gradeStatus, ...staticData } = submission;\n    return staticData;\n  },\n);\n\n/**\n * Returns the username for the selected submission\n * @return {string} username\n */\nselected.username = createSelector(\n  [module.selected.staticData],\n  (staticData) => staticData.username,\n);\n\nselected.teamName = createSelector(\n  [module.selected.staticData],\n  (staticData) => staticData.teamName,\n);\n\nselected.userDisplay = createSelector(\n  [\n    appSelectors.ora.isIndividual,\n    module.selected.username,\n    module.selected.teamName,\n  ],\n  (isIndividual, username, teamName) => (isIndividual ? username : teamName),\n);\n\n/***********************************\n * Selected Submission - Grade Data\n ***********************************/\n\n/**\n * Returns the grade data for the selected submission\n * @return {obj} grade data\n *  { score, overallFeedback, criteria }\n */\nselected.gradeData = createSelector(\n  [module.selected.submissionUUID, simpleSelectors.gradeData],\n  (submissionUUID, gradeData) => gradeData[submissionUUID],\n);\n\n/**\n * Returns the local grading data for the selected submission\n * @return {obj} local grade data\n *  { overallFeedback, criteria }\n */\nselected.gradingData = createSelector(\n  [module.selected.submissionUUID, simpleSelectors.gradingData],\n  (submissionUUID, gradingData) => gradingData[submissionUUID],\n);\n\n/**\n * Returns list of criterion grade data for the current selection for review\n * and grading views.\n * @return {obj} criterion grade data entries ({ review: [{}], grading: [{}] })\n */\nselected.criteriaGradeData = createSelector(\n  [module.selected.isGrading, module.selected.gradeData, module.selected.gradingData],\n  (isGrading, remote, local) => {\n    const entry = isGrading ? local : remote;\n    return entry ? entry.criteria : [];\n  },\n);\n\n/**\n * Returns the score object associated with the grade\n * @return {obj} score object\n */\nselected.score = createSelector(\n  [module.selected.gradeData],\n  (data) => ((data && data.score) ? data.score : {}),\n);\n\n/**\n * Returns the rubric-level feedback for the selected submission for both review\n * and grading views.\n * @return {obj} selected submission's associated rubric-level feedback\n *   ({ review: '', grading: '' })\n */\nselected.overallFeedback = createSelector(\n  [module.selected.isGrading, module.selected.gradeData, module.selected.gradingData],\n  (isGrading, remote, local) => {\n    const entry = isGrading ? local : remote;\n    return entry?.overallFeedback || '';\n  },\n);\n\n/**\n * Returns the grade data for the given criterion of the current\n * selection for both review and grading views.\n * @param {number} orderNum - criterion orderNum (and index)\n * @return {obj} - Grade Data associated with the criterion\n *   ({ review: {}, grading: {} })\n */\nselected.criterionGradeData = (state, { orderNum }) => {\n  const entry = module.selected.criteriaGradeData(state);\n  return entry ? entry[orderNum] : {};\n};\n\n/**\n * Returns the selected option for the given criterion of the current selection for\n * both review and grading views.\n * @param {number} orderNum - criterion orderNum (and index)\n * @return {obj} - selected option associated with the criterion\n *   ({ review: '', grading: '' })\n */\nselected.criterionSelectedOption = (state, { orderNum }) => {\n  const entry = module.selected.criterionGradeData(state, { orderNum });\n  return entry?.selectedOption || '';\n};\n\nselected.criterionFeedback = (state, { orderNum }) => {\n  const entry = module.selected.criterionGradeData(state, { orderNum });\n  return entry?.feedback || '';\n};\n\nexport default selected;\n","import { createSelector } from 'reselect';\n\nimport { StrictDict } from 'utils';\nimport { simpleSelectors } from './base';\nimport * as module from './nav';\n\nexport const hasNext = (list, index) => index < list.length - 1;\nexport const hasPrev = index => index > 0;\n\n/*************************************************\n * Next/Previous Submission Selectors\n *************************************************/\nexport const next = {\n  /**\n   * Returns true iff there exists a selection after the current selection\n   * in the queue.\n   * @return {bool} has next submission?\n   */\n  doesExist: createSelector(\n    [simpleSelectors.selection, simpleSelectors.activeIndex],\n    module.hasNext,\n  ),\n  /**\n   * Returns the submissionUUID for the next submission in the selection queue\n   * @return {string} next submission id (null if there isn't one)\n   */\n  submissionUUID: createSelector(\n    [simpleSelectors.selection, simpleSelectors.activeIndex],\n    (list, activeIndex) => (module.hasNext(list, activeIndex) ? list[activeIndex - 1] : null),\n  ),\n};\nexport const prev = {\n  /*\n   * Returns true iff there exists a selection previous to the current selection\n   * in the queue.\n   * @return {bool} has previous submission?\n   */\n  doesExist: createSelector(\n    [simpleSelectors.activeIndex],\n    module.hasPrev,\n  ),\n  /**\n   * Returns the submissionUUID for the previous submission in the selection queue\n   * @return {string} previous submission id (null if there isn't one)\n   */\n  submissionUUID: createSelector(\n    [simpleSelectors.selection, simpleSelectors.activeIndex],\n    (list, activeIndex) => (module.hasPrev(activeIndex) ? list[activeIndex + 1] : null),\n  ),\n};\n\nexport default StrictDict({ next, prev });\n","import { createSelector } from 'reselect';\n\nimport { feedbackRequirement } from 'data/services/lms/constants';\nimport appSelectors from '../../app/selectors';\n\nimport selected from './selected';\nimport * as module from './validation';\n\nexport const validation = {};\n\nvalidation.show = createSelector(\n  [selected.gradingData],\n  (gradingData) => gradingData?.showValidation || false,\n);\n\nvalidation.overallFeedback = createSelector(\n  [selected.gradingData, appSelectors.rubric.config],\n  (gradingData, rubricConfig) => !(\n    rubricConfig.feedback === feedbackRequirement.required\n    && gradingData?.overallFeedback === ''\n  ),\n);\nvalidation.overallFeedbackIsInvalid = createSelector(\n  [module.validation.show, module.validation.overallFeedback],\n  (show, overallFeedback) => (show && !overallFeedback),\n);\n\nvalidation.criteria = createSelector(\n  [selected.gradingData, appSelectors.rubric.config],\n  (gradingData, rubricConfig) => rubricConfig.criteria.map((criterion, index) => ({\n    feedback: !(\n      criterion.feedback === feedbackRequirement.required\n      && gradingData.criteria[index].feedback === ''\n    ),\n    selectedOption: rubricConfig.criteria[index].options.length === 0 || gradingData.criteria[index].selectedOption !== '',\n  })),\n);\n\nvalidation.criterion = (state, { orderNum }) => module.validation.criteria(state)[orderNum];\n\nvalidation.criterionFeedback = (state, { orderNum }) => (\n  module.validation.criterion(state, { orderNum }).feedback\n);\nvalidation.criterionFeedbackIsInvalid = (state, { orderNum }) => (\n  module.validation.show(state)\n  && !module.validation.criterionFeedback(state, { orderNum })\n);\n\nvalidation.criterionSelectedOption = (state, { orderNum }) => (\n  module.validation.criterion(state, { orderNum }).selectedOption\n);\nvalidation.criterionSelectedOptionIsInvalid = (state, { orderNum }) => (\n  module.validation.show(state)\n  && !module.validation.criterionSelectedOption(state, { orderNum })\n);\n\nvalidation.isValidForSubmit = createSelector(\n  [module.validation.overallFeedback, module.validation.criteria],\n  (overallFeedback, criteria) => (\n    !!overallFeedback\n    && criteria.every(({ feedback, selectedOption }) => feedback && selectedOption)\n  ),\n);\n\nexport default validation;\n","import { StrictDict } from 'utils';\nimport base from './base';\nimport selected from './selected';\nimport nav from './nav';\nimport validation from './validation';\n\nexport default StrictDict({\n  ...base,\n  ...nav,\n  selected,\n  validation,\n});\n","import { createSlice } from '@reduxjs/toolkit';\n\nimport { StrictDict } from 'utils';\n\nimport { RequestStates, RequestKeys } from 'data/constants/requests';\n\nconst initialState = {\n  [RequestKeys.initialize]: { status: RequestStates.inactive },\n  [RequestKeys.downloadFiles]: { status: RequestStates.inactive },\n  [RequestKeys.fetchSubmission]: { status: RequestStates.inactive },\n  [RequestKeys.fetchSubmissionStatus]: { status: RequestStates.inactive },\n  [RequestKeys.setLock]: { status: RequestStates.inactive },\n  [RequestKeys.prefetchNext]: { status: RequestStates.inactive },\n  [RequestKeys.prefetchPrev]: { status: RequestStates.inactive },\n  [RequestKeys.submitGrade]: { status: RequestStates.inactive },\n};\n\n// eslint-disable-next-line no-unused-vars\nconst requests = createSlice({\n  name: 'requests',\n  initialState,\n  reducers: {\n    startRequest: (state, { payload }) => ({\n      ...state,\n      [payload]: {\n        status: RequestStates.pending,\n      },\n    }),\n    completeRequest: (state, { payload }) => ({\n      ...state,\n      [payload.requestKey]: {\n        status: RequestStates.completed,\n        response: payload.response,\n      },\n    }),\n    failRequest: (state, { payload }) => ({\n      ...state,\n      [payload.requestKey]: {\n        status: RequestStates.failed,\n        error: payload.error,\n      },\n    }),\n    clearRequest: (state, { payload }) => ({\n      ...state,\n      [payload.requestKey]: {},\n    }),\n  },\n});\n\nconst actions = StrictDict(requests.actions);\nconst { reducer } = requests;\n\nexport {\n  actions,\n  reducer,\n  initialState,\n};\n","import { StrictDict } from 'utils';\nimport { RequestStates } from 'data/constants/requests';\nimport * as module from './selectors';\n\nexport const requestStatus = (state, { requestKey }) => state.requests[requestKey];\n\nconst statusSelector = (fn) => (state, { requestKey }) => fn(state.requests[requestKey]);\n\nexport const isInactive = ({ status }) => status === RequestStates.inactive;\nexport const isPending = ({ status }) => status === RequestStates.pending;\nexport const isCompleted = ({ status }) => status === RequestStates.completed;\nexport const isFailed = ({ status }) => status === RequestStates.failed;\nexport const error = (request) => request.error;\nexport const errorStatus = (request) => request.error?.response?.status;\nexport const errorCode = (request) => request.error?.response?.data;\n\nexport const data = (request) => request.data;\n\nexport const allowNavigation = ({ requests }) => (\n  !Object.keys(requests).some(requestKey => module.isPending(requests[requestKey]))\n);\n\nexport default StrictDict({\n  requestStatus,\n  allowNavigation,\n  isInactive: statusSelector(isInactive),\n  isPending: statusSelector(isPending),\n  isCompleted: statusSelector(isCompleted),\n  isFailed: statusSelector(isFailed),\n  error: statusSelector(error),\n  errorCode: statusSelector(errorCode),\n  errorStatus: statusSelector(errorStatus),\n  data: statusSelector(data),\n});\n","import { createSlice } from '@reduxjs/toolkit';\n\nimport { StrictDict } from 'utils';\n\nconst initialState = {\n  allSubmissions: {\n    /**\n     * <submissionUUID>: {\n     *   submissionUUID: '',\n     *   username: ''\n     *   teamName: ''\n     *   dateSubmitted: 0,\n     *   gradeStatus: ''\n     *   grade: {\n     *     pointsEarned: 0,\n     *     pointsPossible: 0,\n     *   }\n     * }\n     */\n  },\n};\n\n// eslint-disable-next-line no-unused-vars\nconst submissions = createSlice({\n  name: 'submissions',\n  initialState,\n  reducers: {\n    loadList: (state, { payload }) => ({ ...state, allSubmissions: payload }),\n  },\n});\n\nconst actions = StrictDict(submissions.actions);\nconst { reducer } = submissions;\n\nexport {\n  actions,\n  reducer,\n  initialState,\n};\n","import { getConfig } from '@edx/frontend-platform';\n\nexport const routePath = () => `${getConfig().PUBLIC_PATH}:courseId`;\nexport const locationId = () => decodeURIComponent(window.location.pathname).replace(getConfig().PUBLIC_PATH, '');\n","import { StrictDict } from 'utils';\nimport { getConfig } from '@edx/frontend-platform';\n\nconst baseUrl = () => getConfig().LMS_BASE_URL;\n\nconst api = () => `${baseUrl()}/api/`;\nconst baseEsgUrl = () => `${api()}ora_staff_grader/`;\n\nconst oraInitializeUrl = () => `${baseEsgUrl()}initialize`;\nconst fetchSubmissionUrl = () => `${baseEsgUrl()}submission`;\nconst fetchSubmissionFilesUrl = () => `${baseEsgUrl()}submission/files`;\nconst fetchSubmissionStatusUrl = () => `${baseEsgUrl()}submission/status`;\nconst fetchSubmissionLockUrl = () => `${baseEsgUrl()}submission/lock`;\nconst batchUnlockSubmissionsUrl = () => `${baseEsgUrl()}submission/batch/unlock`;\nconst updateSubmissionGradeUrl = () => `${baseEsgUrl()}submission/grade`;\n\nconst course = (courseId) => `${baseUrl()}/courses/${courseId}`;\n\nconst openResponse = (courseId) => (\n  `${course(courseId)}/instructor#view-open_response_assessment`\n);\nconst ora = (courseId, locationId) => `${course(courseId)}/jump_to/${locationId}`;\n\nexport default StrictDict({\n  api,\n  oraInitializeUrl,\n  fetchSubmissionUrl,\n  fetchSubmissionFilesUrl,\n  fetchSubmissionStatusUrl,\n  fetchSubmissionLockUrl,\n  batchUnlockSubmissionsUrl,\n  updateSubmissionGradeUrl,\n  baseUrl,\n  course,\n  openResponse,\n  ora,\n});\n","import queryString from 'query-string';\nimport { getAuthenticatedHttpClient } from '@edx/frontend-platform/auth';\n\n/**\n * get(url)\n * simple wrapper providing an authenticated Http client get action\n * @param {string} url - target url\n */\nexport const get = (...args) => getAuthenticatedHttpClient().get(...args);\n/**\n * post(url, data)\n * simple wrapper providing an authenticated Http client post action\n * @param {string} url - target url\n * @param {object|string} data - post payload\n */\nexport const post = (...args) => getAuthenticatedHttpClient().post(...args);\n\nexport const client = getAuthenticatedHttpClient;\n\n/**\n * stringifyUrl(url, query)\n * simple wrapper around queryString.stringifyUrl that sets skip behavior\n * @param {string} url - base url string\n * @param {object} query - query parameters\n */\nexport const stringifyUrl = (url, query) => queryString.stringifyUrl(\n  { url, query },\n  { skipNull: true, skipEmptyString: true },\n);\n","import { StrictDict } from 'utils';\nimport { locationId } from 'data/constants/app';\nimport { paramKeys } from './constants';\nimport urls from './urls';\nimport {\n  client,\n  get,\n  post,\n  stringifyUrl,\n} from './utils';\n\n/*********************************************************************************\n * GET Actions\n *********************************************************************************/\n\n/**\n * get('/api/initialize', { oraLocation })\n * @return {\n *   oraMetadata: { name, prompt, type ('individual' vs 'team'), rubricConfig, fileUploadResponseConfig },\n *   courseMetadata: { courseOrg, courseName, courseNumber, courseId },\n *   submissions: {\n *     [submissionUUID]: {\n *       id: <submissionUUID>, (not currently used)\n *       username\n *       submissionUUID\n *       dateSubmitted (timestamp)\n *       gradeStatus (['ungraded', 'graded', 'locked', 'locked_by_you'?])\n *       grade: { pointsEarned, pointsPossible }\n *     },\n *     ...\n *   },\n * }\n */\nconst initializeApp = () => get(\n  stringifyUrl(urls.oraInitializeUrl(), {\n    [paramKeys.oraLocation]: locationId(),\n  }),\n).then(response => response.data);\n\n/**\n * get('/api/submission', { oraLocation, submissionUUID })\n * @return {\n *   submission: {\n *     gradeData,\n *     gradeStatus,\n *     response: { files: [{}], text: <html> },\n *   },\n * }\n */\nconst fetchSubmission = (submissionUUID) => get(\n  stringifyUrl(urls.fetchSubmissionUrl(), {\n    [paramKeys.oraLocation]: locationId(),\n    [paramKeys.submissionUUID]: submissionUUID,\n  }),\n).then(response => response.data);\n\n/**\n * get('/api/submission/files', { oraLocation, submissionUUID })\n * @return {\n *     response: { files: [{}], text: <html> },\n * }\n */\nconst fetchSubmissionFiles = (submissionUUID) => get(\n  stringifyUrl(urls.fetchSubmissionFilesUrl(), {\n    [paramKeys.oraLocation]: locationId(),\n    [paramKeys.submissionUUID]: submissionUUID,\n  }),\n).then(response => response.data);\n\n/**\n * fetches the current grade, gradeStatus, and rubricResponse data for the given submission\n * get('/api/submissionStatus', { oraLocation, submissionUUID })\n *   @return {obj} submissionStatus object\n *   {\n *     gradeData,\n *     gradeStatus,\n *     lockStatus,\n *   }\n */\nconst fetchSubmissionStatus = (submissionUUID) => get(\n  stringifyUrl(urls.fetchSubmissionStatusUrl(), {\n    [paramKeys.oraLocation]: locationId(),\n    [paramKeys.submissionUUID]: submissionUUID,\n  }),\n).then(response => response.data);\n\n/**\n * post('api/lock', { oraLocation, submissionUUID });\n * @param {string} submissionUUID\n */\nconst lockSubmission = (submissionUUID) => post(\n  stringifyUrl(urls.fetchSubmissionLockUrl(), {\n    [paramKeys.oraLocation]: locationId(),\n    [paramKeys.submissionUUID]: submissionUUID,\n  }),\n).then(response => response.data);\n\n/**\n * unlockSubmission(submissionUUID)\n * @param {string} submissionUUID\n */\nconst unlockSubmission = (submissionUUID) => client().delete(\n  stringifyUrl(urls.fetchSubmissionLockUrl(), {\n    [paramKeys.oraLocation]: locationId(),\n    [paramKeys.submissionUUID]: submissionUUID,\n  }),\n).then(response => response.data);\n\n/**\n * batchUnlockSubmissions(submissionUUIDs)\n * @param {string[]} submissionUUIDs - list of submission uuids\n */\nconst batchUnlockSubmissions = (submissionUUIDs) => post(\n  stringifyUrl(\n    urls.batchUnlockSubmissionsUrl(),\n    { [paramKeys.oraLocation]: locationId() },\n  ),\n  { submissionUUIDs },\n).then(response => response.data);\n\n/*\n * post('api/updateGrade', { submissionUUID, gradeData })\n * @param {object} gradeData - full grading submission data\n */\nconst updateGrade = (submissionUUID, gradeData) => post(\n  stringifyUrl(urls.updateSubmissionGradeUrl(), {\n    [paramKeys.oraLocation]: locationId(),\n    [paramKeys.submissionUUID]: submissionUUID,\n  }),\n  gradeData,\n).then(response => response.data);\n\nexport default StrictDict({\n  initializeApp,\n  fetchSubmission,\n  fetchSubmissionFiles,\n  fetchSubmissionStatus,\n  lockSubmission,\n  updateGrade,\n  unlockSubmission,\n  batchUnlockSubmissions,\n});\n","import { StrictDict } from 'utils';\n\nimport { RequestKeys } from 'data/constants/requests';\n// eslint-disable-next-line import/no-cycle\nimport { actions } from 'data/redux';\nimport api from 'data/services/lms/api';\n\nimport * as module from './requests';\n\n/**\n * Wrapper around a network request promise, that sends actions to the redux store to\n * track the state of that promise.\n * Tracks the promise by requestKey, and sends an action when it is started, succeeds, or\n * fails.  It also accepts onSuccess and onFailure methods to be called with the output\n * of failure or success of the promise.\n * @param {string} requestKey - request tracking identifier\n * @param {Promise} promise - api event promise\n * @param {[func]} onSuccess - onSuccess method ((response) => { ... })\n * @param {[func]} onFailure - onFailure method ((error) => { ... })\n */\nexport const networkRequest = ({\n  requestKey,\n  promise,\n  onSuccess,\n  onFailure,\n}) => (dispatch) => {\n  dispatch(actions.requests.startRequest(requestKey));\n  return promise.then((response) => {\n    if (onSuccess) { onSuccess(response); }\n    dispatch(actions.requests.completeRequest({ requestKey, response }));\n  }).catch((error) => {\n    if (onFailure) { onFailure(error); }\n    dispatch(actions.requests.failRequest({ requestKey, error }));\n  });\n};\n\n/**\n * Tracked initializeApp api method.\n * Tracked to the `initialize` request key.\n * @param {string} locationId - ora location id\n * @param {[func]} onSuccess - onSuccess method ((response) => { ... })\n * @param {[func]} onFailure - onFailure method ((error) => { ... })\n */\nexport const initializeApp = ({ locationId, ...rest }) => (dispatch) => {\n  dispatch(module.networkRequest({\n    requestKey: RequestKeys.initialize,\n    promise: api.initializeApp(locationId),\n    ...rest,\n  }));\n};\n\n/**\n * Tracked fetchSubmissionStatus api method.\n * Tracked to the `fetchSubmissionStatus` request key.\n * @param {string} submissionUUID - target submission id\n * @param {[func]} onSuccess - onSuccess method ((response) => { ... })\n * @param {[func]} onFailure - onFailure method ((error) => { ... })\n */\nexport const fetchSubmissionStatus = ({ submissionUUID, ...rest }) => (dispatch) => {\n  dispatch(module.networkRequest({\n    requestKey: RequestKeys.fetchSubmissionStatus,\n    promise: api.fetchSubmissionStatus(submissionUUID),\n    ...rest,\n  }));\n};\n\n/**\n * Tracked fetchSubmission api method.  tracked to the `fetchSubmission` request key.\n * @param {string} submissionUUID - target submission id\n * @param {[func]} onSuccess - onSuccess method ((response) => { ... })\n * @param {[func]} onFailure - onFailure method ((error) => { ... })\n */\nexport const fetchSubmission = ({ submissionUUID, ...rest }) => (dispatch) => {\n  dispatch(module.networkRequest({\n    requestKey: RequestKeys.fetchSubmission,\n    promise: api.fetchSubmission(submissionUUID),\n    ...rest,\n  }));\n};\n\n/**\n * Tracked setLock api method.  tracked to the `setLock` request key.\n * @param {string} submissionUUID - target submission id\n * @param {bool} value - requested lock value\n * @param {[func]} onSuccess - onSuccess method ((response) => { ... })\n * @param {[func]} onFailure - onFailure method ((error) => { ... })\n */\nexport const setLock = ({ value, submissionUUID, ...rest }) => (dispatch) => {\n  dispatch(module.networkRequest({\n    requestKey: RequestKeys.setLock,\n    promise: value ? api.lockSubmission(submissionUUID) : api.unlockSubmission(submissionUUID),\n    ...rest,\n  }));\n};\n\n/**\n * Tracked batchUnlock api method.  tracked to the `batchUnlock` request key.\n * @param {string[]} submissionUUIDs - target submission ids\n */\nexport const batchUnlock = ({ submissionUUIDs, ...rest }) => (dispatch) => {\n  dispatch(module.networkRequest({\n    requestKey: RequestKeys.batchUnlock,\n    promise: api.batchUnlockSubmissions(submissionUUIDs),\n    ...rest,\n  }));\n};\n\n/**\n * Tracked initializeApp api method.  tracked to the `initialize` request key.\n * @param {string} submissionUUID - target submission id\n * @param {obj} gradeData - grade data object\n * @param {[func]} onSuccess - onSuccess method ((response) => { ... })\n * @param {[func]} onFailure - onFailure method ((error) => { ... })\n */\nexport const submitGrade = ({ submissionUUID, gradeData, ...rest }) => (dispatch) => {\n  dispatch(module.networkRequest({\n    requestKey: RequestKeys.submitGrade,\n    promise: api.updateGrade(submissionUUID, gradeData),\n    ...rest,\n  }));\n};\n\nexport default StrictDict({\n  fetchSubmission,\n  fetchSubmissionStatus,\n  setLock,\n  submitGrade,\n});\n","import { StrictDict } from 'utils';\n// eslint-disable-next-line import/no-cycle\nimport { selectors, actions } from 'data/redux';\nimport { locationId } from 'data/constants/app';\n\nimport {\n  batchUnlock,\n  initializeApp,\n} from './requests';\nimport * as module from './app';\n\n/**\n * initialize the app, loading ora and course metadata from the api, and loading the initial\n * submission list data.\n */\nexport const initialize = () => (dispatch) => {\n  dispatch(initializeApp({\n    locationId: locationId(),\n    onSuccess: (response) => {\n      dispatch(actions.app.loadIsEnabled(response.isEnabled));\n      dispatch(actions.app.loadOraMetadata(response.oraMetadata));\n      dispatch(actions.app.loadCourseMetadata(response.courseMetadata));\n      dispatch(actions.submissions.loadList(response.submissions));\n    },\n  }));\n};\n\nexport const cancelReview = () => (dispatch, getState) => {\n  dispatch(batchUnlock({\n    submissionUUIDs: selectors.grading.selection(getState()),\n    onSuccess: () => {\n      dispatch(actions.app.setShowReview(false));\n      dispatch(module.initialize());\n    },\n  }));\n};\nexport default StrictDict({\n  cancelReview,\n  initialize,\n});\n","import * as zip from '@zip.js/zip.js';\nimport FileSaver from 'file-saver';\n\nimport { RequestKeys } from 'data/constants/requests';\n// eslint-disable-next-line import/no-cycle\nimport { selectors } from 'data/redux';\nimport { locationId } from 'data/constants/app';\nimport api from 'data/services/lms/api';\n\nimport { networkRequest } from './requests';\nimport * as module from './download';\n\nexport const DownloadException = (files) => ({\n  files,\n  name: 'DownloadException',\n});\n\nexport const FetchSubmissionFilesException = () => ({\n  name: 'FetchSubmissionFilesException',\n});\n\n/**\n * Generate a manifest file content based on files object\n * @param {obj[]} files - list of file entries with downloadUrl, name, description, and size\n * @return {string} - manifest text file content.\n */\nexport const genManifest = (files) => files.map(\n  (file, i) => `Filename: ${i}-${file.name}\\nDescription: ${file.description}\\nSize: ${file.size}`,\n).join('\\n\\n');\n\n/**\n * Zip the blob output of a set of files with a manifest file.\n * @param {obj[]} files - list of file entries with downloadUrl, name, and description\n * @param {blob[]} blobs - file content blobs\n * @return {Promise} - zip async process promise.\n */\nexport const zipFiles = async (files, blobs, username) => {\n  const zipWriter = new zip.ZipWriter(new zip.BlobWriter('application/zip'));\n  await zipWriter.add('manifest.txt', new zip.TextReader(module.genManifest(files)));\n\n  // forEach or map will create additional thread. It is less readable if we create more\n  // promise or async function just to circumvent that.\n  for (let i = 0; i < blobs.length; i++) {\n    // eslint-disable-next-line no-await-in-loop\n    await zipWriter.add(`${i}-${files[i].name}`, new zip.BlobReader(blobs[i]), {\n      bufferedWrite: true,\n    });\n  }\n\n  const zipFile = await zipWriter.close();\n  const zipName = `${username}-${locationId()}.zip`;\n  FileSaver.saveAs(zipFile, zipName);\n};\n\n/**\n * Download a file and return its blob is successful, or null if not.\n * @param {obj} file - file entry with downloadUrl\n * @return {Promise} - file blob or null\n */\nexport const downloadFile = (file) => fetch(\n  file.downloadUrl,\n).then((response) => {\n  if (!response.ok) {\n    // This is necessary because some of the error such as 404 does not throw.\n    // Due to that inconsistency, I have decide to share catch statement like this.\n    throw new Error(response.statusText);\n  }\n  return response.blob();\n});\n\n/**\n * Download blobs given file objects.  Returns a promise map.\n * @param {obj[]} files - list of file entries with downloadUrl, name, and description\n * @return {Promise[]} - Promise map of download attempts (null for failed fetches)\n */\nexport const downloadBlobs = async (files) => {\n  const blobs = [];\n  const errors = [];\n\n  // eslint-disable-next-line no-restricted-syntax\n  for (const file of files) {\n    try {\n      // eslint-disable-next-line no-await-in-loop\n      blobs.push(await module.downloadFile(file));\n    } catch (error) {\n      errors.push(file.name);\n    }\n  }\n  if (errors.length) {\n    throw DownloadException(errors);\n  }\n  return ({ blobs, files });\n};\n\n/**\n * @param {string} submissionUUID\n * @returns Promise\n */\nexport const getSubmissionFiles = async (submissionUUID) => {\n  try {\n    const { files } = await api.fetchSubmissionFiles(submissionUUID);\n    return files;\n  } catch {\n    throw FetchSubmissionFilesException();\n  }\n};\n\n/**\n * Download all files for the selected submission as a zip file.\n * Throw error and do not download zip if any of the files fail to fetch.\n */\nexport const downloadFiles = () => (dispatch, getState) => {\n  const submissionUUID = selectors.grading.selected.submissionUUID(getState());\n  const username = selectors.grading.selected.username(getState());\n  dispatch(networkRequest({\n    requestKey: RequestKeys.downloadFiles,\n    promise: module.getSubmissionFiles(submissionUUID)\n      .then(module.downloadBlobs)\n      .then(({ blobs, files }) => module.zipFiles(files, blobs, username)),\n  }));\n};\n\nexport default {\n  downloadFiles,\n};\n","import { StrictDict } from 'utils';\n// eslint-disable-next-line import/no-cycle\nimport { actions, selectors } from 'data/redux';\nimport { RequestKeys, ErrorStatuses } from 'data/constants/requests';\n\nimport requests from './requests';\nimport * as module from './grading';\n\n/**\n * Fetches the current status for the \"next\" submission in the selected queue,\n * and calls loadNext with it to update the current selection index info.\n * If the new index has a next submission available, preload its response.\n */\nexport const loadNext = () => (dispatch) => {\n  dispatch(actions.requests.clearRequest({ requestKey: RequestKeys.downloadFiles }));\n  dispatch(actions.grading.loadNext());\n  dispatch(module.loadSubmission());\n};\n\n/**\n * Fetches the current status for the \"previous\" submission in the selected queue,\n * and calls loadPrev with it to update the current selection index info.\n * If the new index has a previous submission available, preload its response.\n */\nexport const loadPrev = () => (dispatch) => {\n  dispatch(actions.requests.clearRequest({ requestKey: RequestKeys.downloadFiles }));\n  dispatch(actions.grading.loadPrev());\n  dispatch(module.loadSubmission());\n};\n\n/**\n * Load a list of selected submissionUUIDs, sets the app to review mode, and fetches the current\n * selected submission's full data (grade data, status, and rubric).\n * Then loads current selection and prefetches neighbors.\n * @param {string[]} submissionUUIDs - ordered list of submissionUUIDs for selected submissions\n */\nexport const loadSelectionForReview = (submissionUUIDs) => (dispatch) => {\n  dispatch(actions.grading.updateSelection(submissionUUIDs));\n  dispatch(actions.app.setShowReview(true));\n  dispatch(module.loadSubmission());\n};\n\nexport const loadSubmission = () => (dispatch, getState) => {\n  const submissionUUID = selectors.grading.selected.submissionUUID(getState());\n  dispatch(actions.requests.clearRequest({ requestKey: RequestKeys.submitGrade }));\n  dispatch(requests.fetchSubmission({\n    submissionUUID,\n    onSuccess: (response) => {\n      dispatch(actions.grading.loadSubmission({ ...response, submissionUUID }));\n      if (selectors.grading.selected.isGrading(getState())) {\n        dispatch(actions.app.setShowRubric(true));\n        let { gradeData } = response;\n        gradeData = selectors.app.fillGradeData(getState(), gradeData);\n        const lockStatus = selectors.grading.selected.lockStatus(getState());\n        dispatch(actions.grading.startGrading({ lockStatus, gradeData }));\n      }\n    },\n  }));\n};\n\n/**\n * Start grading the current submission.\n * Attempts to lock the submission, and on a success, sets the local grading state to\n * True, and then loads initializes the grading process with GradeData associated with\n * the current submission.  If there is no grade data, generates an empty grade entry\n * based on the rubric config.\n */\nexport const startGrading = () => (dispatch, getState) => {\n  dispatch(actions.requests.clearRequest({ requestKey: RequestKeys.submitGrade }));\n  dispatch(requests.setLock({\n    value: true,\n    submissionUUID: selectors.grading.selected.submissionUUID(getState()),\n    onSuccess: (response) => {\n      dispatch(actions.app.setShowRubric(true));\n      let gradeData = selectors.grading.selected.gradeData(getState());\n      gradeData = selectors.app.fillGradeData(getState(), gradeData);\n      dispatch(actions.grading.startGrading({ ...response, gradeData }));\n    },\n    onFailure: (error) => {\n      if (error.response.status === ErrorStatuses.forbidden) {\n        dispatch(actions.grading.failSetLock(error.response.data));\n      }\n    },\n  }));\n};\n\n/**\n * Cancels the grading process for the current submission.\n * Releases the lock and dispatches stopGrading on success.\n */\nexport const cancelGrading = () => (dispatch, getState) => {\n  dispatch(actions.requests.clearRequest({ requestKey: RequestKeys.submitGrade }));\n  dispatch(requests.setLock({\n    value: false,\n    submissionUUID: selectors.grading.selected.submissionUUID(getState()),\n    onSuccess: () => {\n      dispatch(actions.grading.stopGrading());\n    },\n    onFailure: (error) => {\n      if (error.response.status === ErrorStatuses.forbidden) {\n        dispatch(actions.grading.failSetLock(error.response.data));\n      }\n    },\n  }));\n};\n\nexport const submitGrade = () => (dispatch, getState) => {\n  const gradeData = selectors.grading.selected.gradingData(getState());\n  const submissionUUID = selectors.grading.selected.submissionUUID(getState());\n  const isValid = selectors.grading.validation.isValidForSubmit(getState());\n  if (isValid) {\n    dispatch(actions.grading.setShowValidation(false));\n    dispatch(requests.submitGrade({\n      submissionUUID,\n      gradeData,\n      onSuccess: (response) => {\n        dispatch(actions.grading.completeGrading(response));\n      },\n      onFailure: (error) => {\n        if (error.response.status === ErrorStatuses.conflict) {\n          dispatch(actions.grading.stopGrading(error.response.data));\n        }\n      },\n    }));\n  } else {\n    dispatch(actions.grading.setShowValidation(true));\n  }\n};\n\nexport default StrictDict({\n  loadSelectionForReview,\n  loadNext,\n  loadPrev,\n  startGrading,\n  cancelGrading,\n  loadSubmission,\n  submitGrade,\n});\n","import { StrictDict } from 'utils';\n// eslint-disable-next-line import/no-cycle\nimport app from './app';\nimport download from './download';\nimport grading from './grading';\n\nexport default StrictDict({\n  app,\n  download,\n  grading,\n});\n","import { combineReducers } from 'redux';\n\nimport { StrictDict } from 'utils';\n\nimport * as app from './app';\nimport * as grading from './grading';\nimport * as requests from './requests';\nimport * as submissions from './submissions';\n\nexport { default as thunkActions } from './thunkActions';\n\nconst modules = {\n  app,\n  grading,\n  requests,\n  submissions,\n};\n\nconst moduleProps = (propName) => Object.keys(modules).reduce(\n  (obj, moduleKey) => ({ ...obj, [moduleKey]: modules[moduleKey][propName] }),\n  {},\n);\n\nconst rootReducer = combineReducers(moduleProps('reducer'));\n\nconst actions = StrictDict(moduleProps('actions'));\n\nconst selectors = StrictDict(moduleProps('selectors'));\n\nexport { actions, selectors };\n\nexport default rootReducer;\n","import { StrictDict } from 'utils';\nimport { ErrorStatuses, RequestKeys } from 'data/constants/requests';\nimport { gradeStatuses, lockStatuses } from 'data/services/lms/constants';\nimport { actions } from 'data/redux';\n\nexport const errorData = (status, data = '') => ({\n  response: {\n    status,\n    data,\n  },\n});\n\nexport const networkErrorData = errorData(ErrorStatuses.badRequest);\n\nconst gradeData = {\n  overallFeedback: 'was okay',\n  criteria: [{ feedback: 'did alright', name: 'firstCriterion', selectedOption: 'good' }],\n};\n\nexport const genTestUtils = ({ dispatch }) => {\n  const mockStart = (requestKey) => () => {\n    dispatch(actions.requests.startRequest(requestKey));\n  };\n\n  const mockError = (requestKey, status, data) => () => {\n    dispatch(actions.requests.failRequest({\n      requestKey,\n      error: errorData(status, data),\n    }));\n  };\n\n  const mockNetworkError = (requestKey) => (\n    mockError(requestKey, ErrorStatuses.badRequest)\n  );\n\n  return {\n    init: StrictDict({\n      start: mockStart(RequestKeys.initialize),\n      networkError: mockNetworkError(RequestKeys.initialize),\n    }),\n    fetch: StrictDict({\n      start: mockStart(RequestKeys.fetchSubmission),\n      mockError: mockError(RequestKeys.fetchSubmission, ErrorStatuses.badRequest),\n    }),\n    submitGrade: StrictDict({\n      start: mockStart(RequestKeys.submitGrade),\n      success: () => {\n        dispatch(actions.requests.completeRequest({\n          requestKey: RequestKeys.submitGrade,\n          response: {\n            gradeStatus: gradeStatuses.graded,\n            lockStatus: lockStatuses.unlocked,\n            gradeData,\n          },\n        }));\n      },\n      networkError: mockError(RequestKeys.submitGrade, ErrorStatuses.badRequest),\n      rejectedError: mockError(\n        RequestKeys.submitGrade,\n        ErrorStatuses.conflict,\n        {\n          submissionStatus: {\n            gradeStatus: gradeStatuses.ungraded,\n            lockStatus: lockStatuses.locked,\n            gradeData,\n          },\n        },\n      ),\n    }),\n    setLock: StrictDict({\n      start: mockStart(RequestKeys.setLock),\n      success: () => {\n        dispatch(actions.requests.completeRequest({\n          requestKey: RequestKeys.setLock,\n          response: {\n            lockStatus: lockStatuses.inProgress,\n          },\n        }));\n      },\n      badRequestError: mockError(RequestKeys.setLock, ErrorStatuses.badRequest),\n      contestedLockError: mockError(RequestKeys.setLock, ErrorStatuses.forbidden, {\n        lockStatus: lockStatuses.locked,\n      }),\n    }),\n  };\n};\n\nexport default genTestUtils;\n","import * as redux from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension/logOnlyInProduction';\nimport { createLogger } from 'redux-logger';\n\nimport apiTestUtils from 'data/services/lms/fakeData/testUtils';\n\nimport reducer, { actions, selectors } from './redux';\n\nexport const createStore = () => {\n  const loggerMiddleware = createLogger();\n\n  const middleware = [thunkMiddleware, loggerMiddleware];\n\n  const store = redux.createStore(\n    reducer,\n    composeWithDevTools(redux.applyMiddleware(...middleware)),\n  );\n\n  /**\n   * Dev tools for redux work\n   */\n  if (process.env.NODE_ENV === 'development') {\n    window.store = store;\n    window.actions = actions;\n    window.selectors = selectors;\n    window.apiTestUtils = apiTestUtils(store);\n  }\n\n  return store;\n};\n\nconst store = createStore();\n\nexport default store;\n","import { messages as footerMessages } from '@edx/frontend-component-footer';\nimport { messages as headerMessages } from '@edx/frontend-component-header';\nimport { messages as paragonMessages } from '@edx/paragon';\n\nimport arMessages from './messages/ar.json';\nimport deDEMessages from './messages/de_DE.json';\nimport es419Messages from './messages/es_419.json';\nimport faIRMessages from './messages/fa_IR.json';\nimport frMessages from './messages/fr.json';\nimport frCAMessages from './messages/fr_CA.json';\nimport hiMessages from './messages/hi.json';\nimport itITMessages from './messages/it_IT.json';\nimport ptPTMessages from './messages/pt_PT.json';\nimport ruMessages from './messages/ru.json';\nimport ukMessages from './messages/uk.json';\nimport zhCNMessages from './messages/zh_CN.json';\n// no need to import en messages-- they are in the defaultMessage field\n\nconst appMessages = {\n  ar: arMessages,\n  'de-de': deDEMessages,\n  'es-419': es419Messages,\n  'fa-ir': faIRMessages,\n  fr: frMessages,\n  'fr-ca': frCAMessages,\n  hi: hiMessages,\n  'it-it': itITMessages,\n  'pt-pt': ptPTMessages,\n  ru: ruMessages,\n  uk: ukMessages,\n  'zh-cn': zhCNMessages,\n};\n\nexport default [\n  headerMessages,\n  footerMessages,\n  paragonMessages,\n  appMessages,\n];\n","/* eslint-disable quotes */\nimport { defineMessages } from '@edx/frontend-platform/i18n';\nimport { StrictDict } from 'utils';\n\nconst messages = defineMessages({\n  demoModeHeading: {\n    id: 'ora-grading.ReviewModal.demoHeading',\n    defaultMessage: 'Demo Mode',\n    description: 'Demo mode heading',\n  },\n  demoModeMessage: {\n    id: 'ora-grading.ReviewModal.demoMessage',\n    defaultMessage: 'You are demoing the new ORA staff grading experience. You will be unable to submit grades until you activate the feature. This will become the default grading experience on May 9th (05/09/2022). To opt-in early, or opt-out, please contact Partner Support.',\n    description: 'Demo mode message',\n  },\n});\n\nexport default StrictDict(messages);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { FormattedMessage } from '@edx/frontend-platform/i18n';\nimport { Alert } from '@edx/paragon';\nimport { Info } from '@edx/paragon/icons';\n\nimport { selectors } from 'data/redux';\nimport messages from './messages';\n\n/**\n * <DemoWarning />\n */\nexport const DemoWarning = ({ hide }) => {\n  if (hide) { return null; }\n  return (\n    <Alert\n      className=\"mb-0 rounded-0\"\n      variant=\"warning\"\n      icon={Info}\n    >\n      <Alert.Heading>\n        <FormattedMessage {...messages.demoModeHeading} />\n      </Alert.Heading>\n      <p><FormattedMessage {...messages.demoModeMessage} /></p>\n    </Alert>\n  );\n};\nDemoWarning.propTypes = {\n  hide: PropTypes.bool.isRequired,\n};\n\nexport const mapStateToProps = (state) => ({\n  hide: selectors.app.isEnabled(state),\n});\nexport const mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DemoWarning);\n","/* eslint-disable quotes */\nimport { defineMessages } from '@edx/frontend-platform/i18n';\nimport { StrictDict } from 'utils';\n\nconst messages = defineMessages({\n  ctaFeedbackMessage: {\n    id: 'ora-grading.CTA.feedbackMessage',\n    defaultMessage: 'Thanks for using the new ORA staff grading experience. ',\n    description: 'Thank user for using ora and ask for feed back',\n  },\n  ctaLinkMessage: {\n    id: 'ora-grading.CTA.linkMessage',\n    defaultMessage: 'Provide some feedback',\n    description: 'placeholder for the feedback anchor link',\n  },\n  ctaLetUsKnowMessage: {\n    id: 'ora-grading.CTA.letUsKnowMessage',\n    defaultMessage: ' and let us know what you think!',\n    description: 'inform user to provide feedback',\n  },\n});\n\nexport default StrictDict(messages);\n","import React from 'react';\n\nimport { FormattedMessage } from '@edx/frontend-platform/i18n';\nimport { PageBanner, Hyperlink } from '@edx/paragon';\n\nimport messages from './messages';\n\n/**\n * <CTA />\n */\nexport const CTA = () => (\n  <PageBanner>\n    <span>\n      <FormattedMessage {...messages.ctaFeedbackMessage} />\n      <Hyperlink\n        isInline\n        variant=\"muted\"\n        destination=\"https://docs.google.com/forms/d/1Hu1rgJcCHl5_EtDb5Up3hiZ40sSUtkZQfRHJ3fWOvfQ/edit\"\n        target=\"_blank\"\n        showLaunchIcon={false}\n      >\n        <FormattedMessage {...messages.ctaLinkMessage} />\n      </Hyperlink>\n      <FormattedMessage {...messages.ctaLetUsKnowMessage} />\n    </span>\n  </PageBanner>\n);\n\nexport default CTA;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Spinner } from '@edx/paragon';\nimport { FormattedMessage } from '@edx/frontend-platform/i18n';\n\n/**\n * <LoadingMessage />\n */\nexport const LoadingMessage = ({ message }) => (\n  <div className=\"w-100 h-100 text-center\">\n    <Spinner animation=\"border\" variant=\"primary\" />\n    <h4><FormattedMessage {...message} /></h4>\n  </div>\n);\nLoadingMessage.defaultProps = {\n};\nLoadingMessage.propTypes = {\n  message: PropTypes.shape({\n    id: PropTypes.string,\n    defaultMessage: PropTypes.string,\n  }).isRequired,\n};\n\nexport default LoadingMessage;\n","import { defineMessages } from '@edx/frontend-platform/i18n';\nimport { gradingStatuses } from './constants';\n\nconst messages = defineMessages({\n  ungraded: {\n    id: 'ora-grading.lms-api.gradingStatusDisplay.ungraded',\n    defaultMessage: 'Ungraded',\n    description: 'Grading status label for ungraded submission',\n  },\n  locked: {\n    id: 'ora-grading.lms-api.gradingStatusDisplay.locked',\n    defaultMessage: 'Currently being graded by someone else',\n    description: 'Grading status label for locked submission',\n  },\n  graded: {\n    id: 'ora-grading.lms-api.gradingStatusDisplay.graded',\n    defaultMessage: 'Grading Completed',\n    description: 'Grading status label for graded submission',\n  },\n  inProgress: {\n    id: 'ora-grading.lms-api.gradingStatusDisplay.inProgress',\n    defaultMessage: 'You are currently grading this response',\n    description: 'Grading status label for in-progress submission',\n  },\n});\n\n// re-keying the messages to ensure that the api can link to them even if the passed\n// status keys change.\nexport default {\n  [gradingStatuses.ungraded]: messages.ungraded,\n  [gradingStatuses.locked]: messages.locked,\n  [gradingStatuses.graded]: messages.graded,\n  [gradingStatuses.inProgress]: messages.inProgress,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Badge } from '@edx/paragon';\nimport { FormattedMessage } from '@edx/frontend-platform/i18n';\n\nimport { StrictDict } from 'utils';\nimport { gradingStatuses as statuses } from 'data/services/lms/constants';\nimport messages from 'data/services/lms/messages';\n\nexport const buttonVariants = StrictDict({\n  primary: 'primary',\n  light: 'light',\n  success: 'success',\n  warning: 'warning',\n});\n\nexport const statusVariants = StrictDict({\n  [statuses.ungraded]: buttonVariants.primary,\n  [statuses.locked]: buttonVariants.light,\n  [statuses.graded]: buttonVariants.success,\n  [statuses.inProgress]: buttonVariants.warning,\n});\n\n/**\n * <StatusBadge />\n */\nexport const StatusBadge = ({ className, status }) => {\n  if (!Object.keys(statusVariants).includes(status)) {\n    return null;\n  }\n  return (\n    <Badge\n      className={className}\n      variant={statusVariants[status]}\n    >\n      <FormattedMessage {...messages[status]} />\n    </Badge>\n  );\n};\nStatusBadge.defaultProps = {\n  className: '',\n};\nStatusBadge.propTypes = {\n  className: PropTypes.string,\n  status: PropTypes.string.isRequired,\n};\n\nexport default StatusBadge;\n","export const nullMethod = () => ({});\n\nexport default {\n  nullMethod,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { AlertModal, ActionRow, Button } from '@edx/paragon';\nimport { nullMethod } from 'hooks';\n\nexport const ConfirmModal = ({\n  title,\n  isOpen,\n  onCancel,\n  cancelText,\n  onConfirm,\n  confirmText,\n  content,\n}) => (\n  <AlertModal\n    className=\"confirm-modal\"\n    title={title}\n    onClose={nullMethod}\n    isOpen={isOpen}\n    footerNode={(\n      <ActionRow>\n        <Button\n          variant=\"tertiary\"\n          onClick={onCancel}\n        >\n          {cancelText}\n        </Button>\n        <Button variant=\"primary\" onClick={onConfirm}>{confirmText}</Button>\n      </ActionRow>\n    )}\n  >\n    <p>{content}</p>\n  </AlertModal>\n);\nConfirmModal.defaultProps = {\n  isOpen: false,\n};\nConfirmModal.propTypes = {\n  isOpen: PropTypes.bool,\n  title: PropTypes.string.isRequired,\n  cancelText: PropTypes.string.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  onConfirm: PropTypes.func.isRequired,\n  confirmText: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n};\n\nexport default ConfirmModal;\n","import { defineMessages } from '@edx/frontend-platform/i18n';\n\nconst messages = defineMessages({\n  overrideConfirmTitle: {\n    id: 'ora-grading.ReviewActions.overrideConfirmTitle',\n    defaultMessage: 'Are you sure you want to override this grade?',\n    description: 'ORA Grading override confirm modal title',\n  },\n  overrideConfirmWarning: {\n    id: 'ora-grading.ReviewActions.overrideConfirmWarning',\n    defaultMessage: 'This cannot be undone.  The learner may have already received their grade.',\n    description: 'ORA Grading override confirm modal warning/content text',\n  },\n  overrideConfirmContinue: {\n    id: 'ora-grading.ReviewActions.overrideConfirmContinue',\n    defaultMessage: 'Continue grade override',\n    description: 'ORA Grading override confirm modal confirm button',\n  },\n  startGrading: {\n    id: 'ora-grading.ReviewActions.StartGradingButton.startGrading',\n    defaultMessage: 'Start grading',\n    description: 'Review pane button text to start grading',\n  },\n  overrideGrade: {\n    id: 'ora-grading.ReviewActions.StartGradingButton.overrideGrade',\n    defaultMessage: 'Override grade',\n    description: 'Review pane button text to start grading an already graded submission',\n  },\n  stopGrading: {\n    id: 'ora-grading.ReviewActions.StartGradingButton.stopGrading',\n    defaultMessage: 'Stop grading this response',\n    description: 'Review pane button text to stop grading',\n  },\n  confirmStopOverrideTitle: {\n    id: 'ora-grading.ReviewActions.StopGradingConfirmModal.override.title',\n    defaultMessage: 'Are you sure you want to stop grade override?',\n    description: 'ORA stop overriding grade confirm modal title',\n  },\n  confirmStopGradingTitle: {\n    id: 'ora-grading.ReviewActions.StopGradingConfirmModal.title',\n    defaultMessage: 'Are you sure you want to stop grading this response?',\n    description: 'ORA stop grading confirm modal title',\n  },\n  confirmStopWarning: {\n    id: 'ora-grading.ReviewActions.StopGradingConfirmModal.warning',\n    defaultMessage: 'Your progress will be lost.',\n    description: 'ORA stop grading confirm modal warning/content text',\n  },\n  confirmStopOverrideAction: {\n    id: 'ora-grading.ReviewActions.StopGradingConfirmModal.override.confirmText',\n    defaultMessage: 'Stop grade override',\n    description: 'ORA stop overriding grade confirm modal confirm text',\n  },\n  confirmStopGradingAction: {\n    id: 'ora-grading.ReviewActions.StopGradingConfirmModal.confirmText',\n    defaultMessage: 'Cancel grading',\n    description: 'ORA stop grading confirm modal confirm text',\n  },\n  goBack: {\n    id: 'ora-grading.ReviewActions.goBack',\n    defaultMessage: 'Go back',\n    description: 'Confirm modal cancel button text',\n  },\n  loadPrevious: {\n    id: 'ora-grading.ReviewActions.loadPrevious',\n    defaultMessage: 'Load previous submission',\n    description: 'Alt text for submission navigation (to previous submission) button',\n  },\n  loadNext: {\n    id: 'ora-grading.ReviewActions.loadNext',\n    defaultMessage: 'Load next submission',\n    description: 'Alt text for submission navigation (to next submission) button',\n  },\n  navigationLabel: {\n    id: 'ora-grading.ReviewActions.navigationLabel',\n    defaultMessage: '{current} of {total}',\n    description: 'Submission navigation location label',\n  },\n});\n\nexport default messages;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { injectIntl, intlShape } from '@edx/frontend-platform/i18n';\n\nimport ConfirmModal from 'components/ConfirmModal';\nimport messages from './messages';\n\nexport const StopGradingConfirmModal = ({\n  intl,\n  isOpen,\n  isOverride,\n  onCancel,\n  onConfirm,\n}) => (\n  <ConfirmModal\n    title={intl.formatMessage(isOverride\n      ? messages.confirmStopOverrideTitle\n      : messages.confirmStopGradingTitle)}\n    content={intl.formatMessage(messages.confirmStopWarning)}\n    cancelText={intl.formatMessage(messages.goBack)}\n    confirmText={intl.formatMessage(isOverride\n      ? messages.confirmStopOverrideAction\n      : messages.confirmStopGradingAction)}\n    onCancel={onCancel}\n    onConfirm={onConfirm}\n    isOpen={isOpen}\n  />\n);\nStopGradingConfirmModal.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  isOverride: PropTypes.bool.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  onConfirm: PropTypes.func.isRequired,\n  // injected\n  intl: intlShape.isRequired,\n};\n\nexport default injectIntl(StopGradingConfirmModal);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { injectIntl, intlShape } from '@edx/frontend-platform/i18n';\n\nimport ConfirmModal from 'components/ConfirmModal';\nimport messages from './messages';\n\nexport const OverrideGradeConfirmModal = ({\n  intl,\n  isOpen,\n  onCancel,\n  onConfirm,\n}) => (\n  <ConfirmModal\n    title={intl.formatMessage(messages.overrideConfirmTitle)}\n    content={intl.formatMessage(messages.overrideConfirmWarning)}\n    cancelText={intl.formatMessage(messages.goBack)}\n    confirmText={intl.formatMessage(messages.overrideConfirmContinue)}\n    onCancel={onCancel}\n    onConfirm={onConfirm}\n    isOpen={isOpen}\n  />\n);\nOverrideGradeConfirmModal.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  onConfirm: PropTypes.func.isRequired,\n  // injected\n  intl: intlShape.isRequired,\n};\n\nexport default injectIntl(OverrideGradeConfirmModal);\n","import { defineMessages } from '@edx/frontend-platform/i18n';\n\nconst messages = defineMessages({\n  startGrading: {\n    id: 'ora-grading.ReviewActions.StartGradingButton.startGrading',\n    defaultMessage: 'Start grading',\n    description: 'Review pane button text to start grading',\n  },\n  overrideGrade: {\n    id: 'ora-grading.ReviewActions.StartGradingButton.overrideGrade',\n    defaultMessage: 'Override grade',\n    description: 'Review pane button text to start grading an already graded submission',\n  },\n  stopGrading: {\n    id: 'ora-grading.ReviewActions.StartGradingButton.stopGrading',\n    defaultMessage: 'Stop grading this response',\n    description: 'Review pane button text to stop grading',\n  },\n});\n\nexport default messages;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { Cancel, Highlight } from '@edx/paragon/icons';\n\nimport { selectors, thunkActions } from 'data/redux';\nimport { RequestKeys } from 'data/constants/requests';\nimport { gradingStatuses as statuses } from 'data/services/lms/constants';\nimport { StrictDict } from 'utils';\nimport * as module from './hooks';\n\nimport messages from './messages';\n\nexport const buttonConfig = {\n  [statuses.ungraded]: {\n    label: messages.startGrading,\n    iconAfter: Highlight,\n  },\n  [statuses.graded]: {\n    label: messages.overrideGrade,\n    iconAfter: Highlight,\n  },\n  [statuses.inProgress]: {\n    label: messages.stopGrading,\n    iconAfter: Cancel,\n  },\n};\n\nexport const state = StrictDict({\n  showConfirmStopGrading: (val) => React.useState(val),\n  showConfirmOverrideGrade: (val) => React.useState(val),\n});\n\nexport const reduxValues = () => ({\n  gradeStatus: useSelector(selectors.grading.selected.gradeStatus),\n  gradingStatus: useSelector(selectors.grading.selected.gradingStatus),\n  gradeIsPending: useSelector((reduxState) => (\n    selectors.requests.isPending(reduxState, { requestKey: RequestKeys.submitGrade })\n  )),\n  lockIsPending: useSelector((reduxState) => (\n    selectors.requests.isPending(reduxState, { requestKey: RequestKeys.setLock })\n  )),\n});\n\nexport const buttonArgs = ({\n  intl,\n  dispatch,\n  overrideGradeState,\n  stopGradingState,\n  gradingStatus,\n  isPending,\n}) => ({\n  iconAfter: module.buttonConfig[gradingStatus].iconAfter,\n  children: intl.formatMessage(module.buttonConfig[gradingStatus].label),\n  disabled: isPending,\n  onClick: () => {\n    if (gradingStatus === statuses.inProgress) {\n      stopGradingState.setShow(true);\n    } else if (gradingStatus === statuses.graded) {\n      overrideGradeState.setShow(true);\n    } else {\n      dispatch(thunkActions.grading.startGrading());\n    }\n  },\n});\n\nexport const overrideGradeArgs = ({\n  dispatch,\n  overrideGradeState: { show, setShow },\n}) => ({\n  isOpen: show,\n  onCancel: () => setShow(false),\n  onConfirm: () => {\n    setShow(false);\n    dispatch(thunkActions.grading.startGrading());\n  },\n});\n\nexport const stopGradingArgs = ({\n  dispatch,\n  isGraded,\n  stopGradingState: { show, setShow },\n}) => ({\n  isOpen: show,\n  onCancel: () => setShow(false),\n  onConfirm: () => {\n    setShow(false);\n    dispatch(thunkActions.grading.cancelGrading());\n  },\n  isOverride: isGraded,\n});\n\nexport const buttonHooks = ({\n  dispatch,\n  intl,\n}) => {\n  const showState = {\n    stopGrading: state.showConfirmStopGrading(false),\n    overrideGrade: state.showConfirmOverrideGrade(false),\n  };\n  const overrideGradeState = {\n    show: showState.overrideGrade[0],\n    setShow: showState.overrideGrade[1],\n  };\n  const stopGradingState = {\n    show: showState.stopGrading[0],\n    setShow: showState.stopGrading[1],\n  };\n\n  const {\n    gradeStatus,\n    gradingStatus,\n    gradeIsPending,\n    lockIsPending,\n  } = module.reduxValues();\n\n  const hide = gradingStatus === statuses.locked;\n  if (hide) {\n    return { hide };\n  }\n  return {\n    hide,\n    overrideGradeArgs: module.overrideGradeArgs({\n      dispatch,\n      overrideGradeState,\n    }),\n    stopGradingArgs: module.stopGradingArgs({\n      dispatch,\n      stopGradingState,\n      isGraded: gradeStatus === statuses.graded,\n    }),\n    buttonArgs: module.buttonArgs({\n      intl,\n      dispatch,\n      stopGradingState,\n      overrideGradeState,\n      isPending: lockIsPending || gradeIsPending,\n      gradingStatus,\n    }),\n  };\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { Button } from '@edx/paragon';\nimport { injectIntl, intlShape } from '@edx/frontend-platform/i18n';\n\nimport StopGradingConfirmModal from '../StopGradingConfirmModal';\nimport OverrideGradeConfirmModal from '../OverrideGradeConfirmModal';\n\nimport * as hooks from './hooks';\n\nexport const StartGradingButton = ({ intl }) => {\n  const dispatch = useDispatch();\n  const {\n    hide,\n    buttonArgs,\n    overrideGradeArgs,\n    stopGradingArgs,\n  } = hooks.buttonHooks({ dispatch, intl });\n\n  if (hide) {\n    return null;\n  }\n\n  return (\n    <>\n      <Button variant=\"primary\" {...buttonArgs} />\n      <OverrideGradeConfirmModal {...overrideGradeArgs} />\n      <StopGradingConfirmModal {...stopGradingArgs} />\n    </>\n  );\n};\n\nStartGradingButton.propTypes = {\n  intl: intlShape.isRequired,\n};\n\nexport default injectIntl(StartGradingButton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { Icon, IconButton } from '@edx/paragon';\nimport { ChevronLeft, ChevronRight } from '@edx/paragon/icons';\nimport { FormattedMessage, injectIntl, intlShape } from '@edx/frontend-platform/i18n';\n\nimport { selectors, thunkActions } from 'data/redux';\nimport messages from './messages';\n\n/**\n * <SubmissionNavigation />\n */\nexport const SubmissionNavigation = ({\n  intl,\n  hasPrevSubmission,\n  hasNextSubmission,\n  loadPrev,\n  loadNext,\n  activeIndex,\n  selectionLength,\n  allowNavigation,\n}) => (\n  <span className=\"submission-navigation\">\n    <IconButton\n      className=\"ml-1\"\n      size=\"inline\"\n      disabled={!hasPrevSubmission || !allowNavigation}\n      alt={intl.formatMessage(messages.loadPrevious)}\n      src={ChevronLeft}\n      iconAs={Icon}\n      onClick={loadPrev}\n    />\n    <span className=\"ml-1\">\n      <FormattedMessage\n        {...messages.navigationLabel}\n        values={{ current: activeIndex + 1, total: selectionLength }}\n      />\n    </span>\n    <IconButton\n      className=\"ml-1\"\n      size=\"inline\"\n      disabled={!hasNextSubmission || !allowNavigation}\n      alt={intl.formatMessage(messages.loadNext)}\n      src={ChevronRight}\n      iconAs={Icon}\n      onClick={loadNext}\n    />\n  </span>\n);\nSubmissionNavigation.defaultProps = {\n  hasPrevSubmission: false,\n  hasNextSubmission: false,\n  allowNavigation: false,\n};\nSubmissionNavigation.propTypes = {\n  // injected\n  intl: intlShape.isRequired,\n  // redux\n  allowNavigation: PropTypes.bool,\n  activeIndex: PropTypes.number.isRequired,\n  hasNextSubmission: PropTypes.bool,\n  hasPrevSubmission: PropTypes.bool,\n  loadNext: PropTypes.func.isRequired,\n  loadPrev: PropTypes.func.isRequired,\n  selectionLength: PropTypes.number.isRequired,\n};\n\nexport const mapStateToProps = (state) => ({\n  allowNavigation: selectors.requests.allowNavigation(state),\n  activeIndex: selectors.grading.activeIndex(state),\n  hasNextSubmission: selectors.grading.next.doesExist(state),\n  hasPrevSubmission: selectors.grading.prev.doesExist(state),\n  selectionLength: selectors.grading.selectionLength(state),\n});\n\nexport const mapDispatchToProps = {\n  loadNext: thunkActions.grading.loadNext,\n  loadPrev: thunkActions.grading.loadPrev,\n};\n\nexport default injectIntl(connect(mapStateToProps, mapDispatchToProps)(SubmissionNavigation));\n","import { defineMessages } from '@edx/frontend-platform/i18n';\n\nconst messages = defineMessages({\n  pointsDisplay: {\n    id: 'ora-grading.ReviewActions.pointsDisplay',\n    defaultMessage: 'Score: {pointsEarned}/{pointsPossible}',\n    description: 'Review pane action bar score display',\n  },\n  hideRubric: {\n    id: 'ora-grading.ReviewActions.hideRubric',\n    defaultMessage: 'Hide Rubric',\n    description: 'Review pane action bar Hide Rubric button text',\n  },\n  showRubric: {\n    id: 'ora-grading.ReviewActions.showRubric',\n    defaultMessage: 'Show Rubric',\n    description: 'Review pane action bar Show Rubric button text',\n  },\n});\n\nexport default messages;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { ActionRow, Button } from '@edx/paragon';\nimport { FormattedMessage } from '@edx/frontend-platform/i18n';\n\nimport { actions, selectors } from 'data/redux';\nimport { RequestKeys } from 'data/constants/requests';\n\nimport StatusBadge from 'components/StatusBadge';\nimport StartGradingButton from './components/StartGradingButton';\nimport SubmissionNavigation from './components/SubmissionNavigation';\nimport messages from './messages';\n\nimport './ReviewActions.scss';\n\nexport const ReviewActions = ({\n  gradingStatus,\n  toggleShowRubric,\n  score: { pointsEarned, pointsPossible },\n  showRubric,\n  userDisplay,\n  isLoaded,\n}) => (\n  <div>\n    <ActionRow className=\"review-actions\">\n      <span className=\"review-actions-username\">\n        <span className=\"lead\">{userDisplay}</span>\n        { gradingStatus && (\n          <StatusBadge className=\"review-actions-status mr-3\" status={gradingStatus} />\n        )}\n        <span className=\"small\">\n          {pointsPossible && (\n            <FormattedMessage\n              {...messages.pointsDisplay}\n              values={{ pointsEarned, pointsPossible }}\n            />\n          )}\n        </span>\n      </span>\n      <div className=\"review-actions-group\">\n        {isLoaded && (\n          <>\n            <Button variant=\"outline-primary mr-2\" onClick={toggleShowRubric}>\n              <FormattedMessage {...(showRubric ? messages.hideRubric : messages.showRubric)} />\n            </Button>\n            <StartGradingButton />\n          </>\n        )}\n        <SubmissionNavigation />\n      </div>\n    </ActionRow>\n  </div>\n);\nReviewActions.defaultProps = {\n  isLoaded: false,\n  gradingStatus: null,\n};\nReviewActions.propTypes = {\n  gradingStatus: PropTypes.string,\n  userDisplay: PropTypes.string.isRequired,\n  score: PropTypes.shape({\n    pointsEarned: PropTypes.number,\n    pointsPossible: PropTypes.number,\n  }).isRequired,\n  showRubric: PropTypes.bool.isRequired,\n  toggleShowRubric: PropTypes.func.isRequired,\n  isLoaded: PropTypes.bool,\n};\n\nexport const mapStateToProps = (state) => ({\n  userDisplay: selectors.grading.selected.userDisplay(state),\n  gradingStatus: selectors.grading.selected.gradingStatus(state),\n  score: selectors.grading.selected.score(state),\n  showRubric: selectors.app.showRubric(state),\n  isLoaded: selectors.requests.isCompleted(state, { requestKey: RequestKeys.fetchSubmission }),\n});\n\nexport const mapDispatchToProps = {\n  toggleShowRubric: actions.app.toggleShowRubric,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ReviewActions);\n","import { StrictDict } from 'utils';\n\nexport const FileTypes = StrictDict({\n  pdf: 'pdf',\n  jpg: 'jpg',\n  jpeg: 'jpeg',\n  png: 'png',\n  bmp: 'bmp',\n  txt: 'txt',\n  gif: 'gif',\n  jfif: 'jfif',\n  pjpeg: 'pjpeg',\n  pjp: 'pjp',\n  svg: 'svg',\n});\n\nexport const downloadSingleLimit = 1610612736; // 1.5GB\nexport const downloadAllLimit = 10737418240; // 10GB\n\nexport default FileTypes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const FileNameCell = ({ value }) => (\n  <div className=\"text-truncate\">{value}</div>\n);\n\nFileNameCell.defaultProps = {};\n\nFileNameCell.propTypes = {\n  value: PropTypes.string.isRequired,\n};\n\nexport default FileNameCell;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const FileExtensionCell = ({ value }) => (\n  <div className=\"text-truncate\">{value.split('.')?.pop().toUpperCase()}</div>\n);\n\nFileExtensionCell.defaultProps = {};\n\nFileExtensionCell.propTypes = {\n  value: PropTypes.string.isRequired,\n};\n\nexport default FileExtensionCell;\n","import { defineMessages } from '@edx/frontend-platform/i18n';\n\nconst messages = defineMessages({\n  altText: {\n    id: 'ora-grading.InfoPopover.alt-text',\n    defaultMessage: 'Display more info',\n    description: 'Info popover trigger element alt-text',\n  },\n});\n\nexport default messages;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  OverlayTrigger,\n  Popover,\n  Icon,\n  IconButton,\n} from '@edx/paragon';\nimport { InfoOutline } from '@edx/paragon/icons';\nimport { injectIntl, intlShape } from '@edx/frontend-platform/i18n';\n\nimport { nullMethod } from 'hooks';\n\nimport messages from './messages';\n\n/**\n * <InfoPopover />\n */\nexport const InfoPopover = ({ onClick, children, intl }) => (\n  <OverlayTrigger\n    trigger=\"focus\"\n    placement=\"right-end\"\n    flip\n    overlay={(\n      <Popover id=\"info-popover\" className=\"overlay-help-popover\">\n        <Popover.Content>{children}</Popover.Content>\n      </Popover>\n    )}\n  >\n    <IconButton\n      className=\"esg-help-icon\"\n      src={InfoOutline}\n      alt={intl.formatMessage(messages.altText)}\n      iconAs={Icon}\n      onClick={onClick}\n    />\n  </OverlayTrigger>\n);\n\nInfoPopover.defaultProps = {\n  onClick: nullMethod,\n};\nInfoPopover.propTypes = {\n  onClick: PropTypes.func,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n  intl: intlShape.isRequired,\n};\n\nexport default injectIntl(InfoPopover);\n","import { defineMessages } from '@edx/frontend-platform/i18n';\n\nconst messages = defineMessages({\n  filePopoverNameTitle: {\n    id: 'ora-grading.FilePopoverContent.filePopoverNameTitle',\n    defaultMessage: 'File Name',\n    description: 'Popover title for file name',\n  },\n  filePopoverDescriptionTitle: {\n    id: 'ora-grading.FilePopoverCellContent.filePopoverDescriptionTitle',\n    defaultMessage: 'File Description',\n    description: 'Popover title for file description',\n  },\n  fileSizeTitle: {\n    id: 'ora-grading.FilePopoverCellContent.fileSizeTitle',\n    defaultMessage: 'File Size',\n    description: 'Popover title for file size',\n  },\n});\n\nexport default messages;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FormattedMessage } from '@edx/frontend-platform/i18n';\nimport filesize from 'filesize';\n\nimport messages from './messages';\n\nexport const FilePopoverContent = ({ name, description, size }) => (\n  <>\n    <div className=\"help-popover-option\">\n      <strong><FormattedMessage {...messages.filePopoverNameTitle} /></strong>\n      <br />\n      {name}\n    </div>\n    <div className=\"help-popover-option\">\n      <strong><FormattedMessage {...messages.filePopoverDescriptionTitle} /></strong>\n      <br />\n      {description}\n    </div>\n    <div className=\"help-popover-option\">\n      <strong><FormattedMessage {...messages.fileSizeTitle} /></strong>\n      <br />\n      {typeof (size) === 'number' ? filesize(size) : 'Unknown'}\n    </div>\n  </>\n);\n\nFilePopoverContent.defaultProps = {\n  description: '',\n  size: null,\n};\n\nFilePopoverContent.propTypes = {\n  name: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  size: PropTypes.number,\n};\n\nexport default FilePopoverContent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport InfoPopover from 'components/InfoPopover';\nimport FilePopoverContent from 'components/FilePopoverContent';\n\nexport const FilePopoverCell = ({ row: { original } }) => (\n  <InfoPopover>\n    <FilePopoverContent {...original} />\n  </InfoPopover>\n);\n\nFilePopoverCell.defaultProps = {\n  row: {\n    original: {},\n  },\n};\n\nFilePopoverCell.propTypes = {\n  row: PropTypes.shape({\n    original: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      downloadURL: PropTypes.string,\n    }),\n  }),\n};\n\nexport default FilePopoverCell;\n","import { defineMessages } from '@edx/frontend-platform/i18n';\n\nconst messages = defineMessages({\n  tableNameHeader: {\n    id: 'ora-grading.ResponseDisplay.SubmissionFiles.tableNameHeader',\n    defaultMessage: 'Name',\n    description: 'Table header file name',\n  },\n  tableExtensionHeader: {\n    id: 'ora-grading.ResponseDisplay.SubmissionFiles.tableExtensionHeader',\n    defaultMessage: 'File Extension',\n    description: 'Table header file extension',\n  },\n  tablePopoverHeader: {\n    id: 'ora-grading.ResponseDisplay.SubmissionFiles.tablePopoverHeader',\n    defaultMessage: 'File Metadata',\n    description: 'Table header for popover file metadata',\n  },\n  downloadFiles: {\n    id: 'ora-grading.ResponseDisplay.SubmissionFiles.downloadFiles',\n    defaultMessage: 'Download files',\n    description: 'Download files inactive state label',\n  },\n  downloading: {\n    id: 'ora-grading.ResponseDisplay.SubmissionFiles.downloading',\n    defaultMessage: 'Downloading',\n    description: 'Download files pending state label',\n  },\n  downloaded: {\n    id: 'ora-grading.ResponseDisplay.SubmissionFiles.downloaded',\n    defaultMessage: 'Downloaded!',\n    description: 'Download files completed state label',\n  },\n  retryDownload: {\n    id: 'ora-grading.ResponseDisplay.SubmissionFiles.retryDownload',\n    defaultMessage: 'Retry download',\n    description: 'Download files failed state label',\n  },\n  submissionFiles: {\n    id: 'ora-grading.ResponseDisplay.SubmissionFiles.submissionFile',\n    defaultMessage: 'Submission Files',\n    description: 'Total submission files',\n  },\n  exceedFileSize: {\n    id: 'ora-grading.ResponseDisplay.SubmissionFiles.fileSizeExceed',\n    defaultMessage: 'Exceeded the allow download size',\n    description: 'Exceed the allow download size error message',\n  },\n});\n\nexport default messages;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from '@edx/frontend-platform/i18n';\n\nimport {\n  StatefulButton,\n  Icon,\n} from '@edx/paragon';\n\nimport { RequestKeys, RequestStates } from 'data/constants/requests';\nimport { selectors, thunkActions } from 'data/redux';\nimport messages from './messages';\n\nexport const statusMapping = {\n  [RequestStates.inactive]: 'default',\n  [RequestStates.pending]: 'pending',\n  [RequestStates.completed]: 'completed',\n  [RequestStates.failed]: 'failed',\n};\n/**\n * <FileDownload />\n */\nexport const FileDownload = ({ requestStatus, downloadFiles }) => (\n  <StatefulButton\n    state={statusMapping[requestStatus.status]}\n    onClick={downloadFiles}\n    icons={{\n      default: <Icon className=\"fa fa-download\" />,\n      pending: <Icon className=\"fa fa-spinner fa-spin\" />,\n      complete: <Icon className=\"fa fa-check\" />,\n      failed: <Icon className=\"fa fa-refresh\" />,\n    }}\n    labels={{\n      default: <FormattedMessage {...messages.downloadFiles} />,\n      pending: <FormattedMessage {...messages.downloading} />,\n      complete: <FormattedMessage {...messages.downloaded} />,\n      failed: <FormattedMessage {...messages.retryDownload} />,\n    }}\n    disabledStates={['pending', 'complete']}\n  />\n);\n\nFileDownload.defaultProps = {\n};\nFileDownload.propTypes = {\n  downloadFiles: PropTypes.func.isRequired,\n  requestStatus: PropTypes.shape({ status: PropTypes.string }).isRequired,\n};\n\nexport const mapStateToProps = (state) => ({\n  requestStatus: selectors.requests.requestStatus(state, { requestKey: RequestKeys.downloadFiles }),\n});\nexport const mapDispatchToProps = {\n  downloadFiles: thunkActions.download.downloadFiles,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FileDownload);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Card, Collapsible, Icon, DataTable, Button,\n} from '@edx/paragon';\nimport { ArrowDropDown, ArrowDropUp, WarningFilled } from '@edx/paragon/icons';\nimport { injectIntl, intlShape } from '@edx/frontend-platform/i18n';\n\nimport { downloadAllLimit, downloadSingleLimit } from 'data/constants/files';\n\nimport FileNameCell from './components/FileNameCell';\nimport FileExtensionCell from './components/FileExtensionCell';\nimport FilePopoverCell from './components/FilePopoverCell';\nimport FileDownload from './FileDownload';\n\nimport messages from './messages';\n\n/**\n * <SubmissionFiles />\n */\nexport class SubmissionFiles extends React.Component {\n  get title() {\n    return `${this.props.intl.formatMessage(messages.submissionFiles)} (${this.props.files.length})`;\n  }\n\n  get canDownload() {\n    let totalFileSize = 0;\n    const exceedFileSize = this.props.files.some(file => {\n      totalFileSize += file.size;\n      return file.size > downloadSingleLimit;\n    });\n\n    return !exceedFileSize && totalFileSize < downloadAllLimit;\n  }\n\n  render() {\n    const { files, intl } = this.props;\n    return (\n      <Card className=\"submission-files\">\n        {files.length ? (\n          <>\n            <Collapsible.Advanced defaultOpen>\n              <Collapsible.Trigger className=\"submission-files-title\">\n                <h3>{this.title}</h3>\n                <Collapsible.Visible whenClosed>\n                  <Icon src={ArrowDropDown} />\n                </Collapsible.Visible>\n                <Collapsible.Visible whenOpen>\n                  <Icon src={ArrowDropUp} />\n                </Collapsible.Visible>\n              </Collapsible.Trigger>\n              <Collapsible.Body className=\"submission-files-body\">\n                <div className=\"submission-files-table\">\n                  <DataTable\n                    columns={[\n                      {\n                        Header: intl.formatMessage(messages.tableNameHeader),\n                        accessor: 'name',\n                        Cell: FileNameCell,\n                      },\n                      {\n                        Header: intl.formatMessage(\n                          messages.tableExtensionHeader,\n                        ),\n                        accessor: 'name',\n                        id: 'extension',\n                        Cell: FileExtensionCell,\n                      },\n                      {\n                        Header: intl.formatMessage(messages.tablePopoverHeader),\n                        accessor: '',\n                        Cell: FilePopoverCell,\n                      },\n                    ]}\n                    data={files}\n                    itemCount={files.length}\n                  >\n                    <DataTable.Table />\n                  </DataTable>\n                </div>\n              </Collapsible.Body>\n            </Collapsible.Advanced>\n            <Card.Footer className=\"text-right\">\n              {\n                this.canDownload ? <FileDownload files={files} /> : (\n                  <div>\n                    <Icon className=\"d-inline-block align-middle\" src={WarningFilled} />\n                    <span className=\"exceed-download-text\"> {intl.formatMessage(messages.exceedFileSize)} </span>\n                    <Button disabled>{intl.formatMessage(messages.downloadFiles)}</Button>\n                  </div>\n                )\n              }\n            </Card.Footer>\n          </>\n        ) : (\n          <div className=\"submission-files-title no-submissions\">\n            <h3>{this.title}</h3>\n          </div>\n        )}\n      </Card>\n    );\n  }\n}\n\nSubmissionFiles.defaultProps = {\n  files: [],\n};\nSubmissionFiles.propTypes = {\n  files: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      downloadURL: PropTypes.string,\n    }),\n  ),\n  intl: intlShape.isRequired,\n};\n\nexport default injectIntl(SubmissionFiles);\n","import { defineMessages } from '@edx/frontend-platform/i18n';\n\nconst messages = defineMessages({\n  fileInfo: {\n    id: 'ora-grading.InfoPopover.fileInfo',\n    defaultMessage: 'File info',\n    description: 'Popover trigger button text for file preview card',\n  },\n  retryButton: {\n    id: 'ora-grading.ResponseDisplay.FileRenderer.retryButton',\n    defaultMessage: 'Retry',\n    description: 'Retry button for error in file renderer',\n  },\n  fileNotFoundError: {\n    id: 'ora-grading.ResponseDisplay.FileRenderer.fileNotFound',\n    defaultMessage: 'File not found',\n    description: 'File not found error message',\n  },\n  unknownError: {\n    id: 'ora-grading.ResponseDisplay.FileRenderer.unknownError',\n    defaultMessage: 'Unknown errors',\n    description: 'Unknown errors message',\n  },\n});\n\nexport default messages;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Button,\n  OverlayTrigger,\n  Popover,\n} from '@edx/paragon';\nimport { InfoOutline } from '@edx/paragon/icons';\nimport { FormattedMessage } from '@edx/frontend-platform/i18n';\nimport { nullMethod } from 'hooks';\nimport messages from './messages';\n\n/**\n * <FileInfo />\n */\nexport const FileInfo = ({ onClick, children }) => (\n  <OverlayTrigger\n    trigger=\"focus\"\n    placement=\"right-end\"\n    flip\n    overlay={(\n      <Popover id=\"file-popover\" className=\"overlay-help-popover\">\n        <Popover.Content>{children}</Popover.Content>\n      </Popover>\n    )}\n  >\n    <Button\n      size=\"sm\"\n      variant=\"tertiary\"\n      onClick={onClick}\n      iconAfter={InfoOutline}\n    >\n      <FormattedMessage {...messages.fileInfo} />\n    </Button>\n  </OverlayTrigger>\n);\n\nFileInfo.defaultProps = {\n  onClick: nullMethod,\n};\nFileInfo.propTypes = {\n  onClick: PropTypes.func,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nexport default FileInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Card, Collapsible } from '@edx/paragon';\nimport FilePopoverContent from 'components/FilePopoverContent';\nimport FileInfo from './FileInfo';\n\nimport './FileCard.scss';\n\n/**\n * <FileCard />\n */\nexport const FileCard = ({ file, children }) => (\n  <Card className=\"file-card\" key={file.name}>\n    <Collapsible\n      className=\"file-collapsible\"\n      defaultOpen\n      title={<h3 className=\"file-card-title\">{file.name}</h3>}\n    >\n      <div className=\"preview-panel\">\n        <FileInfo><FilePopoverContent {...file} /></FileInfo>\n        {children}\n      </div>\n    </Collapsible>\n  </Card>\n);\nFileCard.defaultProps = {\n};\nFileCard.propTypes = {\n  file: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    downloadUrl: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n  }).isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default FileCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Alert, Button } from '@edx/paragon';\nimport { Info } from '@edx/paragon/icons';\nimport { FormattedMessage } from '@edx/frontend-platform/i18n';\n\nconst messageShape = PropTypes.shape({\n  id: PropTypes.string,\n  defaultMessage: PropTypes.string,\n});\n\nexport const ErrorBanner = ({ actions, headingMessage, children }) => {\n  const actionButtons = actions.map(action => (\n    <Button key={action.id} onClick={action.onClick} variant=\"outline-primary\">\n      <FormattedMessage {...action.message} />\n    </Button>\n  ));\n  return (\n    <Alert variant=\"danger\" icon={Info} actions={actionButtons}>\n      <Alert.Heading>\n        <FormattedMessage {...headingMessage} />\n      </Alert.Heading>\n      {children}\n    </Alert>\n  );\n};\nErrorBanner.defaultProps = {\n  actions: [],\n  children: null,\n};\nErrorBanner.propTypes = {\n  actions: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      onClick: PropTypes.func,\n      message: messageShape,\n    }),\n  ),\n  headingMessage: messageShape.isRequired,\n  children: PropTypes.node,\n};\n\nexport default ErrorBanner;\n","import React from 'react';\n\nimport { Alert, Spinner } from '@edx/paragon';\n\nexport const LoadingBanner = () => (\n  <Alert variant=\"info\">\n    <Spinner animation=\"border\" className=\"d-flex m-auto\" />\n  </Alert>\n);\n\nLoadingBanner.defaultProps = {};\nLoadingBanner.propTypes = {};\n\nexport default LoadingBanner;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ImageRenderer = ({\n  url, fileName, onError, onSuccess,\n}) => (\n  <img\n    alt={fileName}\n    className=\"image-renderer\"\n    src={url}\n    onError={onError}\n    onLoad={onSuccess}\n  />\n);\n\nImageRenderer.defaultProps = {\n  fileName: '',\n};\n\nImageRenderer.propTypes = {\n  url: PropTypes.string.isRequired,\n  fileName: PropTypes.string,\n  onError: PropTypes.func.isRequired,\n  onSuccess: PropTypes.func.isRequired,\n};\n\nexport default ImageRenderer;\n","import { useState, useRef } from 'react';\n\nimport { pdfjs } from 'react-pdf';\nimport pdfjsWorker from 'react-pdf/dist/esm/pdf.worker.entry';\n\nimport 'react-pdf/dist/esm/Page/AnnotationLayer.css';\n\nimport { ErrorStatuses } from 'data/constants/requests';\nimport { StrictDict } from 'utils';\nimport * as module from './pdfHooks';\n\npdfjs.GlobalWorkerOptions.workerSrc = pdfjsWorker;\n\nexport const errors = StrictDict({\n  missingPDF: 'MissingPDFException',\n});\n\nexport const state = StrictDict({\n  pageNumber: (val) => useState(val),\n  numPages: (val) => useState(val),\n  relativeHeight: (val) => useState(val),\n});\n\nexport const initialState = {\n  pageNumber: 1,\n  numPages: 1,\n  relativeHeight: 1,\n};\n\nexport const safeSetPageNumber = ({ numPages, rawSetPageNumber }) => (pageNumber) => {\n  if (pageNumber > 0 && pageNumber <= numPages) {\n    rawSetPageNumber(pageNumber);\n  }\n};\n\nexport const rendererHooks = ({\n  onError,\n  onSuccess,\n}) => {\n  const [pageNumber, rawSetPageNumber] = module.state.pageNumber(initialState.pageNumber);\n  const [numPages, setNumPages] = module.state.numPages(initialState.numPages);\n  const [relativeHeight, setRelativeHeight] = module.state.relativeHeight(\n    initialState.relativeHeight,\n  );\n\n  const setPageNumber = module.safeSetPageNumber({ numPages, rawSetPageNumber });\n\n  const wrapperRef = useRef();\n\n  return {\n    pageNumber,\n    numPages,\n    relativeHeight,\n    wrapperRef,\n    onDocumentLoadSuccess: (args) => {\n      onSuccess();\n      setNumPages(args.numPages);\n    },\n    onLoadPageSuccess: (page) => {\n      const pageWidth = page.view[2];\n      const pageHeight = page.view[3];\n      const wrapperHeight = wrapperRef.current.getBoundingClientRect().width;\n      const newHeight = (wrapperHeight * pageHeight) / pageWidth;\n      setRelativeHeight(newHeight);\n    },\n    onDocumentLoadError: (error) => {\n      let status;\n      if (error.name === errors.missingPDF) {\n        status = ErrorStatuses.notFound;\n      } else {\n        status = ErrorStatuses.serverError;\n      }\n      onError(status);\n    },\n    onInputPageChange: ({ target: { value } }) => setPageNumber(parseInt(value, 10)),\n    onPrevPageButtonClick: () => setPageNumber(pageNumber - 1),\n    onNextPageButtonClick: () => setPageNumber(pageNumber + 1),\n    hasNext: pageNumber < numPages,\n    hasPrev: pageNumber > 1,\n  };\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { pdfjs, Document, Page } from 'react-pdf';\nimport {\n  Icon, Form, ActionRow, IconButton,\n} from '@edx/paragon';\nimport { ChevronLeft, ChevronRight } from '@edx/paragon/icons';\nimport pdfjsWorker from 'react-pdf/dist/esm/pdf.worker.entry';\n\nimport 'react-pdf/dist/esm/Page/AnnotationLayer.css';\nimport { rendererHooks } from './pdfHooks';\n\npdfjs.GlobalWorkerOptions.workerSrc = pdfjsWorker;\n\n/**\n * <PDFRenderer />\n */\nexport const PDFRenderer = ({\n  onError,\n  onSuccess,\n  url,\n}) => {\n  const {\n    pageNumber,\n    numPages,\n    relativeHeight,\n    wrapperRef,\n    onDocumentLoadSuccess,\n    onLoadPageSuccess,\n    onDocumentLoadError,\n    onInputPageChange,\n    onNextPageButtonClick,\n    onPrevPageButtonClick,\n    hasNext,\n    hasPrev,\n  } = rendererHooks({ onError, onSuccess });\n\n  return (\n    <div ref={wrapperRef} className=\"pdf-renderer\">\n      <Document\n        file={url}\n        onLoadSuccess={onDocumentLoadSuccess}\n        onLoadError={onDocumentLoadError}\n      >\n        {/* <Outline /> */}\n        <div className=\"page-wrapper\" style={{ height: relativeHeight }}>\n          <Page pageNumber={pageNumber} onLoadSuccess={onLoadPageSuccess} />\n        </div>\n      </Document>\n      <ActionRow className=\"d-flex justify-content-center m-0\">\n        <IconButton\n          size=\"inline\"\n          alt=\"previous pdf page\"\n          iconAs={Icon}\n          src={ChevronLeft}\n          disabled={!hasPrev}\n          onClick={onPrevPageButtonClick}\n        />\n        <Form.Group className=\"d-flex align-items-center m-0\">\n          <Form.Label isInline>Page </Form.Label>\n          <Form.Control\n            type=\"number\"\n            min={0}\n            max={numPages}\n            value={pageNumber}\n            onChange={onInputPageChange}\n          />\n          <Form.Label isInline> of {numPages}</Form.Label>\n        </Form.Group>\n        <IconButton\n          size=\"inline\"\n          alt=\"next pdf page\"\n          iconAs={Icon}\n          src={ChevronRight}\n          disabled={!hasNext}\n          onClick={onNextPageButtonClick}\n        />\n      </ActionRow>\n    </div>\n  );\n};\n\nPDFRenderer.defaultProps = {};\n\nPDFRenderer.propTypes = {\n  url: PropTypes.string.isRequired,\n  onError: PropTypes.func.isRequired,\n  onSuccess: PropTypes.func.isRequired,\n};\n\nexport default PDFRenderer;\n","import { useEffect, useState } from 'react';\nimport { get } from 'axios';\n\nimport { StrictDict } from 'utils';\nimport * as module from './textHooks';\n\nexport const state = StrictDict({\n  content: (val) => useState(val),\n});\n\nexport const fetchFile = async ({\n  setContent,\n  url,\n  onError,\n  onSuccess,\n}) => get(url)\n  .then(({ data }) => {\n    onSuccess();\n    setContent(data);\n  })\n  .catch((e) => onError(e.response.status));\n\nexport const rendererHooks = ({ url, onError, onSuccess }) => {\n  const [content, setContent] = module.state.content('');\n  useEffect(() => {\n    module.fetchFile({\n      setContent,\n      url,\n      onError,\n      onSuccess,\n    });\n  }, [onError, onSuccess, setContent, url]);\n  return { content };\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { rendererHooks } from './textHooks';\n\nconst TXTRenderer = ({ url, onError, onSuccess }) => {\n  const { content } = rendererHooks({ url, onError, onSuccess });\n  return (\n    <pre className=\"txt-renderer\">\n      {content}\n    </pre>\n  );\n};\n\nTXTRenderer.defaultProps = {};\n\nTXTRenderer.propTypes = {\n  url: PropTypes.string.isRequired,\n  onError: PropTypes.func.isRequired,\n  onSuccess: PropTypes.func.isRequired,\n};\n\nexport default TXTRenderer;\n","import React from 'react';\n\nimport { StrictDict } from 'utils';\nimport { ErrorStatuses } from 'data/constants/requests';\nimport { FileTypes } from 'data/constants/files';\n\nimport {\n  PDFRenderer,\n  ImageRenderer,\n  TXTRenderer,\n} from 'components/FilePreview/BaseRenderers';\n\nimport * as module from './hooks';\nimport messages from './messages';\n\n/**\n * Config data\n */\nexport const RENDERERS = StrictDict({\n  [FileTypes.pdf]: PDFRenderer,\n  [FileTypes.jpg]: ImageRenderer,\n  [FileTypes.jpeg]: ImageRenderer,\n  [FileTypes.bmp]: ImageRenderer,\n  [FileTypes.png]: ImageRenderer,\n  [FileTypes.txt]: TXTRenderer,\n  [FileTypes.gif]: ImageRenderer,\n  [FileTypes.jfif]: ImageRenderer,\n  [FileTypes.pjpeg]: ImageRenderer,\n  [FileTypes.pjp]: ImageRenderer,\n  [FileTypes.svg]: ImageRenderer,\n});\n\nexport const SUPPORTED_TYPES = Object.keys(RENDERERS);\n\nexport const ERROR_STATUSES = {\n  [ErrorStatuses.notFound]: messages.fileNotFoundError,\n  [ErrorStatuses.serverError]: messages.unknownError,\n};\n\n/**\n * State hooks\n */\nexport const state = StrictDict({\n  errorStatus: (val) => React.useState(val),\n  isLoading: (val) => React.useState(val),\n});\n\n/**\n * Util methods and transforms\n */\nexport const getFileType = (fileName) => fileName.split('.').pop()?.toLowerCase();\nexport const isSupported = (file) => module.SUPPORTED_TYPES.includes(\n  module.getFileType(file.name),\n);\n\n/**\n * component hooks\n */\nexport const renderHooks = ({\n  file,\n  intl,\n}) => {\n  const [errorStatus, setErrorStatus] = module.state.errorStatus(null);\n  const [isLoading, setIsLoading] = module.state.isLoading(true);\n\n  const setState = (newState) => {\n    setErrorStatus(newState.errorStatus);\n    setIsLoading(newState.isLoading);\n  };\n\n  const stopLoading = (status = null) => setState({ isLoading: false, errorStatus: status });\n\n  const errorMessage = (\n    module.ERROR_STATUSES[errorStatus] || module.ERROR_STATUSES[ErrorStatuses.serverError]\n  );\n  const errorAction = {\n    id: 'retry',\n    onClick: () => setState({ errorStatus: null, isLoading: true }),\n    message: messages.retryButton,\n  };\n  const error = {\n    headerMessage: errorMessage,\n    children: intl.formatMessage(errorMessage),\n    actions: [errorAction],\n  };\n\n  const Renderer = module.RENDERERS[module.getFileType(file.name)];\n  const rendererProps = {\n    fileName: file.name,\n    url: file.downloadUrl,\n    onError: stopLoading,\n    onSuccess: () => stopLoading(),\n  };\n\n  return {\n    errorStatus,\n    isLoading,\n    error,\n    Renderer,\n    rendererProps,\n  };\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { injectIntl, intlShape } from '@edx/frontend-platform/i18n';\n\nimport FileCard from './FileCard';\nimport { ErrorBanner, LoadingBanner } from './Banners';\nimport { renderHooks } from './hooks';\n\n/**\n * <FileRenderer />\n */\nexport const FileRenderer = ({\n  file,\n  intl,\n}) => {\n  const {\n    Renderer,\n    isLoading,\n    errorStatus,\n    error,\n    rendererProps,\n  } = renderHooks({ file, intl });\n  return (\n    <FileCard key={file.downloadUrl} file={file}>\n      {isLoading && <LoadingBanner />}\n      {errorStatus ? (\n        <ErrorBanner {...error} />\n      ) : (\n        <Renderer {...rendererProps} />\n      )}\n    </FileCard>\n  );\n};\n\nFileRenderer.defaultProps = {};\nFileRenderer.propTypes = {\n  file: PropTypes.shape({\n    name: PropTypes.string,\n    downloadUrl: PropTypes.string,\n  }).isRequired,\n  // injected\n  intl: intlShape.isRequired,\n};\n\nexport default injectIntl(FileRenderer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FileRenderer } from 'components/FilePreview';\nimport { isSupported } from 'components/FilePreview/hooks';\n\n/**\n * <PreviewDisplay />\n */\nexport const PreviewDisplay = ({ files }) => (\n  <div className=\"preview-display\">\n    {files.filter(isSupported).map((file) => (\n      <FileRenderer key={file.name} file={file} />\n    ))}\n  </div>\n);\n\nPreviewDisplay.defaultProps = {\n  files: [],\n};\nPreviewDisplay.propTypes = {\n  files: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      downloadUrl: PropTypes.string,\n    }),\n  ),\n};\n\nexport default PreviewDisplay;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { Card } from '@edx/paragon';\n\nimport createDOMPurify from 'dompurify';\n\nimport parse from 'html-react-parser';\n\nimport { selectors } from 'data/redux';\nimport { fileUploadResponseOptions } from 'data/services/lms/constants';\n\nimport SubmissionFiles from './SubmissionFiles';\nimport PreviewDisplay from './PreviewDisplay';\n\nimport './ResponseDisplay.scss';\n\n/**\n * <ResponseDisplay />\n */\nexport class ResponseDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.purify = createDOMPurify(window);\n  }\n\n  get textContents() {\n    return this.props.response.text.map(text => parse(this.purify.sanitize(text)));\n  }\n\n  get submittedFiles() {\n    return this.props.response.files;\n  }\n\n  get allowFileUpload() {\n    return (\n      this.props.fileUploadResponseConfig !== fileUploadResponseOptions.none\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"response-display\">\n        {this.allowFileUpload && <SubmissionFiles files={this.submittedFiles} />}\n        {this.allowFileUpload && <PreviewDisplay files={this.submittedFiles} />}\n        {\n          /*  eslint-disable react/no-array-index-key */\n          this.textContents.map((textContent, index) => (\n            <Card key={index}>\n              <Card.Section className=\"response-display-text-content\">{textContent}</Card.Section>\n            </Card>\n          ))\n        }\n      </div>\n    );\n  }\n}\n\nResponseDisplay.defaultProps = {\n  response: {\n    text: [],\n    files: [],\n  },\n  fileUploadResponseConfig: fileUploadResponseOptions.none,\n};\nResponseDisplay.propTypes = {\n  response: PropTypes.shape({\n    text: PropTypes.arrayOf(PropTypes.string),\n    files: PropTypes.arrayOf(\n      PropTypes.shape({\n        fileName: PropTypes.string,\n      }),\n    ).isRequired,\n  }),\n  fileUploadResponseConfig: PropTypes.oneOf(\n    Object.values(fileUploadResponseOptions),\n  ),\n};\n\nexport const mapStateToProps = (state) => ({\n  response: selectors.grading.selected.response(state),\n  fileUploadResponseConfig: selectors.app.ora.fileUploadResponseConfig(state),\n});\n\nexport const mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResponseDisplay);\n","import { defineMessages } from '@edx/frontend-platform/i18n';\n\nconst messages = defineMessages({\n  warningMessage: {\n    id: 'ora-grading.demoAlert.warningMessage',\n    defaultMessage: 'Grade submission is disabled in the Demo mode of the new ORA Staff Grader.',\n    description: 'Submit Grade button text after successful submission',\n  },\n  confirm: {\n    id: 'ora-grading.demoAlert.confirm',\n    defaultMessage: 'Confirm',\n    description: 'Confirm button text',\n  },\n  title: {\n    id: 'ora-grading.demoAlert.title',\n    defaultMessage: 'Demo submit prevented',\n    description: 'Title of alert modal after submit was prevented because in demo mode',\n  },\n});\n\nexport default messages;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { injectIntl, intlShape } from '@edx/frontend-platform/i18n';\nimport {\n  ActionRow,\n  AlertModal,\n  Button,\n} from '@edx/paragon';\n\nimport messages from './messages';\n\nexport const DemoAlert = ({\n  intl: { formatMessage },\n  isOpen,\n  onClose,\n}) => (\n  <AlertModal\n    title={formatMessage(messages.title)}\n    isOpen={isOpen}\n    onClose={onClose}\n    footerNode={(\n      <ActionRow>\n        <Button variant=\"primary\" onClick={onClose}>\n          {formatMessage(messages.confirm)}\n        </Button>\n      </ActionRow>\n    )}\n  >\n    <p>{formatMessage(messages.warningMessage)}</p>\n  </AlertModal>\n);\nDemoAlert.propTypes = {\n  intl: intlShape.isRequired,\n  isOpen: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default injectIntl(DemoAlert);\n","import { defineMessages } from '@edx/frontend-platform/i18n';\n\nconst messages = defineMessages({\n  addComments: {\n    id: 'ora-grading.CriterionFeedback.addCommentsLabel',\n    defaultMessage: 'Add comments',\n    description: 'label for editable feedback field',\n  },\n  comments: {\n    id: 'ora-grading.CriterionFeedback.commentsLabel',\n    defaultMessage: 'Comments',\n    description: 'label for read-only feedback field',\n  },\n  optional: {\n    id: 'ora-grading.CriterionFeedback.optional',\n    defaultMessage: '(Optional)',\n    description: 'additional label for optional feedback field',\n  },\n  optionPoints: {\n    id: 'ora-grading.RadioCriterion.optionPoints',\n    defaultMessage: '{points} points',\n    description: 'criterion option point value display',\n  },\n  rubricSelectedError: {\n    id: 'ora-grading.RadioCriterion.rubricSelectedError',\n    defaultMessage: 'Rubric selection is required',\n    description: 'Error message when rubric radio did not get selected',\n  },\n  criterionFeedbackError: {\n    id: 'ora-grading.CriterionFeedback.criterionFeedbackError',\n    defaultMessage: 'The feedback is required',\n    description: 'Error message when feedback is required',\n  },\n});\n\nexport default messages;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { Form } from '@edx/paragon';\nimport { injectIntl, intlShape } from '@edx/frontend-platform/i18n';\n\nimport { actions, selectors } from 'data/redux';\nimport messages from './messages';\n\n/**\n * <RadioCriterion />\n */\nexport class RadioCriterion extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange(event) {\n    this.props.setCriterionOption({\n      orderNum: this.props.orderNum,\n      value: event.target.value,\n    });\n  }\n\n  render() {\n    const {\n      config,\n      data,\n      intl,\n      isGrading,\n      isInvalid,\n    } = this.props;\n    return (\n      <Form.RadioSet name={config.name} value={data}>\n        {config.options.map((option) => (\n          <Form.Radio\n            className=\"criteria-option\"\n            key={option.name}\n            value={option.name}\n            description={intl.formatMessage(messages.optionPoints, { points: option.points })}\n            onChange={this.onChange}\n            disabled={!isGrading}\n          >\n            {option.label}\n          </Form.Radio>\n        ))}\n        {isInvalid && (\n        <Form.Control.Feedback type=\"invalid\" className=\"feedback-error-msg\">\n          {intl.formatMessage(messages.rubricSelectedError)}\n        </Form.Control.Feedback>\n        )}\n      </Form.RadioSet>\n    );\n  }\n}\n\nRadioCriterion.defaultProps = {\n  data: {\n    grading: '',\n    review: '',\n  },\n};\n\nRadioCriterion.propTypes = {\n  orderNum: PropTypes.number.isRequired,\n  isGrading: PropTypes.bool.isRequired,\n  // injected\n  intl: intlShape.isRequired,\n  // redux\n  config: PropTypes.shape({\n    prompt: PropTypes.string,\n    name: PropTypes.string,\n    feedback: PropTypes.string,\n    options: PropTypes.arrayOf(\n      PropTypes.shape({\n        explanation: PropTypes.string,\n        feedback: PropTypes.string,\n        label: PropTypes.string,\n        name: PropTypes.string,\n        points: PropTypes.number,\n      }),\n    ),\n  }).isRequired,\n  data: PropTypes.string,\n  setCriterionOption: PropTypes.func.isRequired,\n  isInvalid: PropTypes.bool.isRequired,\n};\n\nexport const mapStateToProps = (state, { orderNum }) => ({\n  config: selectors.app.rubric.criterionConfig(state, { orderNum }),\n  data: selectors.grading.selected.criterionSelectedOption(state, { orderNum }),\n  isInvalid: selectors.grading.validation.criterionSelectedOptionIsInvalid(state, { orderNum }),\n});\n\nexport const mapDispatchToProps = {\n  setCriterionOption: actions.grading.setCriterionOption,\n};\n\nexport default injectIntl(connect(mapStateToProps, mapDispatchToProps)(RadioCriterion));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { Form } from '@edx/paragon';\nimport { injectIntl, intlShape } from '@edx/frontend-platform/i18n';\n\nimport { feedbackRequirement } from 'data/services/lms/constants';\nimport { actions, selectors } from 'data/redux';\nimport messages from './messages';\n\n/**\n * <CriterionFeedback />\n */\nexport class CriterionFeedback extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange(event) {\n    this.props.setValue({\n      value: event.target.value,\n      orderNum: this.props.orderNum,\n    });\n  }\n\n  get commentMessage() {\n    const { config, isGrading } = this.props;\n    let commentMessage = this.translate(isGrading ? messages.addComments : messages.comments);\n    if (config === feedbackRequirement.optional) {\n      commentMessage += ` ${this.translate(messages.optional)}`;\n    }\n    return commentMessage;\n  }\n\n  translate = (msg) => this.props.intl.formatMessage(msg);\n\n  render() {\n    const {\n      config,\n      isGrading,\n      value,\n      isInvalid,\n    } = this.props;\n    if (config === feedbackRequirement.disabled) {\n      return null;\n    }\n    return (\n      <Form.Group isInvalid={this.feedbackIsInvalid}>\n        <Form.Control\n          as=\"textarea\"\n          className=\"criterion-feedback feedback-input\"\n          floatingLabel={this.commentMessage}\n          value={value}\n          onChange={this.onChange}\n          disabled={!isGrading}\n        />\n        {isInvalid && (\n          <Form.Control.Feedback type=\"invalid\" className=\"feedback-error-msg\">\n            {this.translate(messages.criterionFeedbackError)}\n          </Form.Control.Feedback>\n        )}\n      </Form.Group>\n    );\n  }\n}\n\nCriterionFeedback.defaultProps = {\n  value: '',\n};\n\nCriterionFeedback.propTypes = {\n  orderNum: PropTypes.number.isRequired,\n  isGrading: PropTypes.bool.isRequired,\n  // injected\n  intl: intlShape.isRequired,\n  // redux\n  config: PropTypes.string.isRequired,\n  setValue: PropTypes.func.isRequired,\n  value: PropTypes.string,\n  isInvalid: PropTypes.bool.isRequired,\n};\n\nexport const mapStateToProps = (state, { orderNum }) => ({\n  config: selectors.app.rubric.criterionFeedbackConfig(state, { orderNum }),\n  value: selectors.grading.selected.criterionFeedback(state, { orderNum }),\n  isInvalid: selectors.grading.validation.criterionFeedbackIsInvalid(state, { orderNum }),\n});\n\nexport const mapDispatchToProps = {\n  setValue: actions.grading.setCriterionFeedback,\n};\n\nexport default injectIntl(\n  connect(mapStateToProps, mapDispatchToProps)(CriterionFeedback),\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { Form, FormControlFeedback } from '@edx/paragon';\nimport { FormattedMessage } from '@edx/frontend-platform/i18n';\n\nimport { selectors } from 'data/redux';\nimport messages from './messages';\n\n/**\n * <ReviewCriterion />\n */\nexport const ReviewCriterion = ({ config }) => (\n  <div className=\"review-criterion\">\n    {config.options.map((option) => (\n      <div key={option.name} className=\"criteria-option\">\n        <div>\n          <Form.Label className=\"option-label\">{option.label}</Form.Label>\n          <FormControlFeedback className=\"option-points\">\n            <FormattedMessage {...messages.optionPoints} values={{ points: option.points }} />\n          </FormControlFeedback>\n        </div>\n      </div>\n    ))}\n  </div>\n);\n\nReviewCriterion.defaultProps = {\n  data: {},\n};\nReviewCriterion.propTypes = {\n  // redux\n  config: PropTypes.shape({\n    prompt: PropTypes.string,\n    feedback: PropTypes.string,\n    options: PropTypes.arrayOf(\n      PropTypes.shape({\n        explanation: PropTypes.string,\n        label: PropTypes.string,\n        name: PropTypes.string,\n        points: PropTypes.number,\n      }),\n    ),\n  }).isRequired,\n  data: PropTypes.shape({\n    selectedOption: PropTypes.string,\n    feedback: PropTypes.string,\n  }),\n};\n\nexport const mapStateToProps = (state, { orderNum }) => ({\n  config: selectors.app.rubric.criterionConfig(state, { orderNum }),\n  data: selectors.grading.selected.criterionGradeData(state, { orderNum }),\n});\n\nexport const mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ReviewCriterion);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { Form } from '@edx/paragon';\n\nimport { selectors } from 'data/redux';\nimport { gradeStatuses } from 'data/services/lms/constants';\n\nimport InfoPopover from 'components/InfoPopover';\nimport RadioCriterion from './RadioCriterion';\nimport CriterionFeedback from './CriterionFeedback';\nimport ReviewCriterion from './ReviewCriterion';\n\n/**\n * <CriterionContainer />\n */\nexport const CriterionContainer = (props) => {\n  const {\n    config, isGrading, orderNum, gradeStatus,\n  } = props;\n  return (\n    <Form.Group>\n      <Form.Label className=\"criteria-label\">\n        <span className=\"criteria-title\">{config.prompt}</span>\n        <InfoPopover>\n          {config.options.map((option) => (\n            <div key={option.name} className=\"help-popover-option\">\n              <strong>{option.label}</strong>\n              <br />\n              {option.explanation}\n            </div>\n          ))}\n        </InfoPopover>\n      </Form.Label>\n      <div className=\"rubric-criteria\">\n        {isGrading || gradeStatus === gradeStatuses.graded ? (\n          <RadioCriterion orderNum={orderNum} isGrading={isGrading} />\n        ) : (\n          <ReviewCriterion orderNum={orderNum} />\n        )}\n      </div>\n      <CriterionFeedback orderNum={orderNum} isGrading={isGrading} />\n    </Form.Group>\n  );\n};\n\nCriterionContainer.defaultProps = {};\n\nCriterionContainer.propTypes = {\n  isGrading: PropTypes.bool.isRequired,\n  orderNum: PropTypes.number.isRequired,\n  // redux\n  config: PropTypes.shape({\n    prompt: PropTypes.string,\n    feedback: PropTypes.string,\n    options: PropTypes.arrayOf(\n      PropTypes.shape({\n        explanation: PropTypes.string,\n        label: PropTypes.string,\n        name: PropTypes.string,\n        points: PropTypes.number,\n      }),\n    ),\n  }).isRequired,\n  gradeStatus: PropTypes.oneOf(Object.values(gradeStatuses)).isRequired,\n};\n\nexport const mapStateToProps = (state, { orderNum }) => ({\n  config: selectors.app.rubric.criterionConfig(state, { orderNum }),\n  gradeStatus: selectors.grading.selected.gradeStatus(state),\n});\n\nexport const mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CriterionContainer);\n","import { defineMessages } from '@edx/frontend-platform/i18n';\n\nconst messages = defineMessages({\n  gradeSubmitted: {\n    id: 'ora-grading.Rubric.gradeSubmitted',\n    defaultMessage: 'Grade Submitted',\n    description: 'Submit Grade button text after successful submission',\n  },\n  rubric: {\n    id: 'ora-grading.Rubric.rubric',\n    defaultMessage: 'Rubric',\n    description: 'Rubric interface label',\n  },\n  submitGrade: {\n    id: 'ora-grading.Rubric.submitGrade',\n    defaultMessage: 'Submit grade',\n    description: 'Submit Grade button text',\n  },\n  submittingGrade: {\n    id: 'ora-grading.Rubric.submittingGrade',\n    defaultMessage: 'Submitting grade',\n    description: 'Submit Grade button text while submitting',\n  },\n  overallComments: {\n    id: 'ora-grading.Rubric.overallComments',\n    defaultMessage: 'Overall comments',\n    description: 'Rubric overall comments label',\n  },\n  addComments: {\n    id: 'ora-grading.Rubric.addComments',\n    defaultMessage: 'Add comments (Optional)',\n    description: 'Rubric comments input label',\n  },\n  comments: {\n    id: 'ora-grading.Rubric.comments',\n    defaultMessage: 'Comments (Optional)',\n    description: 'Rubric comments display label',\n  },\n  overallFeedbackError: {\n    id: 'ora-grading.RubricFeedback.error',\n    defaultMessage: 'The overall feedback is required',\n    description: 'Error message when feedback input is required',\n  },\n});\n\nexport default messages;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { Form } from '@edx/paragon';\nimport {\n  FormattedMessage,\n  injectIntl,\n  intlShape,\n} from '@edx/frontend-platform/i18n';\n\nimport { feedbackRequirement } from 'data/services/lms/constants';\nimport { actions, selectors } from 'data/redux';\nimport InfoPopover from 'components/InfoPopover';\n\nimport messages from './messages';\n\n/**\n * <RubricFeedback />\n */\nexport class RubricFeedback extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange(event) {\n    this.props.setValue(event.target.value);\n  }\n\n  get inputLabel() {\n    return this.props.intl.formatMessage(\n      this.props.isGrading ? messages.addComments : messages.comments,\n    );\n  }\n\n  render() {\n    const {\n      isGrading, value, feedbackPrompt, config, isInvalid,\n    } = this.props;\n\n    if (config === feedbackRequirement.disabled) {\n      return null;\n    }\n    return (\n      <Form.Group>\n        <Form.Label className=\"criteria-label\">\n          <span className=\"criteria-title\">\n            <FormattedMessage {...messages.overallComments} />\n          </span>\n          <InfoPopover>\n            <div>{feedbackPrompt}</div>\n          </InfoPopover>\n        </Form.Label>\n        <Form.Control\n          as=\"textarea\"\n          className=\"rubric-feedback feedback-input\"\n          floatingLabel={this.inputLabel}\n          value={value}\n          onChange={this.onChange}\n          disabled={!isGrading}\n        />\n        {isInvalid && (\n          <Form.Control.Feedback type=\"invalid\" className=\"feedback-error-msg\">\n            <FormattedMessage {...messages.overallFeedbackError} />\n          </Form.Control.Feedback>\n        )}\n      </Form.Group>\n    );\n  }\n}\n\nRubricFeedback.defaultProps = {\n  value: { grading: '', review: '' },\n};\n\nRubricFeedback.propTypes = {\n  // injected\n  intl: intlShape.isRequired,\n  // redux\n  config: PropTypes.string.isRequired,\n  isGrading: PropTypes.bool.isRequired,\n  setValue: PropTypes.func.isRequired,\n  value: PropTypes.string,\n  isInvalid: PropTypes.bool.isRequired,\n  feedbackPrompt: PropTypes.string.isRequired,\n};\n\nexport const mapStateToProps = (state) => ({\n  isGrading: selectors.grading.selected.isGrading(state),\n  value: selectors.grading.selected.overallFeedback(state),\n  isInvalid: selectors.grading.validation.overallFeedbackIsInvalid(state),\n  config: selectors.app.rubric.feedbackConfig(state),\n  feedbackPrompt: selectors.app.rubric.feedbackPrompt(state),\n});\n\nexport const mapDispatchToProps = {\n  setValue: actions.grading.setRubricFeedback,\n};\n\nexport default injectIntl(\n  connect(mapStateToProps, mapDispatchToProps)(RubricFeedback),\n);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { StrictDict } from 'utils';\nimport { selectors, thunkActions } from 'data/redux';\nimport { RequestKeys } from 'data/constants/requests';\n\nimport * as module from './hooks';\n\nexport const ButtonStates = StrictDict({\n  default: 'default',\n  pending: 'pending',\n  complete: 'complete',\n  error: 'error',\n});\n\nexport const state = {\n  showDemoAlert: (val) => React.useState(val),\n};\n\nexport const reduxValues = () => ({\n  criteriaIndices: useSelector(selectors.app.rubric.criteriaIndices),\n  gradeIsPending: useSelector(\n    val => selectors.requests.isPending(val, { requestKey: RequestKeys.submitGrade }),\n  ),\n  isCompleted: useSelector(\n    val => selectors.requests.isCompleted(val, { requestKey: RequestKeys.submitGrade }),\n  ),\n  isEnabled: useSelector(selectors.app.isEnabled),\n  isGrading: useSelector(selectors.grading.selected.isGrading),\n  lockIsPending: useSelector(\n    val => selectors.requests.isPending(val, { requestKey: RequestKeys.setLock }),\n  ),\n});\n\nexport const rendererHooks = ({\n  dispatch,\n}) => {\n  const [showDemoAlert, setShowDemoAlert] = module.state.showDemoAlert(false);\n  const {\n    criteriaIndices,\n    gradeIsPending,\n    isCompleted,\n    isEnabled,\n    isGrading,\n    lockIsPending,\n  } = module.reduxValues();\n\n  const isPending = (gradeIsPending || lockIsPending);\n  let submitButtonState;\n  if (isCompleted) {\n    submitButtonState = ButtonStates.complete;\n  } else if (isPending) {\n    submitButtonState = ButtonStates.pending;\n  } else {\n    submitButtonState = ButtonStates.default;\n  }\n\n  const criteria = criteriaIndices.map((index) => ({\n    isGrading,\n    key: index,\n    orderNum: index,\n  }));\n\n  return {\n    criteria,\n    showFooter: isGrading || isCompleted,\n    buttonProps: {\n      onClick: () => (\n        !isEnabled\n          ? setShowDemoAlert(true)\n          : dispatch(thunkActions.grading.submitGrade())\n      ),\n      state: submitButtonState,\n      disabledStates: [ButtonStates.pending, ButtonStates.complete],\n    },\n    demoAlertProps: {\n      isOpen: showDemoAlert,\n      onClose: () => setShowDemoAlert(false),\n    },\n  };\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { Card, StatefulButton } from '@edx/paragon';\nimport { injectIntl, intlShape } from '@edx/frontend-platform/i18n';\n\nimport DemoAlert from 'components/DemoAlert';\nimport CriterionContainer from 'containers/CriterionContainer';\nimport RubricFeedback from './RubricFeedback';\n\nimport * as hooks from './hooks';\nimport messages from './messages';\n\nimport './Rubric.scss';\n\nconst { ButtonStates } = hooks;\n\n/**\n * <Rubric />\n */\nexport const Rubric = ({ intl }) => {\n  const dispatch = useDispatch();\n  const {\n    criteria,\n    showFooter,\n    buttonProps,\n    demoAlertProps,\n  } = hooks.rendererHooks({ dispatch });\n  return (\n    <>\n      <Card className=\"grading-rubric-card\">\n        <Card.Section className=\"grading-rubric-body\">\n          <h3>{intl.formatMessage(messages.rubric)}</h3>\n          <hr className=\"m-2.5\" />\n          {criteria.map(props => <CriterionContainer {...props} />)}\n          <hr />\n          <RubricFeedback />\n        </Card.Section>\n        {showFooter && (\n          <div className=\"grading-rubric-footer\">\n            <StatefulButton\n              {...buttonProps}\n              labels={{\n                [ButtonStates.default]: intl.formatMessage(messages.submitGrade),\n                [ButtonStates.pending]: intl.formatMessage(messages.submittingGrade),\n                [ButtonStates.complete]: intl.formatMessage(messages.gradeSubmitted),\n              }}\n            />\n          </div>\n        )}\n      </Card>\n      <DemoAlert {...demoAlertProps} />\n    </>\n  );\n};\nRubric.propTypes = {\n  // injected\n  intl: intlShape.isRequired,\n};\n\nexport default injectIntl(Rubric);\n","/* eslint-disable quotes */\nimport { defineMessages } from '@edx/frontend-platform/i18n';\nimport { StrictDict } from 'utils';\n\nconst messages = defineMessages({\n  loadErrorHeading: {\n    id: 'ora-grading.ReviewModal.loadErrorHeading',\n    defaultMessage: 'Error loading submissions',\n    description: 'Submission response load failure alert header',\n  },\n  loadErrorMessage: {\n    id: 'ora-grading.ReviewModal.loadErrorMessage1',\n    defaultMessage: 'An error occurred while loading this submission.  Try reloading this submission.',\n    description: 'Submission response load failure alert message',\n  },\n  reloadSubmission: {\n    id: 'ora-grading.ReviewModal.reloadSubmission',\n    defaultMessage: 'Reload submission',\n    description: 'Reload button text in case of network failure',\n  },\n  gradeNotSubmittedHeading: {\n    id: 'ora-grading.ReviewModal.gradeNotSubmitted.heading',\n    defaultMessage: 'Grade not submitted',\n    description: 'Grade submission network error heading',\n  },\n  gradeNotSubmittedContent: {\n    id: 'ora-grading.ReviewModal.gradeNotSubmitted.Content',\n    defaultMessage: \"We're sorry, something went wrong when we tried to submit this grade.  Please try again.\",\n    description: 'Grade submission network error message',\n  },\n  resubmitGrade: {\n    id: 'ora-grading.ReviewModal.resubmitGrade',\n    defaultMessage: 'Resubmit grate',\n    description: 'Resubmit grade button after network failure',\n  },\n  dismiss: {\n    id: 'ora-grading.ReviewModal.dismiss',\n    defaultMessage: 'Dismiss',\n    description: 'Dismiss error action button text',\n  },\n  errorSubmittingGradeHeading: {\n    id: 'ora-grading.ReviewModal.errorSubmittingGrade.Heading',\n    defaultMessage: 'Error submitting grade',\n    description: 'Error Submitting Grade heading text',\n  },\n  errorSubmittingGradeContent: {\n    id: 'ora-grading.ReviewModal.errorSubmittingGrade.Content',\n    defaultMessage: 'It looks like someone else got here first!  Your grade submission has been rejected',\n    description: 'Error Submitting Grade content',\n  },\n  errorLockContestedHeading: {\n    id: 'ora-grading.ReviewModal.errorLockContestedHeading',\n    defaultMessage: 'The lock owned by another user',\n    description: 'Error lock by someone else',\n  },\n  errorLockContested: {\n    id: 'ora-grading.ReviewModal.errorLockContested',\n    defaultMessage: 'The lock owned by another user',\n    description: 'Error lock by someone else',\n  },\n  errorLockBadRequestHeading: {\n    id: 'ora-grading.ReviewModal.errorLockBadRequestHeading',\n    defaultMessage: 'Invalid request. Please check your input.',\n    description: 'Error lock request for missing params',\n  },\n  errorLockBadRequest: {\n    id: 'ora-grading.ReviewModal.errorLockBadRequest',\n    defaultMessage: 'Invalid request. Please check your input.',\n    description: 'Error lock request for missing params',\n  },\n  downloadFailedHeading: {\n    id: 'ora-grading.ReviewModal.errorDownloadFailed',\n    defaultMessage: `Couldn't download files`,\n  },\n  downloadFailedContent: {\n    id: 'ora-grading.ReviewModal.errorDownloadFailedContent',\n    defaultMessage: `We're sorry, something went wrong when we tried to download these files.  Please try again.`,\n    description: 'Failed download error content',\n  },\n  retryDownload: {\n    id: 'ora-grading.ReviewModal.errorRetryDownload',\n    defaultMessage: 'Retry download',\n    description: 'Failed download retry button text',\n  },\n  failedFiles: {\n    id: 'ora-grading.ReviewModal.errorDownloadFailedFiles',\n    defaultMessage: 'Failed files:',\n    description: 'List header for file download failure alert',\n  },\n});\n\nexport default StrictDict(messages);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Alert, Button } from '@edx/paragon';\nimport { Info } from '@edx/paragon/icons';\nimport { FormattedMessage } from '@edx/frontend-platform/i18n';\n\nconst messageShape = PropTypes.shape({\n  id: PropTypes.string,\n  defaultMessage: PropTypes.string,\n});\n\nconst ReviewError = ({\n  actions: {\n    cancel,\n    confirm,\n  },\n  className,\n  headingMessage,\n  variant,\n  children,\n}) => {\n  const actions = [];\n  if (cancel) {\n    actions.push((\n      <Button key=\"cancel\" onClick={cancel.onClick} variant=\"outline-primary\">\n        <FormattedMessage {...cancel.message} />\n      </Button>\n    ));\n  }\n  if (confirm) {\n    actions.push((\n      <Button key=\"confirm\" onClick={confirm.onClick}>\n        <FormattedMessage {...confirm.message} />\n      </Button>\n    ));\n  }\n  return (\n    <Alert\n      variant={variant}\n      icon={Info}\n      className={className}\n      actions={actions}\n    >\n      <Alert.Heading><FormattedMessage {...headingMessage} /></Alert.Heading>\n      <p>{children}</p>\n    </Alert>\n  );\n};\nReviewError.defaultProps = {\n  actions: {},\n  className: '',\n  variant: 'danger',\n};\nReviewError.propTypes = {\n  actions: PropTypes.shape({\n    cancel: PropTypes.shape({\n      onClick: PropTypes.func,\n      message: messageShape,\n    }),\n    confirm: PropTypes.shape({\n      onClick: PropTypes.func,\n      message: messageShape,\n    }),\n  }),\n  className: PropTypes.string,\n  headingMessage: messageShape.isRequired,\n  variant: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nexport default ReviewError;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { FormattedMessage } from '@edx/frontend-platform/i18n';\n\nimport { selectors, thunkActions } from 'data/redux';\nimport { RequestKeys } from 'data/constants/requests';\n\nimport messages from './messages';\n\nimport ReviewError from './ReviewError';\n\n/**\n * <FetchErrors />\n */\nexport const FetchErrors = ({\n  isFailed,\n  reload,\n}) => isFailed && (\n  <ReviewError\n    key=\"loadFailed\"\n    actions={{\n      confirm: {\n        onClick: reload,\n        message: messages.reloadSubmission,\n      },\n    }}\n    headingMessage={messages.loadErrorHeading}\n  >\n    <FormattedMessage {...messages.loadErrorMessage} />\n  </ReviewError>\n);\nFetchErrors.defaultProps = {\n};\nFetchErrors.propTypes = {\n  // redux\n  isFailed: PropTypes.bool.isRequired,\n  reload: PropTypes.func.isRequired,\n};\n\nexport const mapStateToProps = (state) => ({\n  isFailed: selectors.requests.isFailed(state, { requestKey: RequestKeys.fetchSubmission }),\n});\n\nexport const mapDispatchToProps = {\n  reload: thunkActions.grading.loadSubmission,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FetchErrors);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { FormattedMessage } from '@edx/frontend-platform/i18n';\n\nimport { selectors } from 'data/redux';\nimport { RequestKeys, ErrorStatuses } from 'data/constants/requests';\n\nimport messages from './messages';\n\nimport ReviewError from './ReviewError';\n\n/**\n * <LockErrors />\n */\nexport class LockErrors extends React.Component {\n  get errorProp() {\n    if (this.props.errorStatus === ErrorStatuses.forbidden) {\n      return {\n        heading: messages.errorLockContestedHeading,\n        message: messages.errorLockContested,\n      };\n    }\n\n    return {\n      heading: messages.errorLockBadRequestHeading,\n      message: messages.errorLockBadRequest,\n    };\n  }\n\n  render() {\n    if (!this.props.isFailed) { return null; }\n    const { heading, message } = this.errorProp;\n    return (\n      <ReviewError\n        key=\"lockFailed\"\n        headingMessage={heading}\n      >\n        <FormattedMessage {...message} />\n      </ReviewError>\n    );\n  }\n}\nLockErrors.defaultProps = {\n  errorStatus: undefined,\n};\nLockErrors.propTypes = {\n  // redux\n  isFailed: PropTypes.bool.isRequired,\n  errorStatus: PropTypes.number,\n};\n\nexport const mapStateToProps = (state) => ({\n  isFailed: selectors.requests.isFailed(state, {\n    requestKey: RequestKeys.setLock,\n  }),\n  errorStatus: selectors.requests.errorStatus(state, {\n    requestKey: RequestKeys.setLock,\n  }),\n});\n\nexport const mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LockErrors);\n","/* eslint-disable quotes */\nimport { defineMessages } from '@edx/frontend-platform/i18n';\nimport { StrictDict } from 'utils';\n\nconst messages = defineMessages({\n  gradeNotSubmittedHeading: {\n    id: 'ora-grading.ReviewModal.gradeNotSubmitted.heading',\n    defaultMessage: 'Grade not submitted',\n    description: 'Grade submission network error heading',\n  },\n  gradeNotSubmittedContent: {\n    id: 'ora-grading.ReviewModal.gradeNotSubmitted.Content',\n    defaultMessage: \"We're sorry, something went wrong when we tried to submit this grade.  Please try again.\",\n    description: 'Grade submission network error message',\n  },\n  resubmitGrade: {\n    id: 'ora-grading.ReviewModal.resubmitGrade',\n    defaultMessage: 'Resubmit grate',\n    description: 'Resubmit grade button after network failure',\n  },\n  dismiss: {\n    id: 'ora-grading.ReviewModal.dismiss',\n    defaultMessage: 'Dismiss',\n    description: 'Dismiss error action button text',\n  },\n  errorSubmittingGradeHeading: {\n    id: 'ora-grading.ReviewModal.errorSubmittingGrade.Heading',\n    defaultMessage: 'Error submitting grade',\n    description: 'Error Submitting Grade heading text',\n  },\n  errorSubmittingGradeContent: {\n    id: 'ora-grading.ReviewModal.errorSubmittingGrade.Content',\n    defaultMessage: 'It looks like someone else got here first!  Your grade submission has been rejected',\n    description: 'Error Submitting Grade content',\n  },\n});\n\nexport default StrictDict(messages);\n","import { useSelector } from 'react-redux';\n\nimport { actions, selectors, thunkActions } from 'data/redux';\nimport { RequestKeys, ErrorStatuses } from 'data/constants/requests';\n\nimport messages from './messages';\nimport * as module from './hooks';\n\nconst requestKey = RequestKeys.submitGrade;\n\nexport const badRequestError = ({ dispatch }) => ({\n  confirm: {\n    onClick: () => dispatch(thunkActions.grading.submitGrade()),\n    message: messages.resubmitGrade,\n  },\n  headingMessage: messages.gradeNotSubmittedHeading,\n  contentMessage: messages.gradeNotSubmittedContent,\n});\n\nexport const conflictError = () => ({\n  headingMessage: messages.errorSubmittingGradeHeading,\n  contentMessage: messages.errorSubmittingGradeContent,\n});\n\nexport const defaultError = module.badRequestError;\n\nexport const errorProps = ({\n  dispatch,\n  errorStatus,\n}) => {\n  const errors = {\n    [ErrorStatuses.badRequest]: module.badRequestError({ dispatch }),\n    [ErrorStatuses.conflict]: module.conflictError({ dispatch }),\n    default: module.defaultError({ dispatch }),\n  };\n  // TODO: Network-Log an error here for unhandled error type\n  // if (errors[errorStatus] === undefined) { }\n  return errors[errorStatus] || errors.default;\n};\n\nexport const errorStatusSelector = (state) => selectors.requests.errorStatus(state, { requestKey });\n\nexport const rendererHooks = ({\n  dispatch,\n  intl,\n}) => {\n  const errorStatus = useSelector(module.errorStatusSelector);\n\n  if (!errorStatus) {\n    return { show: false };\n  }\n\n  const error = module.errorProps({ dispatch, errorStatus });\n\n  return {\n    show: true,\n    reviewActions: {\n      cancel: {\n        onClick: () => dispatch(actions.requests.clearRequest({ requestKey })),\n        message: messages.dismiss,\n      },\n      confirm: error.confirm,\n    },\n    headingMessage: error.headingMessage,\n    content: intl.formatMessage(error.contentMessage),\n  };\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { injectIntl, intlShape } from '@edx/frontend-platform/i18n';\n\nimport { rendererHooks } from './hooks';\n\nimport ReviewError from '../ReviewError';\n\n/**\n * <SubmitErrors />\n */\nexport const SubmitErrors = ({ intl }) => {\n  const dispatch = useDispatch();\n  const {\n    show,\n    reviewActions,\n    headingMessage,\n    content,\n  } = rendererHooks({ dispatch, intl });\n  if (!show) { return null; }\n  return (\n    <ReviewError\n      actions={reviewActions}\n      headingMessage={headingMessage}\n    >\n      {content}\n    </ReviewError>\n  );\n};\n\nSubmitErrors.propTypes = {\n  // injected\n  intl: intlShape.isRequired,\n};\n\nexport default injectIntl(SubmitErrors);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { FormattedMessage } from '@edx/frontend-platform/i18n';\n\nimport { actions, selectors, thunkActions } from 'data/redux';\nimport { RequestKeys } from 'data/constants/requests';\n\nimport messages from './messages';\n\nimport ReviewError from './ReviewError';\n\n/**\n * <DownloadErrors />\n */\nexport class DownloadErrors extends React.Component {\n  constructor(props) {\n    super(props);\n    this.cancelAction = this.cancelAction.bind(this);\n  }\n\n  cancelAction() {\n    this.props.clearState({ requestKey: RequestKeys.downloadFiles });\n  }\n\n  render() {\n    if (!this.props.isFailed) { return null; }\n    return (\n      <ReviewError\n        key=\"downloadFailed\"\n        headingMessage={messages.downloadFailedHeading}\n        actions={{\n          cancel: { onClick: this.cancelAction, message: messages.dismiss },\n          confirm: { onClick: this.props.downloadFiles, message: messages.retryDownload },\n        }}\n      >\n        <FormattedMessage {...messages.downloadFailedContent} />\n        <br />\n        <FormattedMessage {...messages.failedFiles} />\n        <ul>\n          {this.props.error.files.map(filename => (\n            <li key={filename}>{filename}</li>\n          ))}\n        </ul>\n      </ReviewError>\n    );\n  }\n}\n\nDownloadErrors.defaultProps = {\n  error: {\n    files: [],\n  },\n};\nDownloadErrors.propTypes = {\n  // redux\n  clearState: PropTypes.func.isRequired,\n  isFailed: PropTypes.bool.isRequired,\n  error: PropTypes.shape({\n    files: PropTypes.arrayOf(PropTypes.string),\n  }),\n  downloadFiles: PropTypes.func.isRequired,\n};\n\nexport const mapStateToProps = (state) => ({\n  isFailed: selectors.requests.isFailed(state, { requestKey: RequestKeys.downloadFiles }),\n  error: selectors.requests.error(state, { requestKey: RequestKeys.downloadFiles }),\n});\n\nexport const mapDispatchToProps = {\n  clearState: actions.requests.clearRequest,\n  downloadFiles: thunkActions.download.downloadFiles,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DownloadErrors);\n","import React from 'react';\n\nimport FetchErrors from './FetchErrors';\nimport LockErrors from './LockErrors';\nimport SubmitErrors from './SubmitErrors';\nimport DownloadErrors from './DownloadErrors';\n\n/**\n * <ReviewErrors />\n */\nexport const ReviewErrors = () => (\n  <>\n    <FetchErrors />\n    <SubmitErrors />\n    <LockErrors />\n    <DownloadErrors />\n  </>\n);\nReviewErrors.defaultProps = {\n};\nReviewErrors.propTypes = {\n};\n\nexport default ReviewErrors;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { Col, Row } from '@edx/paragon';\n\nimport { selectors } from 'data/redux';\nimport { RequestKeys } from 'data/constants/requests';\n\nimport ResponseDisplay from 'containers/ResponseDisplay';\nimport Rubric from 'containers/Rubric';\nimport ReviewErrors from './ReviewErrors';\n\n/**\n * <ReviewContent />\n */\nexport const ReviewContent = ({ isFailed, isLoaded, showRubric }) => (isLoaded || isFailed) && (\n<div className=\"content-block\">\n  <div className=\"content-wrapper\">\n    <ReviewErrors />\n    {isLoaded && (\n    <Row className=\"flex-nowrap m-0\">\n      <Col className=\"p-0\">\n        <ResponseDisplay />\n      </Col>\n      {showRubric && <Rubric />}\n    </Row>\n    )}\n  </div>\n</div>\n);\nReviewContent.defaultProps = {\n  isFailed: false,\n  isLoaded: false,\n  showRubric: false,\n};\nReviewContent.propTypes = {\n  isFailed: PropTypes.bool,\n  isLoaded: PropTypes.bool,\n  showRubric: PropTypes.bool,\n};\n\nexport const mapStateToProps = (state) => ({\n  isFailed: selectors.requests.isFailed(state, {\n    requestKey: RequestKeys.fetchSubmission,\n  }),\n  isLoaded: selectors.requests.isCompleted(state, {\n    requestKey: RequestKeys.fetchSubmission,\n  }),\n  showRubric: selectors.app.showRubric(state),\n});\n\nexport const mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ReviewContent);\n","import { defineMessages } from '@edx/frontend-platform/i18n';\n\nconst messages = defineMessages({\n  closeReviewConfirmTitle: {\n    id: 'ora-grading.ReviewModal.closeReviewConfirm.title',\n    defaultMessage: 'Are you sure you want to close this modal?',\n    description: 'Prompt confirmation for closing modal',\n  },\n  closeReviewConfirmWarning: {\n    id: 'ora-grading.ReviewModal.closeReviewConfirmWarning',\n    defaultMessage: 'This cannot be undone. This will discard unsaved work and stop this grading process.',\n    description: 'Confirm discard on unsaved work and close the modal',\n  },\n  goBack: {\n    id: 'ora-grading.ReviewModal.goBack',\n    defaultMessage: 'Go back',\n    description: 'Cancel closing the modal button text',\n  },\n  confirmCloseModalAction: {\n    id: 'ora-grading.ReviewModal.CloseReviewConfirmModal.confirmText',\n    defaultMessage: 'Close Modal',\n    description: 'Confirm closing the modal button text',\n  },\n});\n\nexport default messages;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { injectIntl, intlShape } from '@edx/frontend-platform/i18n';\n\nimport ConfirmModal from 'components/ConfirmModal';\nimport messages from './messages';\n\nexport const CloseReviewConfirmModal = ({\n  intl,\n  isOpen,\n  onCancel,\n  onConfirm,\n}) => (\n  <ConfirmModal\n    title={intl.formatMessage(messages.closeReviewConfirmTitle)}\n    content={intl.formatMessage(messages.closeReviewConfirmWarning)}\n    cancelText={intl.formatMessage(messages.goBack)}\n    confirmText={intl.formatMessage(messages.confirmCloseModalAction)}\n    onCancel={onCancel}\n    onConfirm={onConfirm}\n    isOpen={isOpen}\n  />\n);\nCloseReviewConfirmModal.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  onConfirm: PropTypes.func.isRequired,\n  // injected\n  intl: intlShape.isRequired,\n};\n\nexport default injectIntl(CloseReviewConfirmModal);\n","import { defineMessages } from '@edx/frontend-platform/i18n';\nimport { StrictDict } from 'utils';\n\nconst messages = defineMessages({\n  loadingResponse: {\n    id: 'ora-grading.ReviewModal.loadingResponse',\n    defaultMessage: 'Loading response',\n    description: 'loading text for submission response review screen',\n  },\n  demoTitleMessage: {\n    id: 'ora-grading.ReviewModal.demoTitleMessage',\n    defaultMessage: 'Grading Demo',\n    description: 'message added to modal title, indicating grading demo',\n  },\n});\n\nexport default StrictDict(messages);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { StrictDict } from 'utils';\nimport { selectors, thunkActions } from 'data/redux';\nimport { RequestKeys } from 'data/constants/requests';\nimport messages from './messages';\nimport * as module from './hooks';\n\nexport const state = StrictDict({\n  showConfirmCloseReviewGrade: (val) => React.useState(val),\n});\n\nexport const reduxValues = () => ({\n  errorStatus: useSelector((val) => (\n    selectors.requests.errorStatus(val, { requestKey: RequestKeys.fetchSubmission })\n  )),\n  hasGradingProgress: useSelector(selectors.grading.hasGradingProgress),\n  isEnabled: useSelector(selectors.app.isEnabled),\n  isLoaded: useSelector((val) => (\n    selectors.requests.isCompleted(val, { requestKey: RequestKeys.fetchSubmission })\n  )),\n  isOpen: useSelector(selectors.app.showReview),\n  oraName: useSelector(selectors.app.ora.name),\n});\n\nexport const rendererHooks = ({\n  dispatch,\n  intl: { formatMessage },\n}) => {\n  const [show, setShow] = state.showConfirmCloseReviewGrade(false);\n\n  const {\n    errorStatus,\n    hasGradingProgress,\n    isEnabled,\n    isLoaded,\n    isOpen,\n    oraName,\n  } = module.reduxValues();\n\n  const onClose = () => {\n    if (hasGradingProgress) {\n      setShow(true);\n    } else {\n      dispatch(thunkActions.app.cancelReview());\n    }\n  };\n\n  return {\n    onClose,\n    isLoading: !(errorStatus || isLoaded),\n    title: isEnabled\n      ? `${oraName} - ${formatMessage(messages.demoTitleMessage)}`\n      : oraName,\n    isOpen,\n    closeConfirmModalProps: {\n      isOpen: show,\n      onCancel: () => setShow(false),\n      onConfirm: () => {\n        setShow(false);\n        dispatch(thunkActions.app.cancelReview());\n      },\n    },\n  };\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { FullscreenModal } from '@edx/paragon';\nimport { injectIntl, intlShape } from '@edx/frontend-platform/i18n';\n\nimport LoadingMessage from 'components/LoadingMessage';\nimport DemoWarning from 'containers/DemoWarning';\nimport ReviewActions from 'containers/ReviewActions';\nimport ReviewContent from './ReviewContent';\nimport CloseReviewConfirmModal from './components/CloseReviewConfirmModal';\nimport messages from './messages';\n\nimport * as hooks from './hooks';\n\nimport './ReviewModal.scss';\n\n/**\n * <ReviewModal />\n */\nexport const ReviewModal = ({ intl }) => {\n  const dispatch = useDispatch();\n  const {\n    isLoading,\n    title,\n    onClose,\n    isOpen,\n    closeConfirmModalProps,\n  } = hooks.rendererHooks({ dispatch, intl });\n  return (\n    <FullscreenModal\n      title={title}\n      isOpen={isOpen}\n      beforeBodyNode={(\n        <>\n          <ReviewActions />\n          <DemoWarning />\n        </>\n      )}\n      onClose={onClose}\n      className=\"review-modal\"\n      modalBodyClassName=\"review-modal-body\"\n    >\n      {isOpen && <ReviewContent />}\n      {/* even if the modal is closed, in case we want to add transitions later */}\n      {isLoading && <LoadingMessage message={messages.loadingResponse} />}\n      <CloseReviewConfirmModal {...closeConfirmModalProps} />\n    </FullscreenModal>\n  );\n};\nReviewModal.propTypes = {\n  // injected\n  intl: intlShape.isRequired,\n};\n\nexport default injectIntl(ReviewModal);\n","import { defineMessages } from '@edx/frontend-platform/i18n';\n\nconst messages = defineMessages({\n  backToResponses: {\n    id: 'ora-grading.ListView.ListViewBreadcrumbs.backToResponses',\n    defaultMessage: 'Back to all open responses',\n    description: 'Breadcrumbs link text to return to ORA list in LMS',\n  },\n  noResultsFoundTitle: {\n    id: 'ora-grading.ListView.noResultsFoundTitle',\n    defaultMessage: 'Nothing here yet',\n    description: 'Empty table for the submission table title',\n  },\n  noResultsFoundBody: {\n    id: 'ora-grading.ListView.noResultsFoundBody',\n    defaultMessage: 'When learners submit responses, they will appear here',\n    description: 'Empty table messages',\n  },\n  viewAllResponses: {\n    id: 'ora-grading.ListView.viewAllResponses',\n    defaultMessage: 'View all responses',\n    description: 'Button text to load all responses for review/grading',\n  },\n  viewSelectedResponses: {\n    id: 'ora-grading.ListView.viewSelectedResponses',\n    defaultMessage: 'View selected responses ({value})',\n    description: 'Button text to load selected responses for review/grading',\n  },\n  username: {\n    id: 'ora-grading.ListView.tableHeaders.username',\n    defaultMessage: 'Username',\n    description: 'Username table column header for submission list view',\n  },\n  teamName: {\n    id: 'ora-grading.ListView.tableHeaders.teamName',\n    defaultMessage: 'Team name',\n    description: 'Team name table column header for submission list view',\n  },\n  learnerSubmissionDate: {\n    id: 'ora-grading.ListView.tableHeaders.learnerSubmissionDate',\n    defaultMessage: 'Learner submission date',\n    description: 'Learner submission date table column header for submission list view',\n  },\n  teamSubmissionDate: {\n    id: 'ora-grading.ListView.tableHeaders.teamSubmissionDate',\n    defaultMessage: 'Team submission date',\n    description: 'Team submission date table column header for submission list view',\n  },\n  grade: {\n    id: 'ora-grading.ListView.tableHeaders.grade',\n    defaultMessage: 'Grade',\n    description: 'Grade table column header for submission list view',\n  },\n  gradingStatus: {\n    id: 'ora-grading.ListView.tableHeaders.gradingStatus',\n    defaultMessage: 'Grading status',\n    description: 'Grading status table column header for submission list view',\n  },\n  loadErrorHeading: {\n    id: 'ora-grading.ListView.loadErrorHeading',\n    defaultMessage: 'Error loading submissions',\n    description: 'Initialization failure alert header',\n  },\n  loadErrorMessage: {\n    id: 'ora-grading.ListView.loadErrorMessage1',\n    defaultMessage: 'An error occurred while loading the submissions for this response. Try reloading the page or going {backToResponses}.',\n    description: 'Initialization failure alert message line 2',\n  },\n  backToResponsesLowercase: {\n    id: 'ora-grading.ListView.backToResponsesLowercase',\n    defaultMessage: 'back to all Open Responses',\n    description: 'lowercase string for link to list of all open responses in lms',\n  },\n  reloadSubmissions: {\n    id: 'ora-grading.ListView.reloadSubmissions',\n    defaultMessage: 'Reload submissions',\n    description: 'Reload button text in case of network failure',\n  },\n  loadingResponses: {\n    id: 'ora-grading.ListView.loadingResponses',\n    defaultMessage: 'Loading responses',\n    description: 'loading text for submission response list',\n  },\n});\n\nexport default messages;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport {\n  Alert,\n  Button,\n  Hyperlink,\n} from '@edx/paragon';\nimport { Info } from '@edx/paragon/icons';\nimport { FormattedMessage } from '@edx/frontend-platform/i18n';\n\nimport urls from 'data/services/lms/urls';\n\nimport { selectors, thunkActions } from 'data/redux';\n\nimport messages from './messages';\n\n/**\n * <ListError />\n */\nexport const ListError = ({ courseId, initializeApp }) => (\n  <Alert\n    variant=\"danger\"\n    icon={Info}\n    actions={[\n      <Button onClick={initializeApp}>\n        <FormattedMessage {...messages.reloadSubmissions} />\n      </Button>,\n    ]}\n  >\n    <Alert.Heading>\n      <FormattedMessage {...messages.loadErrorHeading} />\n    </Alert.Heading>\n    <p>\n      <FormattedMessage\n        {...messages.loadErrorMessage}\n        values={{\n          backToResponses: (\n            <Hyperlink destination={urls.openResponse(courseId)}>\n              <FormattedMessage {...messages.backToResponsesLowercase} />\n            </Hyperlink>\n          ),\n        }}\n      />\n    </p>\n  </Alert>\n);\nListError.defaultProps = {\n};\nListError.propTypes = {\n  // redux\n  courseId: PropTypes.string.isRequired,\n  initializeApp: PropTypes.func.isRequired,\n};\n\nexport const mapStateToProps = (state) => ({\n  courseId: selectors.app.courseId(state),\n});\n\nexport const mapDispatchToProps = {\n  initializeApp: thunkActions.app.initialize,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListError);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { ArrowBack, Launch } from '@edx/paragon/icons';\nimport { Hyperlink, Icon } from '@edx/paragon';\nimport { FormattedMessage } from '@edx/frontend-platform/i18n';\n\nimport { selectors } from 'data/redux';\nimport { locationId } from 'data/constants/app';\nimport urls from 'data/services/lms/urls';\nimport messages from './messages';\n\n/**\n * <ListViewBreadcrumb />\n */\nexport const ListViewBreadcrumb = ({ courseId, oraName }) => (\n  <>\n    <Hyperlink className=\"py-4\" destination={urls.openResponse(courseId)}>\n      <Icon src={ArrowBack} className=\"d-inline-block mr-3 breadcrumb-arrow\" />\n      <FormattedMessage {...messages.backToResponses} />\n    </Hyperlink>\n    <p className=\"py-4\">\n      <span className=\"h3\">{oraName}</span>\n      <Hyperlink className=\"align-middle\" destination={urls.ora(courseId, locationId())}>\n        <Icon src={Launch} className=\"d-inline-block\" />\n      </Hyperlink>\n    </p>\n  </>\n);\nListViewBreadcrumb.defaultProps = {\n  courseId: '',\n  oraName: '',\n};\nListViewBreadcrumb.propTypes = {\n  courseId: PropTypes.string,\n  oraName: PropTypes.string,\n};\n\nexport const mapStateToProps = (state) => ({\n  courseId: selectors.app.courseId(state),\n  oraName: selectors.app.ora.name(state),\n});\n\nexport const mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListViewBreadcrumb);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, DataTableContext } from '@edx/paragon';\n\nimport * as module from './FilterStatusComponent';\n\nexport const filterHooks = () => {\n  const { state, setAllFilters, headers } = React.useContext(DataTableContext);\n  if (!setAllFilters || !state.filters) {\n    return {};\n  }\n  const clearFilters = React.useCallback(() => setAllFilters([]), [setAllFilters]);\n  const headerMap = headers.reduce(\n    (obj, cur) => ({ ...obj, [cur.id]: cur.Header }),\n    {},\n  );\n  const filterNames = state.filters.map((filter) => headerMap[filter.id]);\n  return { clearFilters, filterNames };\n};\n\nexport const FilterStatusComponent = ({\n  className,\n  variant,\n  size,\n  clearFiltersText,\n  buttonClassName,\n  showFilteredFields,\n}) => {\n  const hookProps = module.filterHooks();\n  if (hookProps.filterNames === undefined) {\n    return null;\n  }\n  const filterTexts = <p>Filtered by {hookProps.filterNames.join(', ')}</p>;\n  return (\n    <div className={className}>\n      {showFilteredFields && filterTexts}\n      <Button\n        className={buttonClassName}\n        variant={variant}\n        size={size}\n        onClick={hookProps.clearFilters}\n      >\n        {clearFiltersText}\n      </Button>\n    </div>\n  );\n};\n\nFilterStatusComponent.defaultProps = {\n  className: '',\n  buttonClassName: 'pgn__smart-status-button',\n  variant: 'link',\n  size: 'inline',\n  clearFiltersText: 'Clear Filters',\n  showFilteredFields: true,\n};\n\nFilterStatusComponent.propTypes = {\n  className: PropTypes.string,\n  buttonClassName: PropTypes.string,\n  variant: PropTypes.string,\n  size: PropTypes.string,\n  clearFiltersText: PropTypes.string,\n  showFilteredFields: PropTypes.bool,\n};\n\nexport default FilterStatusComponent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '@edx/paragon';\n\nimport { FormattedMessage } from '@edx/frontend-platform/i18n';\n\nimport messages from './messages';\n\nexport const TableAction = ({ tableInstance, handleClick }) => (\n  <Button\n    onClick={handleClick(tableInstance.rows)}\n    variant=\"primary\"\n    className=\"view-all-responses-btn\"\n  >\n    <FormattedMessage {...messages.viewAllResponses} />\n  </Button>\n);\n\nTableAction.defaultProps = {\n  tableInstance: {\n    rows: [],\n  },\n};\nTableAction.propTypes = {\n  tableInstance: PropTypes.shape({\n    rows: PropTypes.arrayOf(PropTypes.object),\n  }),\n  handleClick: PropTypes.func.isRequired,\n};\nexport default TableAction;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '@edx/paragon';\n\nimport { FormattedMessage } from '@edx/frontend-platform/i18n';\n\nimport messages from './messages';\n\nexport const SelectedBulkAction = ({ selectedFlatRows, handleClick }) => (\n  <Button\n    onClick={handleClick(selectedFlatRows)}\n    variant=\"primary\"\n    className=\"view-selected-responses-btn\"\n  >\n    <FormattedMessage {...messages.viewSelectedResponses} values={{ value: selectedFlatRows.length }} />\n  </Button>\n);\n\nSelectedBulkAction.defaultProps = {\n  selectedFlatRows: [],\n};\nSelectedBulkAction.propTypes = {\n  selectedFlatRows: PropTypes.arrayOf(PropTypes.object),\n\n  handleClick: PropTypes.func.isRequired,\n};\nexport default SelectedBulkAction;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\n\nimport {\n  DataTable,\n  TextFilter,\n  MultiSelectDropdownFilter,\n} from '@edx/paragon';\nimport { injectIntl, intlShape } from '@edx/frontend-platform/i18n';\n\nimport { gradingStatuses, submissionFields } from 'data/services/lms/constants';\nimport lmsMessages from 'data/services/lms/messages';\n\nimport { selectors, thunkActions } from 'data/redux';\n\nimport StatusBadge from 'components/StatusBadge';\nimport FilterStatusComponent from './FilterStatusComponent';\nimport TableAction from './TableAction';\nimport SelectedBulkAction from './SelectedBulkAction';\n\nimport messages from './messages';\n\n/**\n * <SubmissionsTable />\n */\nexport class SubmissionsTable extends React.Component {\n  get gradeStatusOptions() {\n    return Object.keys(gradingStatuses).map(statusKey => ({\n      name: this.translate(lmsMessages[gradingStatuses[statusKey]]),\n      value: gradingStatuses[statusKey],\n    }));\n  }\n\n  get userLabel() {\n    return this.translate(this.props.isIndividual ? messages.username : messages.teamName);\n  }\n\n  get userAccessor() {\n    return this.props.isIndividual\n      ? submissionFields.username\n      : submissionFields.teamName;\n  }\n\n  get dateSubmittedLabel() {\n    return this.translate(this.props.isIndividual\n      ? messages.learnerSubmissionDate\n      : messages.teamSubmissionDate);\n  }\n\n  formatDate = ({ value }) => {\n    const date = new Date(moment(value));\n    return date.toLocaleString();\n  };\n\n  formatGrade = ({ value: score }) => (\n    score === null ? '-' : `${score.pointsEarned}/${score.pointsPossible}`\n  );\n\n  formatStatus = ({ value }) => (<StatusBadge status={value} />);\n\n  translate = (...args) => this.props.intl.formatMessage(...args);\n\n  handleViewAllResponsesClick = (data) => () => {\n    const getSubmissionUUID = (row) => row.original.submissionUUID;\n    this.props.loadSelectionForReview(data.map(getSubmissionUUID));\n  };\n\n  render() {\n    if (!this.props.listData.length) {\n      return null;\n    }\n    return (\n      <div className=\"submissions-table\">\n        <DataTable\n          isFilterable\n          FilterStatusComponent={FilterStatusComponent}\n          numBreakoutFilters={2}\n          defaultColumnValues={{ Filter: TextFilter }}\n          isSelectable\n          isSortable\n          isPaginated\n          itemCount={this.props.listData.length}\n          initialState={{ pageSize: 10, pageIndex: 0 }}\n          data={this.props.listData}\n          tableActions={[\n            <TableAction handleClick={this.handleViewAllResponsesClick} />,\n          ]}\n          bulkActions={[\n            <SelectedBulkAction handleClick={this.handleViewAllResponsesClick} />,\n          ]}\n          columns={[\n            {\n              Header: this.userLabel,\n              accessor: this.userAccessor,\n            },\n            {\n              Header: this.dateSubmittedLabel,\n              accessor: submissionFields.dateSubmitted,\n              Cell: this.formatDate,\n              disableFilters: true,\n            },\n            {\n              Header: this.translate(messages.grade),\n              accessor: submissionFields.score,\n              Cell: this.formatGrade,\n              disableFilters: true,\n            },\n            {\n              Header: this.translate(messages.gradingStatus),\n              accessor: submissionFields.gradingStatus,\n              Cell: this.formatStatus,\n              Filter: MultiSelectDropdownFilter,\n              filter: 'includesValue',\n              filterChoices: this.gradeStatusOptions,\n            },\n          ]}\n        >\n          <DataTable.TableControlBar />\n          <DataTable.Table />\n          <DataTable.TableFooter />\n        </DataTable>\n      </div>\n    );\n  }\n}\nSubmissionsTable.defaultProps = {\n  listData: [],\n};\nSubmissionsTable.propTypes = {\n  // injected\n  intl: intlShape.isRequired,\n  // redux\n  isIndividual: PropTypes.bool.isRequired,\n  listData: PropTypes.arrayOf(PropTypes.shape({\n    username: PropTypes.string,\n    dateSubmitted: PropTypes.string,\n    gradingStatus: PropTypes.string,\n    score: PropTypes.shape({\n      pointsEarned: PropTypes.number,\n      pointsPossible: PropTypes.number,\n    }),\n  })),\n  loadSelectionForReview: PropTypes.func.isRequired,\n};\n\nexport const mapStateToProps = (state) => ({\n  listData: selectors.submissions.listData(state),\n  isIndividual: selectors.app.ora.isIndividual(state),\n});\n\nexport const mapDispatchToProps = {\n  loadSelectionForReview: thunkActions.grading.loadSelectionForReview,\n};\n\nexport default injectIntl(connect(mapStateToProps, mapDispatchToProps)(SubmissionsTable));\n","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11, _path12, _path13, _path14, _path15, _path16, _path17, _path18, _path19, _path20, _path21, _path22, _path23, _path24, _path25, _path26, _path27, _path28, _path29, _path30, _path31, _path32, _path33, _path34, _path35, _path36, _path37;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nvar SvgEmptyState = function SvgEmptyState(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 247,\n    height: 206,\n    fill: \"none\"\n  }, props), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#E1DDDB\",\n    fillOpacity: 0.3,\n    d: \"M16.466 82.367C2.43 103.195-4.815 127.522 5.058 149.84c17.989 40.665 116.015 29.236 158.702 13.267C283.987 118.132 226.175.118 96.164 29.299c-36.401 8.17-65.661 32.24-79.698 53.068Z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"M96.13 25.159c5.472-10.15 14.302-17.184 27.406-12.962 1.155.465 2.367.775 3.603.924a31.372 31.372 0 0 0 3.745-.447c5.908-.487 10.272 5.238 13.145 10.414 5.338 9.653 15.093 22.756 13.195 34.358-1.472 8.993-9.927 15.225-18.463 18.371a58.332 58.332 0 0 1-30.125 2.751c-5.075-.873-10.323-2.578-13.977-6.263-5.075-5.135-6.09-13.042-5.704-20.3.538-8.11 2.72-18.533 7.176-26.846Z\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#454545\",\n    d: \"M118.491 79.918c-3.331 0-6.655-.285-9.937-.853-6.405-1.096-11.053-3.187-14.21-6.394-4.436-4.456-6.405-11.358-5.867-20.615.579-9.602 3.279-19.741 7.237-27.11 4.639-8.628 13.246-17.925 27.923-13.195l.7.243c.893.347 1.828.569 2.781.66.73.004 1.459-.07 2.172-.223.488-.081 1.015-.173 1.513-.213 4.862-.417 9.449 3.177 13.591 10.647a175.03 175.03 0 0 0 3.197 5.491c5.187 8.678 11.642 19.478 10.048 29.171-1.268 7.846-8.262 14.85-18.747 18.727a58.502 58.502 0 0 1-20.401 3.664ZM96.597 25.382C92.7 32.64 90.03 42.637 89.492 52.107c-.538 8.952 1.34 15.651 5.562 19.914 3.045 3.045 7.522 5.075 13.723 6.09a57.757 57.757 0 0 0 29.862-2.76c10.15-3.766 16.94-10.506 18.168-18.017 1.533-9.348-4.821-19.995-9.927-28.552-1.157-1.938-2.253-3.765-3.217-5.5-3.949-7.106-8.222-10.547-12.698-10.15-.477 0-.944.12-1.431.202-.816.182-1.65.274-2.487.274a10.875 10.875 0 0 1-3.045-.72l-.69-.234c-14.068-4.537-22.33 4.436-26.816 12.748l.101-.02Z\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#03C7E8\",\n    d: \"M183.345 169.411s-4.249-73.598-14.988-83.352c-15.448-13.966-70.278-16.88-81.413-14.007-19.69 5.075-33.393 35.829-33.393 35.829l32.662 9.765c.072 25.263 2.599 51.765 2.599 51.765h94.533Z\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#454545\",\n    d: \"M84.73 147.72a.514.514 0 0 1-.453-.357.515.515 0 0 1-.023-.201l4.415-57.855a.529.529 0 0 1 .927-.304.52.52 0 0 1 .118.385L85.3 147.243a.521.521 0 0 1-.364.457.524.524 0 0 1-.204.02ZM114.663 92.382c3.665 4.558 9.135 7.806 15.033 7.897a6.036 6.036 0 0 0 2.253-.304 5.532 5.532 0 0 0 2.436-2.03c2.659-3.654 2.771-8.577 2.101-13.043-.477-3.137-1.391-6.425-3.766-8.526-2.791-2.467-6.841-2.7-10.566-2.802-3.725-.101-12.363-1.187-13.743 3.4-1.289 4.193 3.796 12.353 6.252 15.408Z\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#454545\",\n    d: \"M129.92 100.726h-.233c-5.634-.092-11.378-3.106-15.367-8.06-2.65-3.288-7.674-11.469-6.344-15.823 1.329-4.355 8.424-4.06 12.647-3.796l1.553.07c4.11.123 8.028.427 10.84 2.914 2.811 2.486 3.512 6.16 3.908 8.8.862 5.704.132 10.15-2.172 13.367a5.845 5.845 0 0 1-2.639 2.193 6.105 6.105 0 0 1-2.193.335Zm-12.758-26.898c-3.573 0-7.481.518-8.323 3.279-1.229 3.968 3.725 11.956 6.171 15.001 3.826 4.75 9.317 7.633 14.687 7.724a5.857 5.857 0 0 0 2.101-.273 5.078 5.078 0 0 0 2.233-1.888c2.152-2.964 2.832-7.248 2.03-12.708-.376-2.507-1.157-6.09-3.614-8.262-2.456-2.172-6.343-2.578-10.281-2.69-.457 0-1.016 0-1.564-.071-1.035-.05-2.222-.112-3.44-.112Z\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"M138.374 45.47a9.42 9.42 0 0 1 1.868-3.442 3.216 3.216 0 0 1 3.593-.852 3.052 3.052 0 0 1 1.482 2.436 6.939 6.939 0 0 1-.487 2.923 11.64 11.64 0 0 1-2.853 4.679 6.753 6.753 0 0 1-4.973 1.98\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#454545\",\n    d: \"M137.39 53.59h-.416a.417.417 0 0 1-.336-.592.397.397 0 0 1 .397-.22 6.351 6.351 0 0 0 4.699-1.848 11.163 11.163 0 0 0 2.741-4.517c.354-.872.513-1.81.467-2.75a2.644 2.644 0 0 0-1.29-2.122 2.839 2.839 0 0 0-3.126.772 9.421 9.421 0 0 0-1.776 3.309.397.397 0 0 1-.518.233.409.409 0 0 1-.243-.518 9.85 9.85 0 0 1 1.969-3.593 3.622 3.622 0 0 1 4.06-.923 3.42 3.42 0 0 1 1.725 2.76 7.11 7.11 0 0 1-.507 3.045 11.866 11.866 0 0 1-2.964 4.883 7.215 7.215 0 0 1-4.882 2.08Z\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"m131.402 63.07 1.573 15.65s-.761 8.902-10.546 7.106a19.795 19.795 0 0 1-13.652-10.008l.366-28.085c-.061-1.147 2.324-5.075 1.197-15.002a24.263 24.263 0 0 0 17.022-9.683s4.537 5.603 6.445 7.338a23.77 23.77 0 0 1 4.06 4.375c3.045 4.567 2.913 12.017 2.182 17.255-.71 4.303-3.207 11.165-8.647 11.053Z\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#454545\",\n    d: \"M124.875 86.556a14.234 14.234 0 0 1-2.528-.243A20.417 20.417 0 0 1 108.31 76.01a.464.464 0 0 1 0-.203s.365-27.903.365-28.075c.043-.502.148-.997.315-1.472.568-1.949 1.736-6.009.893-13.48a.446.446 0 0 1 .102-.334.405.405 0 0 1 .304-.173 23.945 23.945 0 0 0 16.677-9.48.474.474 0 0 1 .578-.162.48.48 0 0 1 .173.132s4.537 5.592 6.404 7.277a23.914 23.914 0 0 1 4.06 4.466c3.512 5.319 2.741 14.038 2.254 17.54-.589 4.191-3.045 11.165-8.496 11.48l1.513 15.153a9.338 9.338 0 0 1-3.309 6.242 8.385 8.385 0 0 1-5.268 1.635Zm-15.682-10.85A19.502 19.502 0 0 0 122.52 85.4c2.923.528 5.288.122 7.034-1.207a8.566 8.566 0 0 0 2.954-5.512l-1.564-15.56a.497.497 0 0 1 .122-.365.48.48 0 0 1 .345-.142h.122c5.075 0 7.4-6.71 7.958-10.699.487-3.4 1.238-11.834-2.101-16.89a23.55 23.55 0 0 0-3.949-4.303 91.829 91.829 0 0 1-6.09-6.912 25.17 25.17 0 0 1-16.544 9.328c.761 7.359-.406 11.409-1.015 13.378-.133.388-.225.79-.274 1.197 0 0 .04.03-.325 27.994Z\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#454545\",\n    d: \"M131.938 68.215c-2.57.45-5.215.169-7.633-.812-5.572-1.959-5.897-5.765-5.897-5.765s4.689 2.944 12.992 1.4l.538 5.177Z\"\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#454545\",\n    d: \"M129.676 68.875a17.1 17.1 0 0 1-5.521-1.015c-5.776-2.03-6.172-5.978-6.192-6.09a.45.45 0 0 1 .69-.416s4.659 2.832 12.667 1.34a.478.478 0 0 1 .356.08.424.424 0 0 1 .172.316l.528 5.075a.454.454 0 0 1-.152.466.433.433 0 0 1-.325.112c-.735.115-1.479.16-2.223.132Zm-10.586-6.354c.446 1.167 1.725 3.208 5.369 4.486 2.227.85 4.63 1.133 6.993.823l-.436-4.233c-6.11 1.025-10.201-.254-11.926-1.076Z\"\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"M124.561 37.735s5.785 7.014 4.719 8.445c-1.065 1.43-4.496.893-4.496.893\"\n  })), _path14 || (_path14 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#454545\",\n    d: \"M126.214 47.62c-.503 0-1.004-.034-1.502-.1a.458.458 0 0 1-.16-.787.46.46 0 0 1 .302-.107c.883.142 3.329.274 4.06-.72.456-.61-1.746-4.294-4.72-7.887a.45.45 0 0 1-.1-.327.445.445 0 0 1 .493-.399.465.465 0 0 1 .307.157c1.807 2.193 5.887 7.45 4.74 8.993-.72.975-2.253 1.178-3.42 1.178ZM131.802 39.345c.472-.063.758-.84.639-1.734-.12-.894-.6-1.568-1.072-1.505-.472.063-.758.84-.639 1.734.12.894.6 1.568 1.072 1.505ZM117.567 39.365c.476-.005.854-.741.844-1.644-.011-.902-.406-1.63-.882-1.624-.477.006-.854.742-.844 1.645.011.902.405 1.629.882 1.623Z\"\n  })), _path15 || (_path15 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"M112.298 43.53a11.164 11.164 0 0 0-1.756-3.725 4.968 4.968 0 0 0-4.06-2.03 3.224 3.224 0 0 0-2.487 1.33 4.596 4.596 0 0 0-.629 1.867c-.518 3.482.649 8.019 3.928 9.816a3.471 3.471 0 0 0 3.694 0\"\n  })), _path16 || (_path16 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#454545\",\n    d: \"M109.365 51.722a4.935 4.935 0 0 1-2.264-.61c-3.43-1.887-4.669-6.567-4.131-10.23a4.88 4.88 0 0 1 .691-2.03 3.62 3.62 0 0 1 2.791-1.513 5.399 5.399 0 0 1 4.405 2.223 11.416 11.416 0 0 1 1.827 3.857.404.404 0 0 1-.274.497.389.389 0 0 1-.427-.124.37.37 0 0 1-.07-.14 10.841 10.841 0 0 0-1.685-3.593 4.536 4.536 0 0 0-3.725-1.908 2.832 2.832 0 0 0-2.173 1.147 4.078 4.078 0 0 0-.558 1.705c-.507 3.38.609 7.694 3.715 9.4a3.047 3.047 0 0 0 3.248.08.418.418 0 0 1 .569.071.406.406 0 0 1-.072.569c-.539.4-1.196.61-1.867.599ZM166.529 163.625a.526.526 0 0 1-.517-.436c-3.482-21.731-10.15-63.153-10.455-64.412a.525.525 0 0 1 .376-.64.537.537 0 0 1 .639.386c.396 1.614 10.059 61.915 10.475 64.493a.53.53 0 0 1-.437.599l-.081.01Z\"\n  })), _path17 || (_path17 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    stroke: \"#454545\",\n    strokeWidth: 0.9,\n    d: \"m103.612 186.504-.135-.188H55.54c-4.987 0-9.11-4.516-9.11-10.201v-58.037c0-5.679 4.123-10.209 9.11-10.209h125.976c4.987 0 9.118 4.531 9.149 10.211v58.035c0 5.685-4.128 10.201-9.116 10.201h-49.323l-.134.152-15.723 17.803-12.757-17.767Z\"\n  })), _path18 || (_path18 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#454545\",\n    d: \"M126.986 56.695c-7.501 0-9.896-9.896-9.998-10.322a.456.456 0 0 1 .811-.363.431.431 0 0 1 .072.16c0 .09 2.324 9.632 9.135 9.632a4.814 4.814 0 0 0 3.766-1.594c2.344-2.67 1.715-7.846 1.705-7.896a.454.454 0 0 1 .086-.335.443.443 0 0 1 .629-.08.464.464 0 0 1 .178.293c0 .233.7 5.633-1.918 8.607a5.657 5.657 0 0 1-4.466 1.898Z\"\n  })), _path19 || (_path19 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"M70.678 104.836c3.586-1.798 7.942-3.262 11.487-1.358a12.931 12.931 0 0 1 4.143 4.154c2.26 3.165 4.3 6.48 6.11 9.922.474.955.878 2.125.14 2.812-.898.845-2.32-.067-3.11-1.005a24.558 24.558 0 0 1-3.55-5.517 36.216 36.216 0 0 1 4.437 8.914c.183.373.247.794.184 1.204a1.494 1.494 0 0 1-1.926.837 4.108 4.108 0 0 1-1.858-1.411 43.918 43.918 0 0 1-5.336-8.079c1.484 3.008 2.981 6.097 3.344 9.43a2.025 2.025 0 0 1-.298 1.616 1.462 1.462 0 0 1-1.755.133 4.215 4.215 0 0 1-1.237-1.382l-5.274-7.668a39.15 39.15 0 0 1 2.873 9.234c.072.263.071.539-.001.801-.315.901-1.716.529-2.384-.15a12.646 12.646 0 0 1-2.418-4.078c-1.684-3.85-3.251-7.872-5.095-11.688-1.524-3.136-2.177-4.864 1.524-6.721Z\"\n  })), _path20 || (_path20 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#454545\",\n    d: \"m78.459 128.426.11-.017a1.222 1.222 0 0 0 .904-.805c.089-.336.095-.69.018-1.029a40.582 40.582 0 0 0-1.401-5.495l2.92 4.278a4.629 4.629 0 0 0 1.434 1.527 1.883 1.883 0 0 0 2.326-.231 2.442 2.442 0 0 0 .417-1.983 19.188 19.188 0 0 0-.822-3.581c.634.93 1.293 1.754 1.994 2.581a4.45 4.45 0 0 0 2.009 1.594 2.184 2.184 0 0 0 1.689-.165 1.636 1.636 0 0 0 .805-.985 2.555 2.555 0 0 0-.153-1.475 33.612 33.612 0 0 0-.779-2.151 3.17 3.17 0 0 0 1.656.693 1.648 1.648 0 0 0 1.265-.46c.52-.49.935-1.477-.051-3.37a85.999 85.999 0 0 0-6.128-9.971 13.439 13.439 0 0 0-4.31-4.303c-3.004-1.596-6.89-1.158-11.907 1.361-4.054 2.034-3.297 4.105-1.74 7.318 1.225 2.524 2.338 5.178 3.409 7.695a162.969 162.969 0 0 1 1.625 3.931 13.28 13.28 0 0 0 2.51 4.218 2.704 2.704 0 0 0 2.2.825Zm-2.35-11.46a.461.461 0 0 0-.16.025.465.465 0 0 0-.198.595 38.065 38.065 0 0 1 2.835 9.116c.054.183.062.375.024.561a.303.303 0 0 1-.245.212 1.813 1.813 0 0 1-1.374-.53 12.464 12.464 0 0 1-2.323-3.928 100.998 100.998 0 0 1-1.623-3.921c-1.08-2.577-2.206-5.249-3.445-7.792-1.498-3.098-1.977-4.422 1.333-6.086 4.71-2.37 8.328-2.818 11.083-1.379a12.52 12.52 0 0 1 3.99 4.024 84.214 84.214 0 0 1 6.07 9.866c.32.619.779 1.74.233 2.265a.758.758 0 0 1-.586.202 3.138 3.138 0 0 1-1.862-1.175c-.4-.463-.775-.909-1.135-1.449a37.277 37.277 0 0 0-2.38-4.032.482.482 0 0 0-.28-.189.483.483 0 0 0-.336.046.47.47 0 0 0-.186.604 25.472 25.472 0 0 0 2.383 4.052 35.843 35.843 0 0 1 1.998 4.829c.133.296.182.622.143.943a.719.719 0 0 1-.358.414 1.305 1.305 0 0 1-1.003.153 3.704 3.704 0 0 1-1.574-1.301 43.867 43.867 0 0 1-5.272-7.996.467.467 0 0 0-.83.414c1.425 2.955 2.895 6.007 3.291 9.283a1.616 1.616 0 0 1-.18 1.249 1.01 1.01 0 0 1-1.173.046 3.906 3.906 0 0 1-1.132-1.235l-5.273-7.657a.448.448 0 0 0-.455-.229Z\"\n  })), _path21 || (_path21 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#D3CECB\",\n    d: \"M207.872 101.393a.46.46 0 0 0 .167-.045c7.676-5.447 12.482-11.476 14.308-17.952 7.175-4.576 11.137-11.082 10.759-17.855-.63-12.068-14.921-21.11-31.772-20.207-16.853.935-30.025 11.494-29.384 23.559.64 12.064 14.918 21.099 31.734 20.184a42.364 42.364 0 0 0 6.904-.95 29.303 29.303 0 0 1-3.345 12.532.512.512 0 0 0 .273.742.51.51 0 0 0 .297.008l.059-.016Zm-6.45-55.031c16.278-.884 30.034 7.733 30.668 19.232.362 6.442-3.448 12.654-10.452 17.047a.593.593 0 0 0-.226.293c-1.579 5.83-5.708 11.33-12.289 16.355a29.932 29.932 0 0 0 2.546-11.79.501.501 0 0 0-.194-.398.506.506 0 0 0-.433-.094 41.624 41.624 0 0 1-7.345 1.068c-16.294.9-30.072-7.723-30.707-19.222-.634-11.498 12.11-21.574 28.403-22.483l.029-.008Z\"\n  })), _path22 || (_path22 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#D7D3D1\",\n    d: \"M76.425 171.812a.45.45 0 0 0 .307.846l-.307-.846Zm29.769-23.792-.369-.257.369.257Zm2.821-20.623.034.448-.034-.448Zm-12.055 9.197.37.257-.37-.257Zm54.582-6.909.398.209-.398-.209Zm-1.33-14.136.033.449-.033-.449Zm-16.08 17.412-.43-.13.43.13Zm-.015.051.43.131-.43-.131Zm23.437 16.527a.45.45 0 1 0-.276-.857l.276.857Zm-23.852-16.708-.016.051.861.261.016-.051-.861-.261Zm3.326 16.773c5.713-5.672 11.144-12.549 14.912-19.71l-.797-.419c-3.716 7.064-9.086 13.868-14.75 19.491l.635.638Zm14.912-19.71c.64-1.216 1.907-4.926 2.218-8.284.156-1.673.082-3.335-.486-4.567-.288-.626-.711-1.154-1.306-1.505-.595-.351-1.324-.502-2.188-.437l.067.897c.72-.054 1.258.076 1.664.315.406.239.717.611.946 1.107.466 1.011.558 2.477.407 4.107-.301 3.248-1.537 6.842-2.119 7.948l.797.419Zm-1.762-14.793c-4.144.309-7.74 3.034-10.539 6.487-2.806 3.461-4.868 7.719-5.937 11.243l.861.261c1.039-3.426 3.051-7.577 5.775-10.937 2.73-3.368 6.121-5.874 9.907-6.157l-.067-.897Zm-16.492 17.781c-.738 2.433-1.435 5.778-1.266 8.928.17 3.146 1.213 6.195 4.063 7.863l.455-.776c-2.474-1.448-3.457-4.128-3.619-7.135-.162-3.004.506-6.237 1.228-8.619l-.861-.261Zm-37.095 3.454c-2.113 3.028-4.539 8.032-5.41 12.9-.869 4.85-.216 9.755 4.106 12.285l.454-.777c-3.816-2.234-4.523-6.613-3.675-11.349.845-4.718 3.21-9.602 5.263-12.544l-.738-.515Zm12.39-9.388c-2.771.207-5.177 1.572-7.225 3.36-2.048 1.787-3.766 4.024-5.165 6.028l.738.515c1.386-1.986 3.055-4.151 5.019-5.865 1.963-1.714 4.192-2.953 6.701-3.141l-.068-.897Zm-2.418 21.33c1.231-1.769 4.218-7.134 5.766-11.988.77-2.413 1.213-4.784.838-6.538-.19-.893-.6-1.66-1.318-2.172-.714-.51-1.671-.722-2.868-.632l.068.897c1.062-.079 1.788.118 2.278.468.486.347.803.889.96 1.627.322 1.507-.052 3.682-.815 6.076-1.518 4.759-4.461 10.043-5.647 11.747l.738.515Zm-10.732 13.174c4.051-4.022 7.493-8.521 10.732-13.174l-.738-.515c-3.226 4.635-6.632 9.083-10.628 13.05l.634.639Zm-19.1 11.206c7.318-2.655 13.446-5.594 19.1-11.206l-.634-.639c-5.52 5.48-11.508 8.363-18.772 10.999l.307.846Zm18.556-11.137c6.501 3.806 14.699 3.042 22.337.257 7.649-2.79 14.837-7.641 19.404-12.174l-.635-.638c-4.477 4.444-11.555 9.223-19.077 11.966-7.534 2.748-15.413 3.419-21.575-.188l-.454.777Zm41.196-11.848c3.088 1.808 6.828 2.261 10.537 2.027 3.713-.236 7.438-1.163 10.534-2.161l-.276-.857c-3.058.986-6.704 1.891-10.315 2.119-3.615.229-7.151-.222-10.025-1.904l-.455.776Z\"\n  })), _path23 || (_path23 = /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#D3CECB\",\n    strokeWidth: 0.9,\n    d: \"M34.62 3.334c5.783-.742 11.217.253 15.322 2.44 4.107 2.189 6.85 5.547 7.362 9.533.512 3.986-1.296 7.93-4.716 11.085-3.419 3.154-8.422 5.49-14.197 6.233-1.746.225-3.51.292-5.267.201l-.577-.03.112.566a21.392 21.392 0 0 0 3.145 7.669c-6.061-3.148-8.986-6.74-10.39-9.657l-.076-.159-.164-.064c-5.28-2.086-8.864-5.873-9.459-10.499-.515-3.987 1.286-7.93 4.702-11.086 3.415-3.154 8.418-5.49 14.204-6.232Z\"\n  })), _path24 || (_path24 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"m61.523 137.52-12.718-1.995.945 12.55 7.774 2.825 8.685 3.158-2.366-8.343-2.32-8.195Z\"\n  })), _path25 || (_path25 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#454545\",\n    d: \"M66.558 154.119a.365.365 0 0 0-.01-.149l-4.686-16.539a.364.364 0 0 0-.287-.253l-12.718-1.995a.418.418 0 0 0-.157.015.382.382 0 0 0-.138.075.355.355 0 0 0-.112.275l.955 12.531a.344.344 0 0 0 .228.298l16.46 5.984a.347.347 0 0 0 .465-.242Zm-5.282-16.291 4.474 15.689-15.6-5.675-.9-11.897 12.026 1.883Z\"\n  })), _path26 || (_path26 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"m55.817 139.155-3.922 3.519-35.934-38.262 3.922-3.52 35.934 38.263Z\"\n  })), _path27 || (_path27 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#454545\",\n    d: \"m56.172 139.213.008-.048a.31.31 0 0 0-.094-.247L20.15 100.653a.362.362 0 0 0-.246-.112.374.374 0 0 0-.252.09l-3.924 3.53a.32.32 0 0 0-.115.235.326.326 0 0 0 .097.245l35.93 38.263a.358.358 0 0 0 .497.03l3.924-3.53a.328.328 0 0 0 .112-.191Zm-36.304-37.844 35.443 37.758-3.397 3.054-35.45-37.753 3.404-3.059Z\"\n  })), _path28 || (_path28 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#454545\",\n    d: \"m15.965 104.405-2.145 5.407 35.93 38.263 2.152-5.406-35.937-38.264Z\"\n  })), _path29 || (_path29 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#454545\",\n    d: \"M52.25 142.73a.349.349 0 0 0-.092-.297l-35.93-38.263a.37.37 0 0 0-.328-.103.363.363 0 0 0-.265.211l-2.144 5.407a.34.34 0 0 0 .066.362l35.938 38.265a.362.362 0 0 0 .483.03.344.344 0 0 0 .102-.14l2.152-5.406.019-.066Zm-36.16-37.679 35.404 37.695-1.87 4.691-35.401-37.668 1.868-4.718ZM25.587 99.256l-5.692 1.634 35.93 38.263 5.692-1.634-35.93-38.263Z\"\n  })), _path30 || (_path30 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#454545\",\n    d: \"M61.867 137.607a.366.366 0 0 0-.092-.296l-35.926-38.29a.38.38 0 0 0-.363-.098l-5.7 1.633a.324.324 0 0 0-.235.239.334.334 0 0 0 .08.323l35.93 38.263a.356.356 0 0 0 .37.064l5.699-1.626a.36.36 0 0 0 .149-.091.34.34 0 0 0 .086-.149l.002.028ZM25.51 99.656l35.403 37.696-4.944 1.412-35.434-37.722 4.975-1.386Z\"\n  })), _path31 || (_path31 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#03C7E8\",\n    d: \"m63.844 145.715-2.48.064-3.549 3.188-.29 1.934 8.685 3.158-2.366-8.344Z\"\n  })), _path32 || (_path32 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#454545\",\n    d: \"M66.558 154.119a.365.365 0 0 0-.01-.149l-2.365-8.351a.357.357 0 0 0-.352-.249l-2.481.07a.333.333 0 0 0-.223.088l-3.548 3.181a.42.42 0 0 0-.115.204l-.284 1.942a.33.33 0 0 0 .224.368l8.685 3.158a.353.353 0 0 0 .363-.063.39.39 0 0 0 .106-.199Zm-2.976-8.056 2.105 7.443-7.773-2.826.23-1.544 3.39-3.013 2.048-.06Z\"\n  })), _path33 || (_path33 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#D3CECB\",\n    d: \"m74.378 60.935-5.319-.899-3.751 3.871-.794-5.332-4.84-2.368 4.826-2.402.759-5.332 3.78 3.842 5.303-.927-2.493 4.784 2.529 4.763Z\"\n  })), _path34 || (_path34 = /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#D3CECB\",\n    d: \"m32.186 199.443-6.522-1.102-.26-.044-.182.189-4.602 4.748-.974-6.541-.039-.26-.236-.115-5.936-2.904 5.92-2.947.235-.117.037-.26.93-6.541 4.638 4.714.184.187.258-.045 6.505-1.137-3.06 5.869-.121.233.123.233 3.102 5.84Z\"\n  })), _path35 || (_path35 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#D7D3D1\",\n    d: \"m246.299 175.29-7.523-1.272-5.306 5.476-1.123-7.543-6.847-3.348 6.827-3.399 1.073-7.542 5.346 5.435 7.503-1.311-3.528 6.767 3.578 6.737Z\"\n  })), _path36 || (_path36 = /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#D3CECB\",\n    d: \"m221.424 157.471-1.536-2.468-.139-.223-.263-.012-2.905-.133 1.871-2.226.169-.201-.07-.253-.772-2.801 2.694 1.091.244.099.219-.145 2.426-1.599-.202 2.902-.018.261.205.164 2.269 1.811-2.825.702-.255.063-.093.247-1.019 2.721Z\"\n  })), _path37 || (_path37 = /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#D3CECB\",\n    strokeWidth: 0.9,\n    d: \"m46.806 96.124-4.46-3.747-.181-.152-.228.063-5.613 1.552 2.179-5.401.088-.22-.13-.197-3.213-4.854 5.81.404.236.016.148-.185 3.625-4.552 1.418 5.65.057.229.221.082 5.448 2.04-4.943 3.091-.2.126-.01.236-.252 5.82Z\"\n  })));\n};\nexport { SvgEmptyState as ReactComponent };\nexport default __webpack_public_path__ + \"47ce2574bf95f07215a7eb55e67f172f.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FormattedMessage } from '@edx/frontend-platform/i18n';\nimport { Hyperlink, Button } from '@edx/paragon';\n\nimport urls from 'data/services/lms/urls';\nimport emptyStateSVG from './assets/empty-state.svg';\nimport messages from './messages';\n\nconst EmptySubmission = ({ courseId }) => (\n  <div className=\"empty-submission\">\n    <img src={emptyStateSVG} alt=\"empty state\" />\n    <h3>\n      <FormattedMessage {...messages.noResultsFoundTitle} />\n    </h3>\n    <p>\n      <FormattedMessage {...messages.noResultsFoundBody} />\n    </p>\n    <Hyperlink className=\"py-4\" destination={urls.openResponse(courseId)}>\n      <Button variant=\"outline-primary\">\n        <FormattedMessage {...messages.backToResponses} />\n      </Button>\n    </Hyperlink>\n  </div>\n);\n\nEmptySubmission.defaultProps = {\n};\nEmptySubmission.propTypes = {\n  courseId: PropTypes.string.isRequired,\n};\n\nexport default EmptySubmission;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { Container, Spinner } from '@edx/paragon';\nimport { FormattedMessage } from '@edx/frontend-platform/i18n';\n\nimport { selectors, thunkActions } from 'data/redux';\nimport { RequestKeys } from 'data/constants/requests';\n\nimport ReviewModal from 'containers/ReviewModal';\n\nimport ListError from './ListError';\nimport ListViewBreadcrumb from './ListViewBreadcrumb';\nimport SubmissionsTable from './SubmissionsTable';\nimport EmptySubmission from './EmptySubmission';\nimport messages from './messages';\nimport './ListView.scss';\n\n/**\n * <ListView />\n */\nexport class ListView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.props.initializeApp();\n  }\n\n  render() {\n    const {\n      isLoaded, hasError, courseId, isEmptySubmissionData,\n    } = this.props;\n    return (\n      <Container className=\"py-4\">\n        {isLoaded\n          && (isEmptySubmissionData ? (\n            <EmptySubmission courseId={courseId} />\n          ) : (\n            <>\n              <ListViewBreadcrumb />\n              <SubmissionsTable />\n            </>\n          ))}\n        {hasError && <ListError />}\n        {!isLoaded && !hasError && (\n          <div className=\"w-100 h-100 text-center\">\n            <Spinner animation=\"border\" variant=\"primary\" />\n            <h4>\n              <FormattedMessage {...messages.loadingResponses} />\n            </h4>\n          </div>\n        )}\n        <ReviewModal />\n      </Container>\n    );\n  }\n}\nListView.defaultProps = {};\nListView.propTypes = {\n  // redux\n  courseId: PropTypes.string.isRequired,\n  initializeApp: PropTypes.func.isRequired,\n  isLoaded: PropTypes.bool.isRequired,\n  hasError: PropTypes.bool.isRequired,\n  isEmptySubmissionData: PropTypes.bool.isRequired,\n};\n\nexport const mapStateToProps = (state) => ({\n  courseId: selectors.app.courseId(state),\n  isLoaded: selectors.requests.isCompleted(state, {\n    requestKey: RequestKeys.initialize,\n  }),\n  hasError: selectors.requests.isFailed(state, {\n    requestKey: RequestKeys.initialize,\n  }),\n  isEmptySubmissionData: selectors.submissions.isEmptySubmissionData(state),\n});\n\nexport const mapDispatchToProps = {\n  initializeApp: thunkActions.app.initialize,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListView);\n","import { defineMessages } from '@edx/frontend-platform/i18n';\n\nconst messages = defineMessages({\n  PageTitle: {\n    id: 'PageTitle',\n    defaultMessage: 'ORA staff grading | {siteName}',\n    description: 'Title tag',\n  },\n});\n\nexport default messages;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useIntl } from '@edx/frontend-platform/i18n';\nimport { getConfig } from '@edx/frontend-platform';\n\nimport messages from './messages';\n\nconst Head = () => {\n  const { formatMessage } = useIntl();\n  return (\n    <Helmet>\n      <title>\n        {formatMessage(messages.PageTitle, { siteName: getConfig().SITE_NAME })}\n      </title>\n      <link rel=\"shortcut icon\" href={getConfig().FAVICON_URL} type=\"image/x-icon\" />\n    </Helmet>\n  );\n};\n\nexport default Head;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport Footer from '@edx/frontend-component-footer';\nimport { LearningHeader as Header } from '@edx/frontend-component-header';\n\nimport { selectors } from 'data/redux';\n\nimport DemoWarning from 'containers/DemoWarning';\nimport CTA from 'containers/CTA';\nimport ListView from 'containers/ListView';\n\nimport './App.scss';\nimport Head from './components/Head';\n\nexport const App = ({ courseMetadata, isEnabled }) => (\n  <Router>\n    <div>\n      <Head />\n      <Header\n        courseTitle={courseMetadata.title}\n        courseNumber={courseMetadata.number}\n        courseOrg={courseMetadata.org}\n      />\n      {!isEnabled && <DemoWarning />}\n      <CTA />\n      <main>\n        <ListView />\n      </main>\n      <Footer logo={process.env.LOGO_POWERED_BY_OPEN_EDX_URL_SVG} />\n    </div>\n  </Router>\n);\nApp.defaultProps = {\n  courseMetadata: {\n    title: '',\n    number: null,\n    org: '',\n  },\n};\nApp.propTypes = {\n  courseMetadata: PropTypes.shape({\n    title: PropTypes.string,\n    number: PropTypes.string,\n    org: PropTypes.string,\n  }),\n  isEnabled: PropTypes.bool.isRequired,\n};\n\nexport const mapStateToProps = (state) => ({\n  courseMetadata: selectors.app.courseMetadata(state),\n  isEnabled: selectors.app.isEnabled(state),\n});\n\nexport default connect(mapStateToProps)(App);\n","/* eslint-disable import/prefer-default-export */\nimport 'core-js/stable';\nimport 'regenerator-runtime/runtime';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { AppProvider, ErrorPage } from '@edx/frontend-platform/react';\n\nimport store from 'data/store';\nimport {\n  APP_READY,\n  APP_INIT_ERROR,\n  initialize,\n  subscribe,\n  mergeConfig,\n} from '@edx/frontend-platform';\n\nimport messages from './i18n';\n\nimport App from './App';\n\nsubscribe(APP_READY, () => {\n  ReactDOM.render(\n    <AppProvider store={store}>\n      <App />\n    </AppProvider>,\n    document.getElementById('root'),\n  );\n});\n\nsubscribe(APP_INIT_ERROR, (error) => {\n  ReactDOM.render(\n    <ErrorPage message={error.message} />,\n    document.getElementById('root'),\n  );\n});\n\nexport const appName = 'OraGradingAppConfig';\n\ninitialize({\n  handlers: {\n    config: () => {\n      mergeConfig({\n        SUPPORT_URL: process.env.SUPPORT_URL || null,\n      }, appName);\n    },\n  },\n  messages,\n  requireAuthenticatedUser: true,\n});\n","var map = {\n\t\"./af\": 94506,\n\t\"./af.js\": 94506,\n\t\"./ar\": 59687,\n\t\"./ar-dz\": 62887,\n\t\"./ar-dz.js\": 62887,\n\t\"./ar-kw\": 66307,\n\t\"./ar-kw.js\": 66307,\n\t\"./ar-ly\": 51664,\n\t\"./ar-ly.js\": 51664,\n\t\"./ar-ma\": 89926,\n\t\"./ar-ma.js\": 89926,\n\t\"./ar-sa\": 85207,\n\t\"./ar-sa.js\": 85207,\n\t\"./ar-tn\": 52912,\n\t\"./ar-tn.js\": 52912,\n\t\"./ar.js\": 59687,\n\t\"./az\": 5011,\n\t\"./az.js\": 5011,\n\t\"./be\": 25997,\n\t\"./be.js\": 25997,\n\t\"./bg\": 4427,\n\t\"./bg.js\": 4427,\n\t\"./bm\": 85385,\n\t\"./bm.js\": 85385,\n\t\"./bn\": 67703,\n\t\"./bn-bd\": 57002,\n\t\"./bn-bd.js\": 57002,\n\t\"./bn.js\": 67703,\n\t\"./bo\": 39841,\n\t\"./bo.js\": 39841,\n\t\"./br\": 45642,\n\t\"./br.js\": 45642,\n\t\"./bs\": 69038,\n\t\"./bs.js\": 69038,\n\t\"./ca\": 53512,\n\t\"./ca.js\": 53512,\n\t\"./cs\": 39497,\n\t\"./cs.js\": 39497,\n\t\"./cv\": 6479,\n\t\"./cv.js\": 6479,\n\t\"./cy\": 89318,\n\t\"./cy.js\": 89318,\n\t\"./da\": 97229,\n\t\"./da.js\": 97229,\n\t\"./de\": 63460,\n\t\"./de-at\": 51044,\n\t\"./de-at.js\": 51044,\n\t\"./de-ch\": 26445,\n\t\"./de-ch.js\": 26445,\n\t\"./de.js\": 63460,\n\t\"./dv\": 32096,\n\t\"./dv.js\": 32096,\n\t\"./el\": 16048,\n\t\"./el.js\": 16048,\n\t\"./en-au\": 74301,\n\t\"./en-au.js\": 74301,\n\t\"./en-ca\": 66855,\n\t\"./en-ca.js\": 66855,\n\t\"./en-gb\": 761,\n\t\"./en-gb.js\": 761,\n\t\"./en-ie\": 46127,\n\t\"./en-ie.js\": 46127,\n\t\"./en-il\": 49157,\n\t\"./en-il.js\": 49157,\n\t\"./en-in\": 37199,\n\t\"./en-in.js\": 37199,\n\t\"./en-nz\": 31511,\n\t\"./en-nz.js\": 31511,\n\t\"./en-sg\": 47309,\n\t\"./en-sg.js\": 47309,\n\t\"./eo\": 92160,\n\t\"./eo.js\": 92160,\n\t\"./es\": 68582,\n\t\"./es-do\": 71885,\n\t\"./es-do.js\": 71885,\n\t\"./es-mx\": 68131,\n\t\"./es-mx.js\": 68131,\n\t\"./es-us\": 16962,\n\t\"./es-us.js\": 16962,\n\t\"./es.js\": 68582,\n\t\"./et\": 98890,\n\t\"./et.js\": 98890,\n\t\"./eu\": 37704,\n\t\"./eu.js\": 37704,\n\t\"./fa\": 22562,\n\t\"./fa.js\": 22562,\n\t\"./fi\": 70877,\n\t\"./fi.js\": 70877,\n\t\"./fil\": 34246,\n\t\"./fil.js\": 34246,\n\t\"./fo\": 78341,\n\t\"./fo.js\": 78341,\n\t\"./fr\": 19867,\n\t\"./fr-ca\": 82347,\n\t\"./fr-ca.js\": 82347,\n\t\"./fr-ch\": 17683,\n\t\"./fr-ch.js\": 17683,\n\t\"./fr.js\": 19867,\n\t\"./fy\": 21982,\n\t\"./fy.js\": 21982,\n\t\"./ga\": 13905,\n\t\"./ga.js\": 13905,\n\t\"./gd\": 13443,\n\t\"./gd.js\": 13443,\n\t\"./gl\": 66905,\n\t\"./gl.js\": 66905,\n\t\"./gom-deva\": 91324,\n\t\"./gom-deva.js\": 91324,\n\t\"./gom-latn\": 41890,\n\t\"./gom-latn.js\": 41890,\n\t\"./gu\": 37134,\n\t\"./gu.js\": 37134,\n\t\"./he\": 96835,\n\t\"./he.js\": 96835,\n\t\"./hi\": 81394,\n\t\"./hi.js\": 81394,\n\t\"./hr\": 13564,\n\t\"./hr.js\": 13564,\n\t\"./hu\": 46269,\n\t\"./hu.js\": 46269,\n\t\"./hy-am\": 57269,\n\t\"./hy-am.js\": 57269,\n\t\"./id\": 44254,\n\t\"./id.js\": 44254,\n\t\"./is\": 8699,\n\t\"./is.js\": 8699,\n\t\"./it\": 28301,\n\t\"./it-ch\": 92887,\n\t\"./it-ch.js\": 92887,\n\t\"./it.js\": 28301,\n\t\"./ja\": 64642,\n\t\"./ja.js\": 64642,\n\t\"./jv\": 62168,\n\t\"./jv.js\": 62168,\n\t\"./ka\": 46825,\n\t\"./ka.js\": 46825,\n\t\"./kk\": 49537,\n\t\"./kk.js\": 49537,\n\t\"./km\": 45808,\n\t\"./km.js\": 45808,\n\t\"./kn\": 34881,\n\t\"./kn.js\": 34881,\n\t\"./ko\": 45698,\n\t\"./ko.js\": 45698,\n\t\"./ku\": 92452,\n\t\"./ku.js\": 92452,\n\t\"./ky\": 1853,\n\t\"./ky.js\": 1853,\n\t\"./lb\": 77639,\n\t\"./lb.js\": 77639,\n\t\"./lo\": 34502,\n\t\"./lo.js\": 34502,\n\t\"./lt\": 60874,\n\t\"./lt.js\": 60874,\n\t\"./lv\": 18237,\n\t\"./lv.js\": 18237,\n\t\"./me\": 87878,\n\t\"./me.js\": 87878,\n\t\"./mi\": 64234,\n\t\"./mi.js\": 64234,\n\t\"./mk\": 17535,\n\t\"./mk.js\": 17535,\n\t\"./ml\": 43896,\n\t\"./ml.js\": 43896,\n\t\"./mn\": 63046,\n\t\"./mn.js\": 63046,\n\t\"./mr\": 80927,\n\t\"./mr.js\": 80927,\n\t\"./ms\": 37224,\n\t\"./ms-my\": 66332,\n\t\"./ms-my.js\": 66332,\n\t\"./ms.js\": 37224,\n\t\"./mt\": 24866,\n\t\"./mt.js\": 24866,\n\t\"./my\": 24206,\n\t\"./my.js\": 24206,\n\t\"./nb\": 66723,\n\t\"./nb.js\": 66723,\n\t\"./ne\": 45097,\n\t\"./ne.js\": 45097,\n\t\"./nl\": 37529,\n\t\"./nl-be\": 1355,\n\t\"./nl-be.js\": 1355,\n\t\"./nl.js\": 37529,\n\t\"./nn\": 30296,\n\t\"./nn.js\": 30296,\n\t\"./oc-lnc\": 4802,\n\t\"./oc-lnc.js\": 4802,\n\t\"./pa-in\": 77057,\n\t\"./pa-in.js\": 77057,\n\t\"./pl\": 69850,\n\t\"./pl.js\": 69850,\n\t\"./pt\": 15552,\n\t\"./pt-br\": 83726,\n\t\"./pt-br.js\": 83726,\n\t\"./pt.js\": 15552,\n\t\"./ro\": 1717,\n\t\"./ro.js\": 1717,\n\t\"./ru\": 79117,\n\t\"./ru.js\": 79117,\n\t\"./sd\": 61742,\n\t\"./sd.js\": 61742,\n\t\"./se\": 92049,\n\t\"./se.js\": 92049,\n\t\"./si\": 83329,\n\t\"./si.js\": 83329,\n\t\"./sk\": 27619,\n\t\"./sk.js\": 27619,\n\t\"./sl\": 76707,\n\t\"./sl.js\": 76707,\n\t\"./sq\": 84281,\n\t\"./sq.js\": 84281,\n\t\"./sr\": 60436,\n\t\"./sr-cyrl\": 13408,\n\t\"./sr-cyrl.js\": 13408,\n\t\"./sr.js\": 60436,\n\t\"./ss\": 27500,\n\t\"./ss.js\": 27500,\n\t\"./sv\": 6950,\n\t\"./sv.js\": 6950,\n\t\"./sw\": 54222,\n\t\"./sw.js\": 54222,\n\t\"./ta\": 73746,\n\t\"./ta.js\": 73746,\n\t\"./te\": 1130,\n\t\"./te.js\": 1130,\n\t\"./tet\": 34740,\n\t\"./tet.js\": 34740,\n\t\"./tg\": 13378,\n\t\"./tg.js\": 13378,\n\t\"./th\": 20628,\n\t\"./th.js\": 20628,\n\t\"./tk\": 92622,\n\t\"./tk.js\": 92622,\n\t\"./tl-ph\": 30100,\n\t\"./tl-ph.js\": 30100,\n\t\"./tlh\": 22871,\n\t\"./tlh.js\": 22871,\n\t\"./tr\": 33600,\n\t\"./tr.js\": 33600,\n\t\"./tzl\": 18985,\n\t\"./tzl.js\": 18985,\n\t\"./tzm\": 3627,\n\t\"./tzm-latn\": 51145,\n\t\"./tzm-latn.js\": 51145,\n\t\"./tzm.js\": 3627,\n\t\"./ug-cn\": 4790,\n\t\"./ug-cn.js\": 4790,\n\t\"./uk\": 97712,\n\t\"./uk.js\": 97712,\n\t\"./ur\": 99529,\n\t\"./ur.js\": 99529,\n\t\"./uz\": 99141,\n\t\"./uz-latn\": 61737,\n\t\"./uz-latn.js\": 61737,\n\t\"./uz.js\": 99141,\n\t\"./vi\": 98205,\n\t\"./vi.js\": 98205,\n\t\"./x-pseudo\": 20697,\n\t\"./x-pseudo.js\": 20697,\n\t\"./yo\": 37826,\n\t\"./yo.js\": 37826,\n\t\"./zh-cn\": 83994,\n\t\"./zh-cn.js\": 83994,\n\t\"./zh-hk\": 36892,\n\t\"./zh-hk.js\": 36892,\n\t\"./zh-mo\": 43884,\n\t\"./zh-mo.js\": 43884,\n\t\"./zh-tw\": 85136,\n\t\"./zh-tw.js\": 85136\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;"],"names":["strictGet","target","name","Symbol","toStringTag","_typeof","console","log","toString","error","e","Error","concat","stack","dict","Proxy","get","RequestStates","StrictDict","inactive","pending","completed","failed","RequestKeys","batchUnlock","downloadFiles","fetchSubmission","fetchSubmissionStatus","initialize","prefetchNext","prefetchPrev","setLock","submitGrade","ErrorStatuses","missingParam","badRequest","unauthorized","forbidden","notFound","conflict","serverError","lockStatuses","unlocked","locked","inProgress","gradeStatuses","ungraded","graded","gradingStatuses","feedbackRequirement","disabled","required","optional","fileUploadResponseOptions","none","paramKeys","oraLocation","submissionUUID","oraTypes","team","individual","submissionFields","dateSubmitted","gradingStatus","score","teamName","username","app","createSlice","initialState","courseMetadata","number","org","courseId","isEnabled","isGrading","oraMetadata","prompt","type","rubricConfig","showReview","showRubric","reducers","loadIsEnabled","state","_ref","payload","_objectSpread","loadCourseMetadata","_ref2","loadOraMetadata","_ref3","setShowReview","_ref4","setShowRubric","_ref5","toggleShowRubric","actions","reducer","appSelector","mkSimpleSelector","cb","createSelector","module","simpleSelectors","data","oraMetadataSelector","ora","fileUploadResponseConfig","isIndividual","rubric","config","rubricConfigSelector","hasConfig","undefined","feedbackConfig","feedback","feedbackPrompt","criteria","criterionConfig","orderNum","criterionFeedbackConfig","criteriaIndices","rubricCriteria","map","shouldIncludeFeedback","includes","fillGradeData","Array","isArray","gradeData","overallFeedback","criteriaFeedback","selectedOption","updateGradingData","currentId","current","gradingData","_defineProperty","updateCriterion","entry","grading","selection","activeIndex","prev","next","loadSubmission","loadNext","loadPrev","updateSelection","startGrading","hasGradingData","lockStatus","showValidation","failSetLock","setRubricFeedback","setCriterionOption","_ref6","_ref6$payload","value","setCriterionFeedback","_ref7","_ref7$payload","setShowValidation","_ref8","completeGrading","_ref9","gradeStatus","stopGrading","_ref10","submissionStatus","rootSelector","key","rootKeys","hasGradingProgress","Object","keys","length","selectionLength","allSubmissions","submissions","listData","submissionList","id","_allSubmissions$id","rest","_objectWithoutProperties","_excluded","_","isEmptySubmissionData","selected","submissionsSelectors","selectedIds","response","staticData","submission","grade","userDisplay","appSelectors","criteriaGradeData","remote","local","criterionGradeData","criterionSelectedOption","criterionFeedback","hasNext","list","index","hasPrev","doesExist","validation","show","overallFeedbackIsInvalid","criterion","options","criterionFeedbackIsInvalid","criterionSelectedOptionIsInvalid","isValidForSubmit","every","base","nav","_initialState","status","requests","startRequest","completeRequest","requestKey","failRequest","clearRequest","statusSelector","fn","isPending","requestStatus","allowNavigation","some","isInactive","isCompleted","isFailed","request","errorCode","_request$error2","errorStatus","_request$error","loadList","locationId","decodeURIComponent","window","location","pathname","replace","getConfig","PUBLIC_PATH","baseUrl","LMS_BASE_URL","api","baseEsgUrl","course","oraInitializeUrl","fetchSubmissionUrl","fetchSubmissionFilesUrl","fetchSubmissionStatusUrl","fetchSubmissionLockUrl","batchUnlockSubmissionsUrl","updateSubmissionGradeUrl","openResponse","_getAuthenticatedHttp","getAuthenticatedHttpClient","apply","arguments","post","_getAuthenticatedHttp2","client","stringifyUrl","url","query","queryString","skipNull","skipEmptyString","initializeApp","urls","then","_stringifyUrl2","fetchSubmissionFiles","_stringifyUrl3","_stringifyUrl4","lockSubmission","_stringifyUrl5","updateGrade","_stringifyUrl8","unlockSubmission","_stringifyUrl6","batchUnlockSubmissions","submissionUUIDs","networkRequest","promise","onSuccess","onFailure","dispatch","_excluded3","_excluded2","_excluded4","_excluded6","cancelReview","getState","selectors","_excluded5","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","done","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","TypeError","info","resultName","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","doneResult","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","val","object","reverse","pop","skipTempReset","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","DownloadException","files","genManifest","file","description","size","join","zipFiles","_callee","blobs","zipWriter","zipFile","zipName","_context","zip","add","bufferedWrite","close","FileSaver","_x","_x2","_x3","downloadFile","fetch","downloadUrl","ok","statusText","blob","downloadBlobs","_callee2","errors","_iterator","_step","_context2","_createForOfIteratorHelper","s","n","t0","t1","t2","t3","f","_x4","getSubmissionFiles","_callee3","_yield$api$fetchSubmi","_context3","_x5","loadSelectionForReview","cancelGrading","download","modules","moduleProps","propName","reduce","moduleKey","rootReducer","combineReducers","loggerMiddleware","middleware","createLogger","thunkMiddleware","redux","createStore","composeWithDevTools","applyMiddleware","appMessages","ar","fr","hi","ru","uk","headerMessages","footerMessages","paragonMessages","defineMessages","demoModeHeading","defaultMessage","demoModeMessage","DemoWarning","hide","_jsxs","Alert","className","variant","icon","Info","children","_jsx","Heading","FormattedMessage","messages","propTypes","PropTypes","isRequired","connect","ctaFeedbackMessage","ctaLinkMessage","ctaLetUsKnowMessage","PageBanner","Hyperlink","isInline","destination","showLaunchIcon","LoadingMessage","message","Spinner","animation","defaultProps","_gradingStatuses$ungr","buttonVariants","primary","light","success","warning","statusVariants","_StrictDict","statuses","StatusBadge","Badge","nullMethod","ConfirmModal","title","isOpen","onCancel","cancelText","onConfirm","confirmText","content","AlertModal","onClose","footerNode","ActionRow","Button","onClick","overrideConfirmTitle","overrideConfirmWarning","overrideConfirmContinue","overrideGrade","confirmStopOverrideTitle","confirmStopGradingTitle","confirmStopWarning","confirmStopOverrideAction","confirmStopGradingAction","goBack","loadPrevious","navigationLabel","StopGradingConfirmModal","intl","isOverride","formatMessage","intlShape","injectIntl","OverrideGradeConfirmModal","buttonConfig","_buttonConfig","label","iconAfter","Highlight","Cancel","showConfirmStopGrading","React","showConfirmOverrideGrade","buttonArgs","overrideGradeState","stopGradingState","setShow","thunkActions","overrideGradeArgs","_ref2$overrideGradeSt","stopGradingArgs","isGraded","_ref3$stopGradingStat","buttonHooks","showState","_module$reduxValues","useSelector","gradeIsPending","reduxState","lockIsPending","StartGradingButton","useDispatch","_hooks$buttonHooks","hooks","_Fragment","SubmissionNavigation","hasPrevSubmission","hasNextSubmission","IconButton","alt","src","ChevronLeft","iconAs","Icon","total","ChevronRight","mapDispatchToProps","pointsDisplay","hideRubric","ReviewActions","_ref$score","pointsEarned","pointsPossible","isLoaded","FileTypes","pdf","jpg","jpeg","png","bmp","txt","gif","jfif","pjpeg","pjp","svg","FileNameCell","FileExtensionCell","_value$split","split","toUpperCase","altText","InfoPopover","OverlayTrigger","trigger","placement","flip","overlay","Popover","Content","InfoOutline","filePopoverNameTitle","filePopoverDescriptionTitle","fileSizeTitle","FilePopoverContent","filesize","FilePopoverCell","original","row","downloadURL","tableNameHeader","tableExtensionHeader","tablePopoverHeader","downloading","downloaded","retryDownload","submissionFiles","exceedFileSize","statusMapping","_statusMapping","FileDownload","StatefulButton","icons","default","labels","disabledStates","SubmissionFiles","_React$Component","_inherits","_super","_classCallCheck","this","props","totalFileSize","_this$props","Card","Collapsible","Advanced","defaultOpen","Trigger","Visible","whenClosed","ArrowDropDown","whenOpen","ArrowDropUp","Body","DataTable","columns","Header","accessor","Cell","itemCount","Table","Footer","canDownload","WarningFilled","fileInfo","retryButton","fileNotFoundError","unknownError","FileInfo","FileCard","messageShape","ErrorBanner","headingMessage","actionButtons","action","LoadingBanner","ImageRenderer","fileName","onError","onLoad","pdfjs","workerSrc","pdfjsWorker","missingPDF","pageNumber","useState","numPages","relativeHeight","PDFRenderer","_rendererHooks","_module$state$pageNum2","_slicedToArray","rawSetPageNumber","_module$state$numPage2","setNumPages","_module$state$relativ2","setRelativeHeight","setPageNumber","wrapperRef","useRef","onDocumentLoadSuccess","onLoadPageSuccess","page","pageWidth","view","pageHeight","wrapperHeight","getBoundingClientRect","width","onDocumentLoadError","onInputPageChange","parseInt","onPrevPageButtonClick","onNextPageButtonClick","rendererHooks","ref","Document","onLoadSuccess","onLoadError","style","height","Page","Form","Group","Label","Control","min","max","onChange","fetchFile","setContent","TXTRenderer","_module$state$content2","useEffect","RENDERERS","SUPPORTED_TYPES","ERROR_STATUSES","_ERROR_STATUSES","isLoading","getFileType","_fileName$split$pop","toLowerCase","isSupported","FileRenderer","_renderHooks","_module$state$errorSt2","setErrorStatus","_module$state$isLoadi2","setIsLoading","setState","newState","stopLoading","errorMessage","errorAction","headerMessage","Renderer","rendererProps","renderHooks","PreviewDisplay","filter","ResponseDisplay","_this","purify","createDOMPurify","_this2","text","parse","sanitize","allowFileUpload","submittedFiles","textContents","textContent","Section","warningMessage","confirm","DemoAlert","addComments","comments","optionPoints","rubricSelectedError","criterionFeedbackError","RadioCriterion","bind","_assertThisInitialized","event","isInvalid","RadioSet","option","Radio","points","Feedback","review","explanation","CriterionFeedback","msg","setValue","commentMessage","translate","_this$props2","feedbackIsInvalid","as","floatingLabel","ReviewCriterion","FormControlFeedback","CriterionContainer","gradeSubmitted","submittingGrade","overallComments","overallFeedbackError","RubricFeedback","inputLabel","ButtonStates","submitButtonState","_module$state$showDem2","showDemoAlert","setShowDemoAlert","showFooter","buttonProps","demoAlertProps","Rubric","_hooks$rendererHooks","loadErrorHeading","loadErrorMessage","reloadSubmission","gradeNotSubmittedHeading","gradeNotSubmittedContent","resubmitGrade","dismiss","errorSubmittingGradeHeading","errorSubmittingGradeContent","errorLockContestedHeading","errorLockContested","errorLockBadRequestHeading","errorLockBadRequest","downloadFailedHeading","downloadFailedContent","failedFiles","ReviewError","_ref$actions","cancel","FetchErrors","reload","LockErrors","heading","_this$errorProp","errorProp","badRequestError","contentMessage","defaultError","errorStatusSelector","SubmitErrors","_errors","reviewActions","DownloadErrors","cancelAction","clearState","filename","ReviewErrors","ReviewContent","Row","Col","closeReviewConfirmTitle","closeReviewConfirmWarning","confirmCloseModalAction","CloseReviewConfirmModal","loadingResponse","demoTitleMessage","showConfirmCloseReviewGrade","_state$showConfirmClo2","oraName","closeConfirmModalProps","ReviewModal","FullscreenModal","beforeBodyNode","modalBodyClassName","backToResponses","noResultsFoundTitle","noResultsFoundBody","viewAllResponses","viewSelectedResponses","learnerSubmissionDate","teamSubmissionDate","backToResponsesLowercase","reloadSubmissions","loadingResponses","ListError","ListViewBreadcrumb","ArrowBack","Launch","FilterStatusComponent","clearFiltersText","buttonClassName","showFilteredFields","hookProps","_React$useContext","DataTableContext","setAllFilters","headers","filters","clearFilters","headerMap","cur","filterNames","filterTexts","TableAction","tableInstance","handleClick","rows","SelectedBulkAction","selectedFlatRows","SubmissionsTable","_len","_args","_key","Date","moment","toLocaleString","_this$props$intl","statusKey","lmsMessages","isFilterable","numBreakoutFilters","defaultColumnValues","Filter","TextFilter","isSelectable","isSortable","isPaginated","pageSize","pageIndex","tableActions","handleViewAllResponsesClick","bulkActions","userLabel","userAccessor","dateSubmittedLabel","formatDate","disableFilters","formatGrade","formatStatus","MultiSelectDropdownFilter","filterChoices","gradeStatusOptions","TableControlBar","TableFooter","EmptySubmission","emptyStateSVG","ListView","hasError","Container","PageTitle","useIntl","Helmet","siteName","SITE_NAME","rel","href","FAVICON_URL","App","Router","Head","courseTitle","courseNumber","courseOrg","CTA","logo","process","LOGO_POWERED_BY_OPEN_EDX_URL_SVG","subscribe","APP_READY","ReactDOM","AppProvider","store","document","getElementById","APP_INIT_ERROR","ErrorPage","handlers","mergeConfig","SUPPORT_URL","requireAuthenticatedUser","webpackContext","req","webpackContextResolve","__webpack_require__","o","code"],"sourceRoot":""}