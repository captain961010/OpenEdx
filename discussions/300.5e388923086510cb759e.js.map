{"version":3,"file":"300.5e388923086510cb759e.js","mappings":"qzCAqBA,MAAMA,GAAiBC,EAAAA,EAAAA,OAAK,IAAM,iCAC5BC,GAAsBD,EAAAA,EAAAA,OAAK,IAAM,iCACjCE,GAAmBF,EAAAA,EAAAA,OAAK,IAAM,iCAC9BG,GAAeH,EAAAA,EAAAA,OAAK,IAAM,iCAC1BI,GAAYJ,EAAAA,EAAAA,OAAK,IAAM,wCACvBK,GAAmBL,EAAAA,EAAAA,OAAK,IAAM,0CAE9BM,EAAoBC,IAA0C,IAAzC,eAAEC,EAAc,iBAAEC,GAAkBF,EAC7D,MAAMG,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,MACdC,GAAgBC,EAAAA,EAAAA,OAChB,uBAAEC,IAA2BC,EAAAA,EAAAA,YAAWC,EAAAA,GACxCC,GAAkBC,EAAAA,EAAAA,IAAYC,EAAAA,IAC9BC,GAAeF,EAAAA,EAAAA,IAAYG,EAAAA,IAC3BC,GAAwBC,EAAAA,EAAAA,MACxBC,GAAaC,EAAAA,EAAAA,QAAO,MACpBC,GAAsBC,EAAAA,EAAAA,IAAiBpB,IACrCqB,OAAQC,IAAiBC,EAAAA,EAAAA,KAYjC,OAVAC,EAAAA,EAAAA,YAAU,KACJP,GAAcE,IAAwBZ,IACpCJ,IACFc,EAAWQ,QAAQC,MAAMC,UAAeL,EAAeH,EAAjB,MAExCF,EAAWQ,QAAQC,MAAME,UAAeN,EAAeH,EAAjB,KACtCF,EAAWQ,QAAQC,MAAMG,IAAO,GAAEV,MACpC,GACC,CAACF,EAAYE,EAAqBZ,KAGnCuB,EAAAA,EAAAA,KAAA,OACEC,IAAKd,EACLe,UAAWC,IAAW,8BAA+B,CACnD,UAAWlC,EACX,6CAA8CA,EAC9C,SAAUI,EACV,6BAA8BA,IAAgBE,EAC9C,wBAAyBA,EACzB,sBAAuBE,IAEzB,cAAY,UAAS2B,UAErBJ,EAAAA,EAAAA,KAACK,EAAAA,SAAQ,CAACC,UAAWN,EAAAA,EAAAA,KAACO,EAAAA,EAAO,IAAKH,UAChCI,EAAAA,EAAAA,MAACC,EAAAA,GAAM,CAAAL,SAAA,CACJxB,IAAoBH,IACrBuB,EAAAA,EAAAA,KAACU,EAAAA,GAAK,CACJC,KAAMC,EAAAA,GAAAA,OAAAA,IACNC,UAAWnD,EACXoD,OAAK,IAGNlC,IAAoBH,IACrBuB,EAAAA,EAAAA,KAACU,EAAAA,GAAK,CACJC,KAAM,CACJC,EAAAA,GAAAA,OAAAA,MACAA,EAAAA,GAAAA,OAAAA,SACAA,EAAAA,GAAAA,OAAAA,WACAA,EAAAA,GAAAA,OAAAA,iBAEFC,UAAWrD,EACXsD,OAAK,KAGPd,EAAAA,EAAAA,KAACU,EAAAA,GAAK,CACJC,KAAM,CAACC,EAAAA,GAAAA,MAAAA,UAAwBA,EAAAA,GAAAA,MAAAA,SAAuBA,EAAAA,GAAAA,MAAAA,KAAmBA,EAAAA,GAAAA,OAAAA,UACzEC,UAAWhD,KAEbmC,EAAAA,EAAAA,KAACU,EAAAA,GAAK,CAACC,KAAMC,EAAAA,GAAAA,OAAAA,KAAoBC,UAAW/C,IAC3CmB,IACDe,EAAAA,EAAAA,KAACU,EAAAA,GAAK,CAACC,KAAMC,EAAAA,GAAAA,SAAAA,MAAuBC,UAAWlD,IAE9CsB,IACDe,EAAAA,EAAAA,KAACU,EAAAA,GAAK,CAACC,KAAMC,EAAAA,GAAAA,SAAAA,KAAsBC,UAAWjD,IAE7CmB,IAAiBgC,EAAAA,GAAAA,aAClBf,EAAAA,EAAAA,KAACgB,EAAAA,GAAQ,CACPC,KAAML,EAAAA,GAAAA,YAAAA,KACNM,GAAEC,EAAAA,EAAA,GACGhD,GAAQ,IACXiD,SAAUR,EAAAA,GAAAA,MAAAA,oBAMd,EAIV7C,EAAkBsD,UAAY,CAC5BpD,eAAgBqD,IAAAA,KAChBpD,iBAAkBoD,IAAAA,UAAoB,CACpCA,IAAAA,KACAA,IAAAA,MAAgB,CAAE3B,QAAS2B,IAAAA,WAAqBC,cAIpDxD,EAAkByD,aAAe,CAC/BvD,gBAAgB,EAChBC,iBAAkB,MAGpB,QAAeuD,EAAAA,KAAW1D,E","sources":["webpack://@edx/frontend-app-discussions/./src/discussions/discussions-home/DiscussionSidebar.jsx"],"sourcesContent":["import React, {\n  lazy, Suspense, useContext, useEffect, useRef,\n} from 'react';\nimport PropTypes from 'prop-types';\n\nimport classNames from 'classnames';\nimport { useSelector } from 'react-redux';\nimport {\n  Redirect, Route, Switch, useLocation,\n} from 'react-router';\n\nimport { useWindowSize } from '@edx/paragon';\n\nimport Spinner from '../../components/Spinner';\nimport { RequestStatus, Routes } from '../../data/constants';\nimport { DiscussionContext } from '../common/context';\nimport {\n  useContainerSize, useIsOnDesktop, useIsOnXLDesktop, useShowLearnersTab,\n} from '../data/hooks';\nimport { selectconfigLoadingStatus, selectEnableInContext } from '../data/selectors';\n\nconst TopicPostsView = lazy(() => import('../in-context-topics/TopicPostsView'));\nconst InContextTopicsView = lazy(() => import('../in-context-topics/TopicsView'));\nconst LearnerPostsView = lazy(() => import('../learners/LearnerPostsView'));\nconst LearnersView = lazy(() => import('../learners/LearnersView'));\nconst PostsView = lazy(() => import('../posts/PostsView'));\nconst LegacyTopicsView = lazy(() => import('../topics/TopicsView'));\n\nconst DiscussionSidebar = ({ displaySidebar, postActionBarRef }) => {\n  const location = useLocation();\n  const isOnDesktop = useIsOnDesktop();\n  const isOnXLDesktop = useIsOnXLDesktop();\n  const { enableInContextSidebar } = useContext(DiscussionContext);\n  const enableInContext = useSelector(selectEnableInContext);\n  const configStatus = useSelector(selectconfigLoadingStatus);\n  const redirectToLearnersTab = useShowLearnersTab();\n  const sidebarRef = useRef(null);\n  const postActionBarHeight = useContainerSize(postActionBarRef);\n  const { height: windowHeight } = useWindowSize();\n\n  useEffect(() => {\n    if (sidebarRef && postActionBarHeight && !enableInContextSidebar) {\n      if (isOnDesktop) {\n        sidebarRef.current.style.maxHeight = `${windowHeight - postActionBarHeight}px`;\n      }\n      sidebarRef.current.style.minHeight = `${windowHeight - postActionBarHeight}px`;\n      sidebarRef.current.style.top = `${postActionBarHeight}px`;\n    }\n  }, [sidebarRef, postActionBarHeight, enableInContextSidebar]);\n\n  return (\n    <div\n      ref={sidebarRef}\n      className={classNames('flex-column position-sticky', {\n        'd-none': !displaySidebar,\n        'd-flex overflow-auto box-shadow-centered-1': displaySidebar,\n        'w-100': !isOnDesktop,\n        'w-25 sidebar-desktop-width': isOnDesktop && !isOnXLDesktop,\n        'w-25 sidebar-XL-width': isOnXLDesktop,\n        'min-content-height': !enableInContextSidebar,\n      })}\n      data-testid=\"sidebar\"\n    >\n      <Suspense fallback={(<Spinner />)}>\n        <Switch>\n          {enableInContext && !enableInContextSidebar && (\n          <Route\n            path={Routes.TOPICS.ALL}\n            component={InContextTopicsView}\n            exact\n          />\n          )}\n          {enableInContext && !enableInContextSidebar && (\n          <Route\n            path={[\n              Routes.TOPICS.TOPIC,\n              Routes.TOPICS.CATEGORY,\n              Routes.TOPICS.TOPIC_POST,\n              Routes.TOPICS.TOPIC_POST_EDIT,\n            ]}\n            component={TopicPostsView}\n            exact\n          />\n          )}\n          <Route\n            path={[Routes.POSTS.ALL_POSTS, Routes.POSTS.MY_POSTS, Routes.POSTS.PATH, Routes.TOPICS.CATEGORY]}\n            component={PostsView}\n          />\n          <Route path={Routes.TOPICS.PATH} component={LegacyTopicsView} />\n          {redirectToLearnersTab && (\n          <Route path={Routes.LEARNERS.POSTS} component={LearnerPostsView} />\n          )}\n          {redirectToLearnersTab && (\n          <Route path={Routes.LEARNERS.PATH} component={LearnersView} />\n          )}\n          {configStatus === RequestStatus.SUCCESSFUL && (\n          <Redirect\n            from={Routes.DISCUSSIONS.PATH}\n            to={{\n              ...location,\n              pathname: Routes.POSTS.ALL_POSTS,\n            }}\n          />\n          )}\n        </Switch>\n      </Suspense>\n    </div>\n  );\n};\n\nDiscussionSidebar.propTypes = {\n  displaySidebar: PropTypes.bool,\n  postActionBarRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]),\n};\n\nDiscussionSidebar.defaultProps = {\n  displaySidebar: false,\n  postActionBarRef: null,\n};\n\nexport default React.memo(DiscussionSidebar);\n"],"names":["TopicPostsView","lazy","InContextTopicsView","LearnerPostsView","LearnersView","PostsView","LegacyTopicsView","DiscussionSidebar","_ref","displaySidebar","postActionBarRef","location","useLocation","isOnDesktop","useIsOnDesktop","isOnXLDesktop","useIsOnXLDesktop","enableInContextSidebar","useContext","DiscussionContext","enableInContext","useSelector","selectEnableInContext","configStatus","selectconfigLoadingStatus","redirectToLearnersTab","useShowLearnersTab","sidebarRef","useRef","postActionBarHeight","useContainerSize","height","windowHeight","useWindowSize","useEffect","current","style","maxHeight","minHeight","top","_jsx","ref","className","classNames","children","Suspense","fallback","Spinner","_jsxs","Switch","Route","path","Routes","component","exact","RequestStatus","Redirect","from","to","_objectSpread","pathname","propTypes","PropTypes","Element","defaultProps","React"],"sourceRoot":""}