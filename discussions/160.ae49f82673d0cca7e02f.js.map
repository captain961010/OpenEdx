{"version":3,"file":"160.ae49f82673d0cca7e02f.js","mappings":"qSAOO,MAEMA,EAIF,UAIX,SAASC,EAAUC,GAEhB,IAFiB,SAClBC,EAAQ,YAAEC,EAAW,eAAEC,EAAc,UAAEC,EAAS,KAAEC,EAAI,QAAEC,GACzDN,EACC,OAAKK,EAIHE,EAAAA,cAAA,OACEC,UAAWC,IACT,4BACC,oBAAmBH,KAEtBI,KAAK,QACL,YAAU,SACV,cAAY,QAEZH,EAAAA,cAAA,OAAKC,UAAU,2BACXP,GAEHC,GACCK,EAAAA,cAAA,QAAMC,UAAU,0CACdD,EAAAA,cAACI,EAAAA,EAAU,CACTC,QAASR,EACTS,OAAQC,EAAAA,EACRC,IAAKZ,EACLa,IAAKC,EAAAA,IACLC,KAAK,SACLC,aAA0B,SAAZb,EACdA,QAAqB,SAAZA,EAAqB,OAAS,YAxBxC,IA8BX,CAEAP,EAAWqB,UAAY,CAErBnB,SAAUoB,IAAAA,KAEVnB,YAAamB,IAAAA,KAEblB,eAAgBkB,IAAAA,KAEhBjB,UAAWiB,IAAAA,KAEXhB,KAAMgB,IAAAA,KAENf,QAASe,IAAAA,MAAgB,CAvDlB,QACD,OACG,UAqDkEvB,EAnDlE,aAsDXC,EAAWuB,aAAe,CACxBrB,cAAUsB,EACVrB,aAAa,EACbC,eAhE0C,UAiE1CC,UAAWA,OACXC,MAAM,EACNC,QAASR,GAGX,U,gDClEA,MAwBA,EAxBqC0B,KACnC,MAAMC,GAAOC,EAAAA,EAAAA,KACPC,GAAmBC,EAAAA,EAAAA,IAAYC,EAAAA,IAC/BC,GAAsBF,EAAAA,EAAAA,IAAYG,EAAAA,KACjCC,EAAYC,IAAiBC,EAAAA,EAAAA,WAAS,GAEvCC,GAAgBC,EAAAA,EAAAA,cAAY,KAChCH,GAAc,EAAM,GACnB,IAEH,OACEI,EAAAA,EAAAA,KAACtC,EAAU,CACTO,QAAQ,UACRD,MAAOsB,GAAoBK,GAAcF,IAAwBQ,EAAAA,GAAAA,WACjEpC,aAAW,EACXE,UAAW+B,EAAclC,UAEzBoC,EAAAA,EAAAA,KAAA,OAAK7B,UAAU,kBAAiBP,SAC7BwB,EAAKc,cAAcC,EAAAA,EAAAA,kCAEX,C","sources":["webpack://@edx/frontend-app-discussions/./node_modules/@edx/paragon/src/PageBanner/index.jsx","webpack://@edx/frontend-app-discussions/./src/discussions/discussions-home/DiscussionsRestrictionBanner.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Close } from '../../icons';\nimport Icon from '../Icon';\nimport IconButton from '../IconButton';\n\nexport const PAGE_BANNER_DISMISS_ALT_TEXT = 'Dismiss';\n\nexport const VARIANTS = {\n  light: 'light',\n  dark: 'dark',\n  warning: 'warning',\n  accentA: 'accentA',\n  accentB: 'accentB',\n};\n\nfunction PageBanner({\n  children, dismissible, dismissAltText, onDismiss, show, variant,\n}) {\n  if (!show) {\n    return null;\n  }\n  return (\n    <div\n      className={classNames(\n        'pgn__pageBanner-component',\n        `pgn__pageBanner__${variant}`,\n      )}\n      role=\"alert\"\n      aria-live=\"polite\"\n      aria-atomic=\"true\"\n    >\n      <div className=\"pgn__pageBanner-content\">\n        { children }\n      </div>\n      {dismissible && (\n        <span className=\"pgn__pageBanner-dismissButtonContainer\">\n          <IconButton\n            onClick={onDismiss}\n            iconAs={Icon}\n            alt={dismissAltText}\n            src={Close}\n            size=\"inline\"\n            invertColors={variant === 'dark'}\n            variant={variant === 'dark' ? 'dark' : 'black'}\n          />\n        </span>\n      )}\n    </div>\n  );\n}\n\nPageBanner.propTypes = {\n  /** An element rendered inside the `Page Banner`. */\n  children: PropTypes.node,\n  /** Boolean used to control whether `Page Banner` is dismissible. */\n  dismissible: PropTypes.bool,\n  /** An element to be set as the dismiss button's alt text (preferably a translated string). */\n  dismissAltText: PropTypes.node,\n  /** A function to be called on dismiss of the `Page Banner`. */\n  onDismiss: PropTypes.func,\n  /** Boolean used to control whether the Page Banner shows. */\n  show: PropTypes.bool,\n  /** A string designating which color variant of the `Page Banner` to display */\n  variant: PropTypes.oneOf([VARIANTS.light, VARIANTS.dark, VARIANTS.warning, VARIANTS.accentA, VARIANTS.accentB]),\n};\n\nPageBanner.defaultProps = {\n  children: undefined,\n  dismissible: false,\n  dismissAltText: PAGE_BANNER_DISMISS_ALT_TEXT,\n  onDismiss: () => {},\n  show: true,\n  variant: VARIANTS.accentA,\n};\n\nexport default PageBanner;\n","import React, { useCallback, useState } from 'react';\n\nimport { useSelector } from 'react-redux';\n\nimport { useIntl } from '@edx/frontend-platform/i18n';\nimport { PageBanner } from '@edx/paragon';\n\nimport { RequestStatus } from '../../data/constants';\nimport { selectconfigLoadingStatus, selectIsPostingEnabled } from '../data/selectors';\nimport messages from '../messages';\n\nconst DiscussionsRestrictionBanner = () => {\n  const intl = useIntl();\n  const isPostingEnabled = useSelector(selectIsPostingEnabled);\n  const configLoadingStatus = useSelector(selectconfigLoadingStatus);\n  const [showBanner, setShowBanner] = useState(true);\n\n  const handleDismiss = useCallback(() => {\n    setShowBanner(false);\n  }, []);\n\n  return (\n    <PageBanner\n      variant=\"accentB\"\n      show={!isPostingEnabled && showBanner && configLoadingStatus === RequestStatus.SUCCESSFUL}\n      dismissible\n      onDismiss={handleDismiss}\n    >\n      <div className=\"font-weight-500\">\n        {intl.formatMessage(messages.blackoutDiscussionInformation)}\n      </div>\n    </PageBanner>\n  );\n};\n\nexport default DiscussionsRestrictionBanner;\n"],"names":["VARIANTS","PageBanner","_ref","children","dismissible","dismissAltText","onDismiss","show","variant","React","className","classNames","role","IconButton","onClick","iconAs","Icon","alt","src","Close","size","invertColors","propTypes","PropTypes","defaultProps","undefined","DiscussionsRestrictionBanner","intl","useIntl","isPostingEnabled","useSelector","selectIsPostingEnabled","configLoadingStatus","selectconfigLoadingStatus","showBanner","setShowBanner","useState","handleDismiss","useCallback","_jsx","RequestStatus","formatMessage","messages"],"sourceRoot":""}