{"version":3,"file":"912.44df93da4a6bb471ce9b.js","mappings":"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","sources":["webpack://@edx/frontend-app-discussions/./src/discussions/post-comments/comments/CommentsView.jsx"],"sourcesContent":["import React, { useCallback, useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useIntl } from '@edx/frontend-platform/i18n';\nimport { Button, Spinner } from '@edx/paragon';\n\nimport { EndorsementStatus } from '../../../data/constants';\nimport { useUserPostingEnabled } from '../../data/hooks';\nimport { isLastElementOfList } from '../../utils';\nimport { usePostComments } from '../data/hooks';\nimport messages from '../messages';\nimport { PostCommentsContext } from '../postCommentsContext';\nimport { Comment, ResponseEditor } from './comment';\n\nconst CommentsView = ({ endorsed }) => {\n  const intl = useIntl();\n  const [addingResponse, setAddingResponse] = useState(false);\n  const { isClosed } = useContext(PostCommentsContext);\n  const isUserPrivilagedInPostingRestriction = useUserPostingEnabled();\n\n  const {\n    endorsedCommentsIds,\n    unEndorsedCommentsIds,\n    hasMorePages,\n    isLoading,\n    handleLoadMoreResponses,\n  } = usePostComments(endorsed);\n\n  const handleAddResponse = useCallback(() => {\n    setAddingResponse(true);\n  }, []);\n\n  const handleCloseResponseEditor = useCallback(() => {\n    setAddingResponse(false);\n  }, []);\n\n  const handleDefinition = useCallback((message, commentsLength) => (\n    <div\n      className=\"comment-line mx-4 my-14px text-gray-700 font-style\"\n      role=\"heading\"\n      aria-level=\"2\"\n    >\n      {intl.formatMessage(message, { num: commentsLength })}\n    </div>\n  ), []);\n\n  const handleComments = useCallback((postCommentsIds, showLoadMoreResponses = false) => (\n    <div className=\"mx-4\" role=\"list\">\n      {postCommentsIds.map((commentId) => (\n        <Comment\n          commentId={commentId}\n          key={commentId}\n          marginBottom={isLastElementOfList(postCommentsIds, commentId)}\n        />\n      ))}\n      {hasMorePages && !isLoading && !showLoadMoreResponses && (\n        <Button\n          onClick={handleLoadMoreResponses}\n          variant=\"link\"\n          block=\"true\"\n          className=\"px-4 mt-3 border-0 line-height-24 py-0 mb-2 font-style font-weight-500 font-size-14\"\n          data-testid=\"load-more-comments\"\n        >\n          {intl.formatMessage(messages.loadMoreResponses)}\n        </Button>\n      )}\n      {isLoading && !showLoadMoreResponses && (\n        <div className=\"mb-2 mt-3 d-flex justify-content-center\">\n          <Spinner animation=\"border\" variant=\"primary\" className=\"spinner-dimentions\" />\n        </div>\n      )}\n    </div>\n  ), [hasMorePages, isLoading, handleLoadMoreResponses]);\n\n  return (\n    // eslint-disable-next-line react/jsx-no-useless-fragment\n    <>\n      {((hasMorePages && isLoading) || !isLoading) && (\n        <>\n          {endorsedCommentsIds.length > 0 && (\n            <>\n              {handleDefinition(messages.endorsedResponseCount, endorsedCommentsIds.length)}\n              {endorsed === EndorsementStatus.DISCUSSION\n                ? handleComments(endorsedCommentsIds, true)\n                : handleComments(endorsedCommentsIds, false)}\n            </>\n          )}\n          {endorsed !== EndorsementStatus.ENDORSED && (\n            <>\n              {handleDefinition(messages.responseCount, unEndorsedCommentsIds.length)}\n              {unEndorsedCommentsIds.length === 0 && <br />}\n              {handleComments(unEndorsedCommentsIds, false)}\n              {(isUserPrivilagedInPostingRestriction && !!unEndorsedCommentsIds.length && !isClosed) && (\n                <div className=\"mx-4\">\n                  {!addingResponse && (\n                    <Button\n                      variant=\"plain\"\n                      block=\"true\"\n                      className=\"card mb-4 px-0 border-0 py-10px mt-2 font-style font-weight-500\n                      line-height-24 font-size-14 text-primary-500\"\n                      onClick={handleAddResponse}\n                      data-testid=\"add-response\"\n                    >\n                      {intl.formatMessage(messages.addResponse)}\n                    </Button>\n                  )}\n                  <ResponseEditor\n                    addWrappingDiv\n                    addingResponse={addingResponse}\n                    handleCloseEditor={handleCloseResponseEditor}\n                  />\n                </div>\n              )}\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nCommentsView.propTypes = {\n  endorsed: PropTypes.oneOf([\n    EndorsementStatus.ENDORSED, EndorsementStatus.UNENDORSED, EndorsementStatus.DISCUSSION,\n  ]).isRequired,\n};\n\nexport default React.memo(CommentsView);\n"],"names":["CommentsView","_ref","endorsed","intl","useIntl","addingResponse","setAddingResponse","useState","isClosed","useContext","PostCommentsContext","isUserPrivilagedInPostingRestriction","useUserPostingEnabled","endorsedCommentsIds","unEndorsedCommentsIds","hasMorePages","isLoading","handleLoadMoreResponses","usePostComments","handleAddResponse","useCallback","handleCloseResponseEditor","handleDefinition","message","commentsLength","_jsx","className","role","children","formatMessage","num","handleComments","postCommentsIds","showLoadMoreResponses","arguments","length","undefined","_jsxs","map","commentId","Comment","marginBottom","isLastElementOfList","Button","onClick","variant","block","messages","Spinner","animation","_Fragment","EndorsementStatus","ResponseEditor","addWrappingDiv","handleCloseEditor","propTypes","PropTypes","isRequired","React"],"sourceRoot":""}