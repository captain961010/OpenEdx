{"version":3,"file":"770.0f64828582b09ec6f46d.js","mappings":"0TAEA,MAaA,GAbiBA,E,SAAAA,IAAe,CAC9BC,UAAW,CACTC,GAAI,kDACJC,eAAgB,SAChBC,YAAa,oCAEfC,QAAS,CACPH,GAAI,gDACJC,eAAgB,WAChBC,YAAa,6D,eCDjB,MAAME,EAAqBC,IAQrB,IARsB,YAC1BC,EAAW,YACXC,EAAW,MACXC,EAAK,aACLC,EAAY,cACZC,EAAa,eACbC,EAAc,eACdC,GACDP,EACC,MACMQ,GADOC,EAAAA,EAAAA,KACWC,cAAcC,EAAAA,SAEtC,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAc,CACbC,MAAOT,EAAcJ,IAAgBO,EACrCO,QAAQ,UAASC,SAAA,EAEjBC,EAAAA,EAAAA,KAACC,EAAAA,GAAAA,KAAa,CAEZC,QAASlB,EACTmB,GAAIC,EAAAA,GACJC,GAAIpB,EAAYc,SAEfR,GALG,QAOLL,GAASA,GAAOoB,KAAIC,IACC,OAAnBjB,GAA2BA,EAAeiB,MAC3CP,EAAAA,EAAAA,KAACC,EAAAA,GAAAA,KAAa,CAEZC,OAAQb,EAAekB,GACvBJ,GAAIC,EAAAA,GACJC,GAAIlB,EAAaoB,GAAMR,SAEtBX,EAAcmB,IALVnB,EAAcmB,QASR,EAIrBzB,EAAmB0B,UAAY,CAE7BxB,YAAayB,IAAAA,IACbxB,YAAawB,IAAAA,KAAAA,WAEbvB,MAAOuB,IAAAA,MAAAA,WACPtB,aAAcsB,IAAAA,KAAAA,WACdrB,cAAeqB,IAAAA,KAAAA,WACfpB,eAAgBoB,IAAAA,KAAAA,WAChBnB,eAAgBmB,IAAAA,MAGlB3B,EAAmB4B,aAAe,CAChC1B,YAAa,KACbM,eAAgB,MAGlB,QAAeqB,EAAAA,KAAW7B,GC+C1B,EApG6B8B,KAC3B,MACEC,QAAQ,SACNC,EAAQ,SACRC,EACAC,QAASC,KAETC,EAAAA,EAAAA,IAAc,CAACC,EAAAA,GAAAA,OAAAA,SAAwBA,EAAAA,GAAAA,OAAAA,QACrCC,GAAeC,EAAAA,EAAAA,KAAYC,EAAAA,EAAAA,IAAYL,IACvCM,EAAkBR,GAAYK,GAAcI,WAC5CC,EAAyBC,OAAOH,GAAiBI,QAAQ,MAAO,KAChEC,GAAmBP,EAAAA,EAAAA,KAAYQ,EAAAA,EAAAA,IAAuBJ,IACtDK,GAAsBT,EAAAA,EAAAA,IAAYU,EAAAA,IAClCC,GAAaX,EAAAA,EAAAA,IAAYY,EAAAA,IACzBC,EAAuBd,IAAiBG,EAExCY,GAAyBC,EAAAA,EAAAA,cAAa7B,GAC1CA,GAAM8B,MACL,IAEGC,GAAsBF,EAAAA,EAAAA,cAAaG,GACvCA,GAAO7D,KAAOuC,GACb,CAACA,IAEEuB,GAAwBJ,EAAAA,EAAAA,cAAaG,IACzCE,EAAAA,EAAAA,IAAgBtB,EAAAA,GAAAA,OAAAA,MAAqB,CACnCL,WACAE,QAASuB,EAAM7D,MAEhB,CAACoC,IAEE4B,GAAsBN,EAAAA,EAAAA,cAAaO,GACvCA,GACC,IAEGC,GAAmBR,EAAAA,EAAAA,cAAaO,GACpCA,IAAUpB,GACT,CAACN,IAEE4B,GAAqBT,EAAAA,EAAAA,cAAaO,IACtCF,EAAAA,EAAAA,IAAgBtB,EAAAA,GAAAA,OAAAA,SAAwB,CACtCL,WACAC,SAAU4B,KAEX,CAAC7B,IAEEgC,GAAoBV,EAAAA,EAAAA,cAAa7B,GAASA,GAAM8B,MAAM,IAEtDU,GAAiBX,EAAAA,EAAAA,cAAaG,GAClCA,GAAO7D,KAAOuC,GACb,CAACA,IAEE+B,GAAmBZ,EAAAA,EAAAA,cAAaG,IACpCE,EAAAA,EAAAA,IAAgBtB,EAAAA,GAAAA,OAAAA,MAAqB,CACnCL,WACAE,QAASuB,EAAM7D,MAEhB,CAACoC,IAEJ,OACEnB,EAAAA,EAAAA,MAAA,OAAKsD,UAAU,6EAA4ElD,SAAA,CACxFmC,GACClC,EAAAA,EAAAA,KAAClB,EAAkB,CACjBE,YAAaoC,EACbhC,cAAe+C,EACf9C,eAAgBiD,EAChBpD,MAAO4C,EACP7C,aAAawD,EAAAA,EAAAA,IAAgBtB,EAAAA,GAAAA,OAAAA,IAAmB,CAAEL,aAClD3B,aAAcqD,KAGhBxC,EAAAA,EAAAA,KAAClB,EAAkB,CACjBE,YAAayC,EACbrC,cAAesD,EACfrD,eAAgBuD,EAChB1D,MAAO8C,EACP/C,aAAawD,EAAAA,EAAAA,IAAgBtB,EAAAA,GAAAA,OAAAA,IAAmB,CAAEL,aAClD3B,aAAc0D,IAGjBtB,IACC5B,EAAAA,EAAAA,MAAAuD,EAAAA,SAAA,CAAAnD,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAKiD,UAAU,cAAalD,SAAC,OAC7BC,EAAAA,EAAAA,KAAClB,EAAkB,CACjBE,YAAaoC,EACbhC,cAAe0D,EACfzD,eAAgB0D,EAChB7D,MAAO0C,EACP3C,aAAawD,EAAAA,EAAAA,IAAgBtB,EAAAA,GAAAA,OAAAA,SAAwB,CACnDL,WACAC,SAAUQ,IAEZpC,aAAc6D,SAIhB,C","sources":["webpack://@edx/frontend-app-discussions/./src/discussions/navigation/breadcrumb-menu/messages.js","webpack://@edx/frontend-app-discussions/./src/discussions/navigation/breadcrumb-menu/BreadcrumbDropdown.jsx","webpack://@edx/frontend-app-discussions/./src/discussions/navigation/breadcrumb-menu/LegacyBreadcrumbMenu.jsx"],"sourcesContent":["import { defineMessages } from '@edx/frontend-platform/i18n';\n\nconst messages = defineMessages({\n  allTopics: {\n    id: 'discussions.navigation.breadcrumbMenu.allTopics',\n    defaultMessage: 'Topics',\n    description: 'Topics from Breadcrumb Menu item',\n  },\n  showAll: {\n    id: 'discussions.navigation.breadcrumbMenu.showAll',\n    defaultMessage: 'Show all',\n    description: 'Option to show all items in a section of the breadcrumb',\n  },\n});\n\nexport default messages;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Link } from 'react-router-dom';\n\nimport { useIntl } from '@edx/frontend-platform/i18n';\nimport { Dropdown, DropdownButton } from '@edx/paragon';\n\nimport messages from './messages';\n\nconst BreadcrumbDropdown = ({\n  currentItem,\n  showAllPath,\n  items,\n  itemPathFunc,\n  itemLabelFunc,\n  itemActiveFunc,\n  itemFilterFunc,\n}) => {\n  const intl = useIntl();\n  const showAllMsg = intl.formatMessage(messages.showAll);\n\n  return (\n    <DropdownButton\n      title={itemLabelFunc(currentItem) || showAllMsg}\n      variant=\"outline\"\n    >\n      <Dropdown.Item\n        key=\"null\"\n        active={!currentItem}\n        as={Link}\n        to={showAllPath}\n      >\n        {showAllMsg}\n      </Dropdown.Item>\n      {items && items?.map(item => (\n        (itemFilterFunc === null || itemFilterFunc(item)) && (\n        <Dropdown.Item\n          key={itemLabelFunc(item)}\n          active={itemActiveFunc(item)}\n          as={Link}\n          to={itemPathFunc(item)}\n        >\n          {itemLabelFunc(item)}\n        </Dropdown.Item>\n        )\n      ))}\n    </DropdownButton>\n  );\n};\n\nBreadcrumbDropdown.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  currentItem: PropTypes.any,\n  showAllPath: PropTypes.func.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  items: PropTypes.array.isRequired,\n  itemPathFunc: PropTypes.func.isRequired,\n  itemLabelFunc: PropTypes.func.isRequired,\n  itemActiveFunc: PropTypes.func.isRequired,\n  itemFilterFunc: PropTypes.func,\n};\n\nBreadcrumbDropdown.defaultProps = {\n  currentItem: null,\n  itemFilterFunc: null,\n};\n\nexport default React.memo(BreadcrumbDropdown);\n","import React, { useCallback } from 'react';\n\nimport { useSelector } from 'react-redux';\nimport { useRouteMatch } from 'react-router';\n\nimport { Routes } from '../../../data/constants';\nimport {\n  selectCategories,\n  selectNonCoursewareTopics,\n  selectTopic,\n  selectTopicsInCategory,\n} from '../../topics/data/selectors';\nimport { discussionsPath } from '../../utils';\nimport BreadcrumbDropdown from './BreadcrumbDropdown';\n\nconst LegacyBreadcrumbMenu = () => {\n  const {\n    params: {\n      courseId,\n      category,\n      topicId: currentTopicId,\n    },\n  } = useRouteMatch([Routes.TOPICS.CATEGORY, Routes.TOPICS.TOPIC]);\n  const currentTopic = useSelector(selectTopic(currentTopicId));\n  const currentCategory = category || currentTopic?.categoryId;\n  const decodedCurrentCategory = String(currentCategory).replace('%23', '#');\n  const topicsInCategory = useSelector(selectTopicsInCategory(decodedCurrentCategory));\n  const nonCoursewareTopics = useSelector(selectNonCoursewareTopics);\n  const categories = useSelector(selectCategories);\n  const isNonCoursewareTopic = currentTopic && !currentCategory;\n\n  const nonCoursewareItemLabel = useCallback((item) => (\n    item?.name\n  ), []);\n\n  const nonCoursewareActive = useCallback((topic) => (\n    topic?.id === currentTopicId\n  ), [currentTopicId]);\n\n  const nonCoursewareItemPath = useCallback((topic) => (\n    discussionsPath(Routes.TOPICS.TOPIC, {\n      courseId,\n      topicId: topic.id,\n    })\n  ), [courseId]);\n\n  const coursewareItemLabel = useCallback((catId) => (\n    catId\n  ), []);\n\n  const coursewareActive = useCallback((catId) => (\n    catId === currentCategory\n  ), [currentTopicId]);\n\n  const coursewareItemPath = useCallback((catId) => (\n    discussionsPath(Routes.TOPICS.CATEGORY, {\n      courseId,\n      category: catId,\n    })\n  ), [courseId]);\n\n  const categoryItemLabel = useCallback((item) => item?.name, []);\n\n  const categoryActive = useCallback((topic) => (\n    topic?.id === currentTopicId\n  ), [currentTopicId]);\n\n  const categoryItemPath = useCallback((topic) => (\n    discussionsPath(Routes.TOPICS.TOPIC, {\n      courseId,\n      topicId: topic.id,\n    })\n  ), [courseId]);\n\n  return (\n    <div className=\"breadcrumb-menu d-flex flex-row bg-light-200 box-shadow-down-1 px-2.5 py-1\">\n      {isNonCoursewareTopic ? (\n        <BreadcrumbDropdown\n          currentItem={currentTopic}\n          itemLabelFunc={nonCoursewareItemLabel}\n          itemActiveFunc={nonCoursewareActive}\n          items={nonCoursewareTopics}\n          showAllPath={discussionsPath(Routes.TOPICS.ALL, { courseId })}\n          itemPathFunc={nonCoursewareItemPath}\n        />\n      ) : (\n        <BreadcrumbDropdown\n          currentItem={decodedCurrentCategory}\n          itemLabelFunc={coursewareItemLabel}\n          itemActiveFunc={coursewareActive}\n          items={categories}\n          showAllPath={discussionsPath(Routes.TOPICS.ALL, { courseId })}\n          itemPathFunc={coursewareItemPath}\n        />\n      )}\n      {currentCategory && (\n        <>\n          <div className=\"d-flex py-2\">/</div>\n          <BreadcrumbDropdown\n            currentItem={currentTopic}\n            itemLabelFunc={categoryItemLabel}\n            itemActiveFunc={categoryActive}\n            items={topicsInCategory}\n            showAllPath={discussionsPath(Routes.TOPICS.CATEGORY, {\n              courseId,\n              category: currentCategory,\n            })}\n            itemPathFunc={categoryItemPath}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default LegacyBreadcrumbMenu;\n"],"names":["defineMessages","allTopics","id","defaultMessage","description","showAll","BreadcrumbDropdown","_ref","currentItem","showAllPath","items","itemPathFunc","itemLabelFunc","itemActiveFunc","itemFilterFunc","showAllMsg","useIntl","formatMessage","messages","_jsxs","DropdownButton","title","variant","children","_jsx","Dropdown","active","as","Link","to","map","item","propTypes","PropTypes","defaultProps","React","LegacyBreadcrumbMenu","params","courseId","category","topicId","currentTopicId","useRouteMatch","Routes","currentTopic","useSelector","selectTopic","currentCategory","categoryId","decodedCurrentCategory","String","replace","topicsInCategory","selectTopicsInCategory","nonCoursewareTopics","selectNonCoursewareTopics","categories","selectCategories","isNonCoursewareTopic","nonCoursewareItemLabel","useCallback","name","nonCoursewareActive","topic","nonCoursewareItemPath","discussionsPath","coursewareItemLabel","catId","coursewareActive","coursewareItemPath","categoryItemLabel","categoryActive","categoryItemPath","className","_Fragment"],"sourceRoot":""}